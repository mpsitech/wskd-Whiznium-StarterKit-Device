IexWdbeFin v1.1.9
ImeIMUnit.sref
arty
	ImeIMBank.srefIxWdbeVIop	sref	srefKVoltstd
	retrupd	bank34	_3v3
		ImeICPin.iref
		1
		2
		3
		4
		5
		6
		ImeICPin.end
		ImeIMPin.srefIxWdbeVIop	irefRefWdbeCPin	sref	Location	Arty	Arty Schematic
		retrupd	0	csi_clk_lp	V17	J3[0]	CK_IO8
		retrupd	0	csi_d0_lp	V18	J3[2]	CK_IO9
		retrupd	1	sda	T16	J3[4]	CK_IO10
		retrupd	1	scl	R17	J3[6]	CK_IO11
		retrupd	0	flsh	P18	J3[8]	CK_IO12
		retrupd	0	trig	N17	J3[10]	CK_IO13
		retrupd	0	pmnd_txd	W15		CK_MISO
		retrupd	2	csi_clk_p	N18
		retrupd	2	csi_clk_n	P19
		retrupd	3	csi_d0_p	V20
		retrupd	3	csi_d0_n	W20
		retrupd	4	csi_d1_p	T20
		retrupd	4	csi_d1_n	U20
		retrupd	0	csi_clk_lp_alt	Y18	JA[0]	JA1_P
		retrupd	0	csi_d0_lp_alt	U18	JA[1]	JA3_P
		retrupd	0	sda_alt	Y19	JA[2]	JA1_N
		retrupd	0	scl_alt	U19	JA[3]	JA3_N
		retrupd	0	flsh_alt	Y16	JA[4]	JA2_P
		retrupd	0	trig_alt	W18	JA[5]	JA4_P
		retrupd	0	JA2_N	Y17	JA[6]	JA2_N
		retrupd	0	JA4_N	W19	JA[7]	JA4_N
		retrupd	5	cs	W14	JB[0]	JB1_P
		retrupd	5	sclk	V16	JB[1]	JB3_P
		retrupd	5	mosi	Y14	JB[2]	JB1_N
		retrupd	0	nslp	W16	JB[3]	JB3_N
		retrupd	0	nflt	T11	JB[4]	JB2_P
		retrupd	0	m0	V12	JB[5]	JB4_P
		retrupd	0	dir	T10	JB[6]	JB2_N
		retrupd	0	step0	W13	JB[7]	JB4_N
		retrupd	0	led[0]	R14
		retrupd	0	led[1]	P14
		retrupd	6	dbg0	T14	J4[0]	CK_IO0
		retrupd	6	dbg1	U12	J4[2]	CK_IO1
		retrupd	6	dbg2	U13	J4[4]	CK_IO2
		retrupd	6	dbg3	V13	J4[6]	CK_IO3
		retrupd	6	dbg4	V15	J4[8]	CK_IO4
		retrupd	6	dbg5	T15	J4[10]	CK_IO5
		retrupd	6	dbg6	R16	J4[12]	CK_IO6
		retrupd	6	dbg7	U17	J4[14]	CK_IO7
		ImeIMPin.end
	retrupd	bank35	_3v3
		ImeICPin.iref
		1
		2
		ImeICPin.end
		ImeIMPin.srefIxWdbeVIop	irefRefWdbeCPin	sref	Location
		retrupd	0	extclk	H16
		retrupd	0	pmnd_rxd	H15		CK_SCK
		retrupd	0	led[2]	N16
		retrupd	0	led[3]	M14
		retrupd	1	led4_b	L15
		retrupd	1	led4_g	G17
		retrupd	1	led4_r	N15
		retrupd	2	led5_b	G14
		retrupd	2	led5_g	L14
		retrupd	2	led5_r	M15
		retrupd	0	btn0	D20
		retrupd	0	btn1	D19
		ImeIMPin.end
	ImeIMBank.end
	ImeIMModule.hsrefSupRefWdbeMModule	sref
	arty_ip_AXI	top
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		ins	0	rtepin	sw	in	slvdn	2			sw
		ins	0	rtepin	led	out	slvdn	4			led
		ImeIMPort.end
		ImeICSignal2.iref
		1
		2
		ImeICSignal2.end
		ImeIMSignal2.srefIxVBasetype	irefRefWdbeCSignal	srefMgeIxVTbl	srefMgeUref	sref	Const	srefWdbeKHdltype	Width	Minmax	Comb	Onval	Offval	Defon	srefDrvRefWdbeMPort	Comment
		oth	0	mdl	hostif	commok	false	sl	1					false
		oth	0	mdl	camif	camrng	false	sl	1					false
		oth	0	mdl	tkclksrc	tkclk	false	sl	1					false
		oth	0	mdl	debounceBtn0	btn0_sig	false	sl	1					false
		hshk	0	mdl	debounceBtn1	reqResetBtn1	false	sl	1					false
		oth	0	mdl	state	rgb4	false	slvdn	24					false
		oth	0	void		rgb5	false	slvdn	24					false
		oth	0	void		camacqRxclk_dbg	false	slvdn	6					false
		oth	0	void		featdetStrb_dbg	false	slvdn	4					false
		oth	1	void		bcddbg0	false	slvdn	8					false
		oth	1	void		bcddbg1	false	slvdn	8					false
		oth	1	void		bcddbg2	false	slvdn	8					false
		oth	1	void		bcddbg3	false	slvdn	8					false
		oth	1	void		bcddbg4	false	slvdn	8					false
		oth	1	void		bcddbg5	false	slvdn	8					false
		ImeIMSignal2.end
	arty_ip_AXI;top	bcdfreqDbg0
		ImeIMGeneric.srefIxWdbeVIop	irefRefWdbeCGeneric	sref	srefWdbeKHdltype	Width	Minmax	Defval	srcSrefWdbeMGeneric	Comment
		retrupd	0	fMclk					fMclk
		ImeIMGeneric.end
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		reset								reset
		retrupd	0		mclk								mclk
		retrupd	0		high								bcddbg0[7..4]
		retrupd	0		low								bcddbg0[3..0]
		retrupd	0		freq						dbg0
		ImeIMPort.end
	arty_ip_AXI;top	bcdfreqDbg1
		ImeIMGeneric.srefIxWdbeVIop	irefRefWdbeCGeneric	sref	srefWdbeKHdltype	Width	Minmax	Defval	srcSrefWdbeMGeneric	Comment
		retrupd	0	fMclk					fMclk
		ImeIMGeneric.end
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		reset								reset
		retrupd	0		mclk								mclk
		retrupd	0		high								bcddbg1[7..4]
		retrupd	0		low								bcddbg1[3..0]
		retrupd	0		freq						dbg1
		ImeIMPort.end
	arty_ip_AXI;top	bcdfreqDbg2
		ImeIMGeneric.srefIxWdbeVIop	irefRefWdbeCGeneric	sref	srefWdbeKHdltype	Width	Minmax	Defval	srcSrefWdbeMGeneric	Comment
		retrupd	0	fMclk					fMclk
		ImeIMGeneric.end
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		reset								reset
		retrupd	0		mclk								mclk
		retrupd	0		high								bcddbg2[7..4]
		retrupd	0		low								bcddbg2[3..0]
		retrupd	0		freq						dbg2
		ImeIMPort.end
	arty_ip_AXI;top	bcdfreqDbg3
		ImeIMGeneric.srefIxWdbeVIop	irefRefWdbeCGeneric	sref	srefWdbeKHdltype	Width	Minmax	Defval	srcSrefWdbeMGeneric	Comment
		retrupd	0	fMclk					fMclk
		ImeIMGeneric.end
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		reset								reset
		retrupd	0		mclk								mclk
		retrupd	0		high								bcddbg3[7..4]
		retrupd	0		low								bcddbg3[3..0]
		retrupd	0		freq						dbg3
		ImeIMPort.end
	arty_ip_AXI;top	bcdfreqDbg4
		ImeIMGeneric.srefIxWdbeVIop	irefRefWdbeCGeneric	sref	srefWdbeKHdltype	Width	Minmax	Defval	srcSrefWdbeMGeneric	Comment
		retrupd	0	fMclk					fMclk
		ImeIMGeneric.end
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		reset								reset
		retrupd	0		mclk								mclk
		retrupd	0		high								bcddbg4[7..4]
		retrupd	0		low								bcddbg4[3..0]
		retrupd	0		freq						dbg4
		ImeIMPort.end
	arty_ip_AXI;top	bcdfreqDbg5
		ImeIMGeneric.srefIxWdbeVIop	irefRefWdbeCGeneric	sref	srefWdbeKHdltype	Width	Minmax	Defval	srcSrefWdbeMGeneric	Comment
		retrupd	0	fMclk					fMclk
		ImeIMGeneric.end
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		reset								reset
		retrupd	0		mclk								mclk
		retrupd	0		high								bcddbg5[7..4]
		retrupd	0		low								bcddbg5[3..0]
		retrupd	0		freq						dbg5
		ImeIMPort.end
	arty_ip_AXI;top	debounceBtn0
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		reset								reset
		retrupd	0		mclk								mclk
		retrupd	0		tkclk								tkclk
		retrupd	0		noisy						btn0
		retrupd	0		clean								btn0_sig
		ImeIMPort.end
	arty_ip_AXI;top	debounceBtn1
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		reset								reset
		retrupd	0		mclk								mclk
		retrupd	0		tkclk								tkclk
		retrupd	0		noisy						btn1
		retrupd	0		clean								reqResetBtn1
		ImeIMPort.end
	arty_ip_AXI;top	rgbled4
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		ins	0	reset	reset	in	sl	1					reset
		ins	0	clk	mclk	in	sl	1					mclk
		ins	0	clk	tkclk	in	sl	1					tkclk
		ins	0	rtetop	rgb	in	slvdn	24					rgb4
		ins	0	rtepin	r	out	sl	1			led4_r
		ins	0	rtepin	g	out	sl	1			led4_g
		ins	0	rtepin	b	out	sl	1			led4_b
		ImeIMPort.end
		ImeIMProcess.sref	clkSrefWdbeMSignal	asrSrefWdbeMSignal	Falling	Syncrst	Extip	Comment
		red	tkclk	reset				red LED PWM
			ImeIMFsm.
			
				ImeIMFsmstate.irefRefWdbeCFsmstate	sref	Extip	Comment
				0	on	false
				0	off	false
				ImeIMFsmstate.end
			ImeIMFsm.end
		green	tkclk	reset				green LED PWM
			ImeIMFsm.
			
				ImeIMFsmstate.irefRefWdbeCFsmstate	sref	Extip	Comment
				0	on	false
				0	off	false
				ImeIMFsmstate.end
			ImeIMFsm.end
		blue	tkclk	reset				blue LED PWM
			ImeIMFsm.
			
				ImeIMFsmstate.irefRefWdbeCFsmstate	sref	Extip	Comment
				0	on	false
				0	off	false
				ImeIMFsmstate.end
			ImeIMFsm.end
		ImeIMProcess.end
	arty_ip_AXI;top	rgbled5
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		ins	0	reset	reset	in	sl	1					reset
		ins	0	clk	mclk	in	sl	1					mclk
		ins	0	clk	tkclk	in	sl	1					tkclk
		ins	0	rtetop	rgb	in	slvdn	24					rgb5
		ins	0	rtepin	r	out	sl	1			led5_r
		ins	0	rtepin	g	out	sl	1			led5_g
		ins	0	rtepin	b	out	sl	1			led5_b
		ImeIMPort.end
		ImeIMProcess.sref	clkSrefWdbeMSignal	asrSrefWdbeMSignal	Falling	Syncrst	Extip	Comment
		red	tkclk	reset				red LED PWM
			ImeIMFsm.
			
				ImeIMFsmstate.irefRefWdbeCFsmstate	sref	Extip	Comment
				0	on	false
				0	off	false
				ImeIMFsmstate.end
			ImeIMFsm.end
		green	tkclk	reset				green LED PWM
			ImeIMFsm.
			
				ImeIMFsmstate.irefRefWdbeCFsmstate	sref	Extip	Comment
				0	on	false
				0	off	false
				ImeIMFsmstate.end
			ImeIMFsm.end
		blue	tkclk	reset				blue LED PWM
			ImeIMFsm.
			
				ImeIMFsmstate.irefRefWdbeCFsmstate	sref	Extip	Comment
				0	on	false
				0	off	false
				ImeIMFsmstate.end
			ImeIMFsm.end
		ImeIMProcess.end
	arty_ip_AXI;top	hostif
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		reset								reset
		retrupd	0		mclk								mclk
		retrupd	0		tkclk								tkclk
		retrupd	0		commok								commok
		retrupd	0		rdyRx						rdyRx
		retrupd	0		enRx						enRx
		retrupd	0		rx						rx
		retrupd	0		strbRx						strbRx
		retrupd	0		rdyTx						rdyTx
		retrupd	0		enTx						enTx
		retrupd	0		tx						tx
		retrupd	0		strbTx						strbTx
		ImeIMPort.end
	arty_ip_AXI;top	camacq
		ImeICPort.iref
		1
		2
		ImeICPort.end
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		ins	0	reset	reset	in	sl	1					reset
		ins	0	clk	mclk	in	sl	1					mclk
		ins	1	rtepin	csi_d0_p	in	sl	1			csi_d0_p
		ins	1	rtepin	csi_d0_n	in	sl	1			csi_d0_n
		ins	2	rtepin	csi_d1_p	in	sl	1			csi_d1_p
		ins	2	rtepin	csi_d1_n	in	sl	1			csi_d1_n
		ins	0	dbg	rxclk_dbg	out	sl	1					camacqRxclk_dbg
		ImeIMPort.end
		ImeICSignal2.iref
		1
		2
		3
		4
		5
		6
		7
		8
		9
		10
		11
		12
		13
		14
		15
		16
		17
		18
		19
		20
		21
		22
		23
		24
		25
		26
		27
		28
		29
		30
		31
		32
		33
		34
		35
		36
		37
		38
		39
		40
		41
		42
		ImeICSignal2.end
		ImeIMSignal2.srefIxVBasetype	irefRefWdbeCSignal	srefMgeIxVTbl	srefMgeUref	sref	Const	srefWdbeKHdltype	Width	Minmax	Comb	Onval	Offval	Defon	srefDrvRefWdbeMPort	Comment
		oprt	1	prc	grrd	tixVGrrdbufstate	false	slvdn	8				tixVGrrdbufstateIdle	false	getGrrdinfoTixVGrrdbufstate
		oprt	1	prc	grrd	grrdTkst	false	slvdn	32				0	false	getGrrdinfoTkst
		oth	0	prc	grrd	grrdbuf	false	grrdbuf_t					grrdbufAb	false
		oth	2	prc	grrd	enGrrdabbuf	false	sl	1		grrdbuf=grrdbufAb and state(store)	1	0	false
		oth	2	prc	grrd	enGrrdcdbuf	false	sl	1		grrdbuf=grrdbufCd and state(store)	1	0	false
		oth	2	prc	grrd	enGrrdefbuf	false	sl	1		grrdbuf=grrdbufEf and state(store)	1	0	false
		oth	3	prc	grrd	aGrrdbuf_vec	false	slvdn	11					false
		oth	3	prc	grrd	aGrrdbuf	false	nat		0..2048			0	false
		oth	0	prc	grrd	dwrGrrdbuf	false	slvdn	8				0	false
		oth	0	prc	grrd	grrdaccrun	false	sl	1		state(ready;store)	1	0	false
		oprt	0	prc	grrdabbufB	ackGrrdabbufToFeatdet	false	sl	1				0	false	ackGrrdabbufToFeatdet
		oth	0	prc	grrdabbufB	enGrrdabbufB	false	sl	1		!strbDGrrdabbufToFeatdet and state(readA)	1	0	false
		oth	4	prc	grrdabbufB	aGrrdabbufB_vec	false	slvdn	11					false
		oth	4	prc	grrdabbufB	aGrrdabbufB	false	nat		0..2048			0	false
		oth	5	prc	grrdacc	dGrrdacc	false	slvdn	8				0	false
		strb	5	prc	grrdacc	strbDGrrdacc	false	sl	1				0	false
		oth	0	prc	grrdacc	enEvenbuf	false	sl	1		state(LASA..D)	1	0	false
		oth	0	prc	grrdacc	weEvenbuf	false	sl	1				0	false
		oth	6	prc	grrdacc	aEvenbuf_vec	false	slvdn	12					false
		oth	6	prc	grrdacc	aEvenbuf	false	nat		0..4096			0	false
		oth	0	prc	grrdacc	dwrEvenbuf	false	slvdn	8				0	false
		oprt	0	prc	grrdcdbufB	ackGrrdcdbufToFeatdet	false	sl	1				0	false	ackGrrdcdbufToFeatdet
		oth	0	prc	grrdcdbufB	enGrrdcdbufB	false	sl	1		!strbDGrrdcdbufToFeatdet and state(readA)	1	0	false
		oth	7	prc	grrdcdbufB	aGrrdcdbufB_vec	false	slvdn	11					false
		oth	7	prc	grrdcdbufB	aGrrdcdbufB	false	nat		0..2048			0	false
		oprt	0	prc	grrdefbufB	ackGrrdefbufToFeatdet	false	sl	1				0	false	ackGrrdefbufToFeatdet
		oth	0	prc	grrdefbufB	enGrrdefbufB	false	sl	1		!strbDGrrdefbufToFeatdet and state(readA)	1	0	false
		oth	8	prc	grrdefbufB	aGrrdefbufB_vec	false	slvdn	11					false
		oth	8	prc	grrdefbufB	aGrrdefbufB	false	nat		0..2048			0	false
		oprt	0	prc	op	ackInvSetGrrd	false	sl	1				0	false	ackInvSetGrrd
		oprt	0	prc	op	ackInvSetPvw	false	sl	1				0	false	ackInvSetPvw
		oth	0	prc	op	grrdrun	false	sl	1				0	false
		oth	0	prc	op	grrdRedNotGray	false	sl	1				0	false
		oth	0	prc	op	pvwrun	false	sl	1				0	false
		oth	0	prc	op	pvwacc	false	pvwacc_t					pvwaccBinrgb	false
		oth	9	prc	pvw	pvwTkstA	false	slvdn	32				0	false
		oth	9	prc	pvw	pvwTkstB	false	slvdn	32				0	false
		oth	0	prc	pvw	pvwLatestBNotA	false	sl	1				0	false
		oth	10	prc	pvw	enPvwabuf	false	sl	1		pvwabufLock=lockPvw and state(storeA..D)	1	0	false
		oth	10	prc	pvw	enPvwbbuf	false	sl	1		pvwbbufLock=lockPvw and state(storeA..D)	1	0	false
		oth	11	prc	pvw	aPvwbuf_vec	false	slvdn	16					false
		oth	11	prc	pvw	aPvwbuf	false	nat		0..57600			0	false
		oth	0	prc	pvw	dwrPvwbuf	false	slvdn	8				0	false
		oth	12	prc	pvw	pvwbingrayrun	false	sl	1		pvwacc=pvwaccBingray and state(ready;storeA..D)	1	0	false
		oth	12	prc	pvw	pvwbinrgbrun	false	sl	1		pvwacc=pvwaccBinrgb and state(ready;storeA..D)	1	0	false
		oth	12	prc	pvw	pvwrawgrayrun	false	sl	1		pvwacc=pvwaccRawgray and state(ready;storeA..D)	1	0	false
		oth	12	prc	pvw	pvwrawrgbrun	false	sl	1		pvwacc=pvwaccRawrgb and state(ready;storeA..D)	1	0	false
		oth	13	prc	pvwbingray	dPvwbingrayGr	false	slvdn	8				0	false
		strb	13	prc	pvwbingray	strbDPvwbingrayGr	false	sl	1				0	false
		oth	0	prc	pvwbingray	enBingraybuf	false	sl	1		state(LASB..C)	1	0	false
		oth	0	prc	pvwbingray	weBingraybuf	false	sl	1				0	false
		oth	14	prc	pvwbingray	aBingraybuf_vec	false	slvdn	11					false
		oth	14	prc	pvwbingray	aBingraybuf	false	nat		0..2048			0	false
		oth	0	prc	pvwbingray	dwrBingraybuf	false	slvdn	8				0	false
		oth	15	prc	pvwbinrgb	dPvwbinrgbRd	false	slvdn	8				0	false
		strb	15	prc	pvwbinrgb	strbDPvwbinrgbRd	false	sl	1				0	false
		oth	16	prc	pvwbinrgb	dPvwbinrgbGn	false	slvdn	8				0	false
		oth	16	prc	pvwbinrgb	dPvwbinrgbBl	false	slvdn	8				0	false
		strb	16	prc	pvwbinrgb	strbDPvwbinrgbGnBl	false	sl	1				0	false
		oth	0	prc	pvwbinrgb	enBinrgbbuf	false	sl	1		state(LASB..C)	1	0	false
		oth	0	prc	pvwbinrgb	weBinrgbbuf	false	sl	1				0	false
		oth	17	prc	pvwbinrgb	aBinrgbbuf_vec	false	slvdn	11					false
		oth	17	prc	pvwbinrgb	aBinrgbbuf	false	nat		0..2048			0	false
		oth	0	prc	pvwbinrgb	dwrBinrgbbuf	false	slvdn	8				0	false
		oth	18	prc	pvwbuf	pvwabufLock	false	lock_t					lockIdle	false
		oth	18	prc	pvwbuf	pvwabufFull	false	sl	1				0	false
		oth	19	prc	pvwbuf	pvwbbufLock	false	lock_t					lockIdle	false
		oth	19	prc	pvwbuf	pvwbbufFull	false	sl	1				0	false
		oth	20	prc	pvwbufB	enPvwabufB	false	sl	1		pvwabufLock=lockBufB and !strbDPvwabufToHostif and state(readA)	1	0	false
		oth	20	prc	pvwbufB	enPvwbbufB	false	sl	1		pvwbbufLock=lockBufB and !strbDPvwabufToHostif and state(readA)	1	0	false
		oth	21	prc	pvwbufB	aPvwbufB_vec	false	slvdn	14					false
		oth	21	prc	pvwbufB	aPvwbufB	false	nat		0..14400			0	false
		oprt	22	prc	pvwbufB	tixVPvwbufstate	false	slvdn	8				tixVPvwbufstateIdle	false	getPvwinfoTixVPvwbufstate
		oth	22	prc	pvwbufB	pvwtkst	false	slvdn	32				0	false	getPvwinfoTkst
		oth	23	prc	pvwbufB	ackPvwbufToHostif	false	sl	1				0	false
		oprt	23	prc	pvwbufB	ackPvwabufToHostif	false	sl	1		pvwabufLock=lockBufB	ackPvwbufToHostif	0	false	ackPvwabufToHostif
		oprt	23	prc	pvwbufB	ackPvwbbufToHostif	false	sl	1		pvwbbufLock=lockBufB	ackPvwbufToHostif	0	false	ackPvwbbufToHostif
		oth	24	prc	pvwrawgray	dPvwrawgrayGr	false	slvdn	8				0	false
		strb	24	prc	pvwrawgray	strbDPvwrawgrayGr	false	sl	1				0	false
		oth	0	prc	pvwrawgray	enRawgraybuf	false	sl	1		state(LASA..D)	1	0	false
		oth	0	prc	pvwrawgray	weRawgraybuf	false	sl	1				0	false
		oth	25	prc	pvwrawgray	aRawgraybuf_vec	false	slvdn	11					false
		oth	25	prc	pvwrawgray	aRawgraybuf	false	nat		0..2048			0	false
		oth	0	prc	pvwrawgray	dwrRawgraybuf	false	slvdn	8				0	false
		oth	26	prc	pvwrawrgb	dPvwrawrgbRd	false	slvdn	8				0	false
		strb	26	prc	pvwrawrgb	strbDPvwrawrgbRd	false	sl	1				0	false
		oth	27	prc	pvwrawrgb	dPvwrawrgbGn	false	slvdn	8				0	false
		oth	27	prc	pvwrawrgb	dPvwrawrgbBl	false	slvdn	8				0	false
		strb	27	prc	pvwrawrgb	strbDPvwrawrgbGnBl	false	sl	1				0	false
		oth	28	prc	sample	csid	false	slvdn	16				0	false
		oth	28	prc	sample	csidn	false	slvdn	16				0	false
		oth	0	prc	sample	d	false	slvdn	8				0	false
		oth	29	prc	tag	rowmax	true	nat					1944	false
		oth	29	prc	tag	row	false	nat		0..rowmax			0	false
		oth	30	prc	tag	row120	true	nat					852	false		skiprow (1944 - 240) / 2
		oth	30	prc	tag	row192	true	nat					780	false		skiprow (1944 - 384) / 2
		oth	30	prc	tag	row768	true	nat					204	false		skiprow (1944 - 1536) / 2
		oth	30	prc	tag	row960	true	nat					12	false		skiprow (1944 - 1920) / 2
		oth	31	prc	tag	colmax	true	nat					2592	false
		oth	31	prc	tag	col	false	nat		0..colmax			0	false
		oth	32	prc	tag	col160N1	true	nat					1135	false		skipcol (2592 - 320) / 2 - 1
		oth	32	prc	tag	col256N3	true	nat					1037	false		skipcol (2592 - 512) / 2 - 3
		oth	32	prc	tag	col1024N3	true	nat					269	false		skipcol (2592 - 2048) / 2 - 3
		oth	32	prc	tag	col1024N9	true	nat					263	false		skipcol (2592 - 2048) / 2 - 9
		oth	32	prc	tag	col1280	true	nat					16	false		skipcol (2592 - 2560) / 2
		oth	32	prc	tag	col1280N9	true	nat					7	false		skipcol (2592 - 2560) / 2 - 9
		strb	0	prc	tag	strbFrame	false	sl	1		state(frameB) and !vsync_sig	1	0	false
		strb	33	prc	tag	strbRow120	false	sl	1		state(rowB) and href_sig and row=row120	1	0	false
		strb	33	prc	tag	strbRow192	false	sl	1		state(rowB) and href_sig and row=row192	1	0	false
		strb	33	prc	tag	strbRow768	false	sl	1		state(rowB) and href_sig and row=row768	1	0	false
		strb	33	prc	tag	strbRow960	false	sl	1		state(rowB) and href_sig and row=row960	1	0	false
		strb	34	prc	tag	strbCol160N1	false	sl	1		state(colA) and col=col160N1	1	0	false
		strb	34	prc	tag	strbCol256N3	false	sl	1		state(colA) and col=col256N3	1	0	false
		strb	34	prc	tag	strbCol1024N3	false	sl	1		state(colA) and col=col1024N3	1	0	false
		strb	34	prc	tag	strbCol1024N9	false	sl	1		state(colA) and col=col1024N9	1	0	false
		strb	34	prc	tag	strbCol1280	false	sl	1		state(colA) and col=col1280	1	0	false
		strb	34	prc	tag	strbCol1280N9	false	sl	1		state(colA) and col=col1280N9	1	0	false
		clk	0	mdl	mipirx	rxclk	false	sl	1					false
		oth	0	mdl	mipirx	rxd	false	slvdn	16					false
		oth	0	mdl	bingraybuf	drdBingraybuf	false	slvdn	8					false
		oth	0	mdl	binrgbbuf	drdBinrgbbuf	false	slvdn	8					false
		oth	0	mdl	evenbuf	drdEvenbuf	false	slvdn	8					false
		oth	0	mdl	rawgraybuf	drdRawgraybuf	false	slvdn	8					false
		oth	0	void		mclkn	false	sl	1					false
		hshk	35	prc	pvw	reqPvwToPvwbufAbufLock	false	sl	1				0	false
		hshk	35	prc	pvwbuf	ackPvwToPvwbufAbufLock	false	sl	1				0	false
		hshk	35	prc	pvwbuf	dnyPvwToPvwbufAbufLock	false	sl	1				0	false
		hshk	36	prc	pvw	reqPvwToPvwbufAbufSetFull	false	sl	1				0	false
		hshk	36	prc	pvwbuf	ackPvwToPvwbufAbufSetFull	false	sl	1				0	false
		hshk	37	prc	pvw	reqPvwToPvwbufBbufLock	false	sl	1				0	false
		hshk	37	prc	pvwbuf	ackPvwToPvwbufBbufLock	false	sl	1				0	false
		hshk	37	prc	pvwbuf	dnyPvwToPvwbufBbufLock	false	sl	1				0	false
		hshk	38	prc	pvw	reqPvwToPvwbufBbufSetFull	false	sl	1				0	false
		hshk	38	prc	pvwbuf	ackPvwToPvwbufBbufSetFull	false	sl	1				0	false
		hshk	39	prc	pvwbufB	reqPvwbufBToPvwbufAbufLock	false	sl	1				0	false
		hshk	39	prc	pvwbuf	ackPvwbufBToPvwbufAbufLock	false	sl	1				0	false
		hshk	39	prc	pvwbuf	dnyPvwbufBToPvwbufAbufLock	false	sl	1				0	false
		hshk	40	prc	pvwbufB	reqPvwbufBToPvwbufAbufClear	false	sl	1				0	false
		hshk	40	prc	pvwbuf	ackPvwbufBToPvwbufAbufClear	false	sl	1				0	false
		hshk	41	prc	pvwbufB	reqPvwbufBToPvwbufBbufLock	false	sl	1				0	false
		hshk	41	prc	pvwbuf	ackPvwbufBToPvwbufBbufLock	false	sl	1				0	false
		hshk	41	prc	pvwbuf	dnyPvwbufBToPvwbufBbufLock	false	sl	1				0	false
		hshk	42	prc	pvwbufB	reqPvwbufBToPvwbufBbufClear	false	sl	1				0	false
		hshk	42	prc	pvwbuf	ackPvwbufBToPvwbufBbufClear	false	sl	1				0	false
		ImeIMSignal2.end
		ImeIMProcess.sref	clkSrefWdbeMSignal	asrSrefWdbeMSignal	Falling	Syncrst	Extip	Comment
		grrd	mclk	reset	false	state(init) or !grrdrun	false	gray/red operation, also managing grrd{ab/cd/ef}buf
			ImeIAVKeylistKey.sref	Title	Comment
			grrdbuf_t	(grrdbufAb, grrdbufCd, grrdbufEf)	grrdbufAb
			ImeIAVKeylistKey.end
			ImeIMFsm.
			
				ImeIMFsmstate.irefRefWdbeCFsmstate	sref	Extip	Comment
				0	init	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					init	!grrdrun	toIdle
					waitFrame	else
					ImeIAMFsmstateStep.end
				0	waitFrame	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					ready	strbFrame	waitFrame
					ImeIAMFsmstateStep.end
				0	ready	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					store	strbDGrrdacc	ready
					ImeIAMFsmstateStep.end
				0	store	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					ready	aGrrdbuf=2046	eorEven
					init	aGrrdbuf=2047	eorOdd	rowcnt=768	eof
					ready	aGrrdbuf=2047	eorOdd	else	eorOddInt
					ready	else	inc
					ImeIAMFsmstateStep.end
				ImeIMFsmstate.end
			ImeIMFsm.end
		grrdabbufB	mclk	reset	false	state(init) or tixVGrrdbufstate/=tixVGrrdbufstateStream	false	grrdabbuf B/featdet-facing operation
			ImeIMFsm.
			
				ImeICFsmstate.iref
				1
				ImeICFsmstate.end
				ImeIMFsmstate.irefRefWdbeCFsmstate	sref	Extip	Comment
				0	init	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					init	tixVGrrdbufstate/=tixVGrrdbufstateStream
					ready	else
					ImeIAMFsmstateStep.end
				0	ready	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					readA	reqGrrdabbufToFeatdet	ready
					ImeIAMFsmstateStep.end
				1	readA	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					ready	!reqGrrdabbufToFeatdet	done
					readB	!strbDGrrdabbufToFeatdet	next
					ImeIAMFsmstateStep.end
				1	readB	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					readA	strbDGrrdabbufToFeatdet	inc
					ImeIAMFsmstateStep.end
				ImeIMFsmstate.end
			ImeIMFsm.end
		grrdacc	mclk	reset	false	state(init) or !grrdaccrun	false	gray/red accumulation, also managing evenbuf
			ImeIMFsm.
			
				ImeICFsmstate.iref
				1
				ImeICFsmstate.end
				ImeIMFsmstate.irefRefWdbeCFsmstate	sref	Extip	Comment
				0	init	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					init	!grrdaccrun
					waitFrame	else
					ImeIAMFsmstateStep.end
				0	waitFrame	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					waitRow	strbRow768	waitFrame
					ImeIAMFsmstateStep.end
				0	waitRow	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					LASA	strbCol1024N3	waitRow
					ImeIAMFsmstateStep.end
				1	LASA	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					LASB		LASA
					ImeIAMFsmstateStep.end
				1	LASB	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					LASC		LASB
					ImeIAMFsmstateStep.end
				1	LASC	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					LASD		LASC
					ImeIAMFsmstateStep.end
				1	LASD	true
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					LASA	pre='1'	preOff
					LASA	col2A=2048 and post='0'	postOn
					waitFrame	post='1'	incRow	row_lcl=std_logic_vector(to_unsigned(rowmax_lcl, 11))
					waitRow	post='1'	incRow	else
					LASA	else
					ImeIAMFsmstateStep.end
				ImeIMFsmstate.end
			ImeIMFsm.end
		grrdcdbufB	mclk	reset	false	state(init) or tixVGrrdbufstate/=tixVGrrdbufstateStream		grrdcdbuf B/featdet-facing operation
			ImeIMFsm.
			
				ImeICFsmstate.iref
				1
				ImeICFsmstate.end
				ImeIMFsmstate.irefRefWdbeCFsmstate	sref	Extip	Comment
				0	init	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					init	tixVGrrdbufstate/=tixVGrrdbufstateStream
					ready	else
					ImeIAMFsmstateStep.end
				0	ready	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					readA	reqGrrdcdbufToFeatdet	ready
					ImeIAMFsmstateStep.end
				1	readA	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					ready	!reqGrrdcdbufToFeatdet	done
					readB	!strbDGrrdcdbufToFeatdet	next
					ImeIAMFsmstateStep.end
				1	readB	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					readA	strbDGrrdcdbufToFeatdet	inc
					ImeIAMFsmstateStep.end
				ImeIMFsmstate.end
			ImeIMFsm.end
		grrdefbufB	mclk	reset	false	state(init) or tixVGrrdbufstate/=tixVGrrdbufstateStream		grrdefbuf B/featdet-facing operation
			ImeIMFsm.
			
				ImeICFsmstate.iref
				1
				ImeICFsmstate.end
				ImeIMFsmstate.irefRefWdbeCFsmstate	sref	Extip	Comment
				0	init	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					init	tixVGrrdbufstate/=tixVGrrdbufstateStream
					ready	else
					ImeIAMFsmstateStep.end
				0	ready	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					readA	reqGrrdefbufToFeatdet	ready
					ImeIAMFsmstateStep.end
				1	readA	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					ready	!reqGrrdefbufToFeatdet	done
					readB	!strbDGrrdefbufToFeatdet	next
					ImeIAMFsmstateStep.end
				1	readB	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					readA	strbDGrrdefbufToFeatdet	inc
					ImeIAMFsmstateStep.end
				ImeIMFsmstate.end
			ImeIMFsm.end
		op	mclk	reset	false	state(init) or (state(!invGrrd) and state(!invPvw) and state(!inv) and (reqInvSetGrrd or reqInvSetPvw))	false	main operation
			ImeIAVKeylistKey.sref	Title	Comment
			pvwacc_t	(pvwaccBingray, pvwaccBinrgb, pvwaccRawgray, pvwaccRawrgb)	pvwaccBingray
			ImeIAVKeylistKey.end
			ImeIMFsm.
			
				ImeIMFsmstate.irefRefWdbeCFsmstate	sref	Extip	Comment
				0	init	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					invGrrd	reqInvSetGrrd	invSetGrrd
					invPvw	reqInvSetPvw	invSetPvw
					init	else
					ImeIAMFsmstateStep.end
				0	invGrrd	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					inv		invGrrd
					ImeIAMFsmstateStep.end
				0	invPvw	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					inv		invPvw
					ImeIAMFsmstateStep.end
				0	inv	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					init	(!reqInvSetGrrd and ackInvSetGrrd_sig) or (!reqInvSetPvw and ackInvSetPvw_sig)
					ImeIAMFsmstateStep.end
				ImeIMFsmstate.end
			ImeIMFsm.end
		pvw	mclk	reset	false	state(init) or !pvwrun	false	preview operation, also managing pvw{a/b}buf
			ImeIMFsm.
			
				ImeICFsmstate.iref
				1
				2
				3
				ImeICFsmstate.end
				ImeIMFsmstate.irefRefWdbeCFsmstate	sref	Extip	Comment
				0	init	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					init	!pvwrun	reset
					trylockA	else	toLock
					ImeIAMFsmstateStep.end
				1	trylockA	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					waitFrame	ackPvwToPvwbufAbufLock	ack
					trylockB	dnyPvwToPvwbufAbufLock	dny
					ImeIAMFsmstateStep.end
				1	trylockB	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					waitFrame	ackPvwToPvwbufBbufLock	ack
					trylockA	dnyPvwToPvwbufBbufLock	dny
					ImeIAMFsmstateStep.end
				0	waitFrame	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					ready	strbFrame	waitFrame
					ImeIAMFsmstateStep.end
				0	ready	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					storeA	strbDPvwbingrayGr	bingrayGr
					storeA	strbDPvwrawgrayGr	rawgrayGr
					storeB	strbDPvwbinrgbRd	binrgbRd
					storeB	strbDPvwrawrgbRd	rawrgbRd
					storeC	strbDPvwbinrgbGnBl	binrgbGnBl
					storeC	strbDPvwrawrgbGnBl	rawrgbGnBl
					ImeIAMFsmstateStep.end
				2	storeA	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					doneA	aPvwbufGr=49151
					ready	else	inc
					ImeIAMFsmstateStep.end
				2	storeB	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					ready		inc
					ImeIAMFsmstateStep.end
				2	storeC	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					storeD		storeC
					ImeIAMFsmstateStep.end
				2	storeD	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					doneA	aPvwbufBl=57599
					ready	else	inc
					ImeIAMFsmstateStep.end
				3	doneA	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					doneB		doneA
					ImeIAMFsmstateStep.end
				3	doneB	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					trylockB	ackPvwToPvwbufAbufSetFull or ackPvwToPvwbufBbufSetFull	doneB	!pvwLatestBNotA	bbuf
					trylockA	ackPvwToPvwbufAbufSetFull or ackPvwToPvwbufBbufSetFull	doneB	else	abuf
					ImeIAMFsmstateStep.end
				ImeIMFsmstate.end
			ImeIMFsm.end
		pvwbingray	mclk	reset	false	state(init) or !pvwbingrayrun	false	preview 4x4 pixel binning gray, also managing bingraybuf
			ImeIMFsm.
			
				ImeICFsmstate.iref
				1
				ImeICFsmstate.end
				ImeIMFsmstate.irefRefWdbeCFsmstate	sref	Extip	Comment
				0	init	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					init	!pvwbingrayrun
					waitFrame	else
					ImeIAMFsmstateStep.end
				0	waitFrame	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					waitRow	strbRow768	reset
					ImeIAMFsmstateStep.end
				0	waitRow	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					LASA	strbCol1024N9	reset
					ImeIAMFsmstateStep.end
				1	LASA	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					LASB		LASA
					ImeIAMFsmstateStep.end
				1	LASB	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					LASC
					ImeIAMFsmstateStep.end
				1	LASC	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					LASD		LASC
					ImeIAMFsmstateStep.end
				1	LASD	true
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					LASA	pixcnt="00"		pre1='1'	pre1
					LASA	pixcnt="00"		pre2='1'	pre2
					LASA	pixcnt="00"		col2L=512 and post1='0' and post2='0'	post
					LASA	pixcnt="00"		post1='1'	post1
					waitFrame	pixcnt="00"		post2='1'	post2	row_lcl=std_logic_vector(to_unsigned(rowmax_lcl, 11))
					waitRow	pixcnt="00"		post2='1'	post2	else
					LASA	pixcnt="00"		else
					LASA	else
					ImeIAMFsmstateStep.end
				ImeIMFsmstate.end
			ImeIMFsm.end
		pvwbinrgb	mclk	reset	false	state(init) or !pvwbinrgbrun	false	preview 8x8 pixel binning RGB, also managing binrgbbuf
			ImeIMFsm.
			
				ImeICFsmstate.iref
				1
				ImeICFsmstate.end
				ImeIMFsmstate.irefRefWdbeCFsmstate	sref	Extip	Comment
				0	init	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					init	!pvwbinrgbrun	syncrst
					waitFrame	else
					ImeIAMFsmstateStep.end
				0	waitFrame	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					waitRow	strbRow960	reset
					ImeIAMFsmstateStep.end
				0	waitRow	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					LASA	strbCol1280N9	reset
					ImeIAMFsmstateStep.end
				1	LASA	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					LASB		LASA
					ImeIAMFsmstateStep.end
				1	LASB	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					LASC
					ImeIAMFsmstateStep.end
				1	LASC	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					LASD		LASC
					ImeIAMFsmstateStep.end
				1	LASD	true
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					LASA	pixcnt="000"		pre1='1'	pre1
					LASA	pixcnt="000"		pre2='1'	pre2
					LASA	pixcnt="000"		col2L=320 and post1='0' and post2='0'	post
					LASA	pixcnt="000"		post1='1'	post1
					waitFrame	pixcnt="000"		post2='1'	post2	row_lcl=std_logic_vector(to_unsigned(rowmax_lcl, 11))
					waitRow	pixcnt="000"		post2='1'	post2	else
					LASA	pixcnt="000"		else
					LASA	else
					ImeIAMFsmstateStep.end
				ImeIMFsmstate.end
			ImeIMFsm.end
		pvwbuf	mclk	reset	false	state(init) or !pvwrun	false	pvw{a/b}buf mutex management
			ImeIAVKeylistKey.sref	Title	Comment
			lock_t	(lockIdle, lockBufB, lockPvw)	lockIdle
			ImeIAVKeylistKey.end
			ImeIMFsm.
			
				ImeIMFsmstate.irefRefWdbeCFsmstate	sref	Extip	Comment
				0	init	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					init	!pvwrun
					ready	else
					ImeIAMFsmstateStep.end
				0	ready	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					ack	reqPvwToPvwbufAbufLock	pvwAbufLock
					ack	reqPvwToPvwbufAbufSetFull	pvwAbufFull
					ack	reqPvwToPvwbufBbufLock	pvwBbufLock
					ack	reqPvwToPvwbufBbufSetFull	pvwBbufFull
					ack	reqPvwbufBToPvwbufAbufLock	pvwbufBAbufLock
					ack	reqPvwbufBToPvwbufAbufClear	pvwbufBAbufClear
					ack	reqPvwbufBToPvwbufBbufLock	pvwbufBBbufLock
					ack	reqPvwbufBToPvwbufBbufClear	pvwbufBBbufClear
					ImeIAMFsmstateStep.end
				0	ack	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					ready	(ackPvwToPvwbufAbufLock or dnyPvwToPvwbufAbufLock) and !reqPvwToPvwbufAbufLock	pvwAbufLock
					ready	ackPvwToPvwbufAbufSetFull and !reqPvwToPvwbufAbufSetFull	pvwAbufFull
					ready	(ackPvwToPvwbufBbufLock or dnyPvwToPvwbufBbufLock) and !reqPvwToPvwbufBbufLock	pvwBbufLock
					ready	ackPvwToPvwbufBbufSetFull and !reqPvwToPvwbufBbufSetFull	pvwBbufFull
					ready	(ackPvwbufBToPvwbufAbufLock or dnyPvwbufBToPvwbufAbufLock) and !reqPvwbufBToPvwbufAbufLock	pvwbufBAbufLock
					ready	ackPvwbufBToPvwbufAbufClear and !reqPvwbufBToPvwbufAbufClear	pvwbufBAbufClear
					ready	(ackPvwbufBToPvwbufBbufLock or dnyPvwbufBToPvwbufBbufLock) and !reqPvwbufBToPvwbufBbufLock	pvwbufBBbufLock
					ready	ackPvwbufBToPvwbufBbufClear and !reqPvwbufBToPvwbufBbufClear	pvwbufBBbufClear
					ImeIAMFsmstateStep.end
				ImeIMFsmstate.end
			ImeIMFsm.end
		pvwbufB	mclk	reset	false	state(init) or !pvwrun	false	pvw{a/b}buf B/hostif-facing operation
			ImeIMFsm.
			
				ImeICFsmstate.iref
				1
				ImeICFsmstate.end
				ImeIMFsmstate.irefRefWdbeCFsmstate	sref	Extip	Comment
				0	init	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					init	!pvwrun
					ready	else
					ImeIAMFsmstateStep.end
				0	ready	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					trylock	tixVPvwbufstate=tixVPvwbufstateAbuf and reqPvwabufToHostif	aprep
					trylock	tixVPvwbufstate=tixVPvwbufstateBbuf and reqPvwbbufToHostif	bprep
					ImeIAMFsmstateStep.end
				0	trylock	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					readA	ackPvwbufBToPvwbufAbufLock or ackPvwbufBToPvwbufBbufLock	ack
					init	dnyPvwbufBToPvwbufAbufLock or dnyPvwbufBToPvwbufBbufLock
					ImeIAMFsmstateStep.end
				1	readA	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					done	pvwabufLock=lockBufB		dnePvwabufToHostif	adne
					done	pvwabufLock=lockBufB		!reqPvwabufToHostif	acnc
					readB	pvwabufLock=lockBufB		!strbDPvwabufToHostif	astep
					done	pvwbbufLock=lockBufB		dnePvwbbufToHostif	bdne
					done	pvwbbufLock=lockBufB		!reqPvwbbufToHostif	bcnc
					readB	pvwbbufLock=lockBufB		!strbDPvwbbufToHostif	bstep
					ImeIAMFsmstateStep.end
				1	readB	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					done	pvwabufLock=lockBufB		!reqPvwabufToHostif	acnc
					readA	pvwabufLock=lockBufB		strbDPvwabufToHostif	ainc
					done	pvwbbufLock=lockBufB		!reqPvwbbufToHostif	bcnc
					readA	pvwbbufLock=lockBufB		strbDPvwbbufToHostif	binc
					ImeIAMFsmstateStep.end
				0	done	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					init	ackPvwbufBToPvwbufAbufLock or ackPvwbufBToPvwbufAbufClear or ackPvwbufBToPvwbufBbufLock or ackPvwbufBToPvwbufBbufClear
					ImeIAMFsmstateStep.end
				ImeIMFsmstate.end
			ImeIMFsm.end
		pvwrawgray	mclk	reset	false	state(init) or !pvwrawgrayrun	false	preview raw gray, also managing rawgraybuf
			ImeIMFsm.
			
				ImeICFsmstate.iref
				1
				ImeICFsmstate.end
				ImeIMFsmstate.irefRefWdbeCFsmstate	sref	Extip	Comment
				0	init	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					init	!pvwrawgrayrun
					waitFrame	else
					ImeIAMFsmstateStep.end
				0	waitFrame	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					waitRow	strbRow192	reset
					ImeIAMFsmstateStep.end
				0	waitRow	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					LASA	strbCol256N3	reset
					ImeIAMFsmstateStep.end
				1	LASA	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					LASB		LASA
					ImeIAMFsmstateStep.end
				1	LASB	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					LASC		LASB
					ImeIAMFsmstateStep.end
				1	LASC	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					LASD		LASC
					ImeIAMFsmstateStep.end
				1	LASD	true
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					LASA	pre='1'	pre
					LASA	col2A=512 and post='0'	toPost
					waitFrame	post='1'	post	row_lcl=std_logic_vector(to_unsigned(rowmax_lcl, 9))
					waitRow	post='1'	post	else
					LASA	else
					ImeIAMFsmstateStep.end
				ImeIMFsmstate.end
			ImeIMFsm.end
		pvwrawrgb	mclk	reset	false	state(init) or !pvwrawrgbrun	false	preview raw RGB
			ImeIMFsm.
			
				ImeICFsmstate.iref
				1
				ImeICFsmstate.end
				ImeIMFsmstate.irefRefWdbeCFsmstate	sref	Extip	Comment
				0	init	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					init	!pvwrawrgbrun
					waitFrame	else
					ImeIAMFsmstateStep.end
				0	waitFrame	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					waitRow	strbRow120	reset
					ImeIAMFsmstateStep.end
				0	waitRow	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					LASA	strbCol160N1	reset
					ImeIAMFsmstateStep.end
				1	LASA	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					LASB		LASA
					ImeIAMFsmstateStep.end
				1	LASB	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					LASC
					ImeIAMFsmstateStep.end
				1	LASC	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					LASD		LASC
					ImeIAMFsmstateStep.end
				1	LASD	true
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					waitFrame	col_lcl=colmax_lcl	inc	row_lcl=std_logic_vector(to_unsigned(rowmax_lcl, 8))
					waitRow	col_lcl=colmax_lcl	inc	else
					LASA	else
					ImeIAMFsmstateStep.end
				ImeIMFsmstate.end
			ImeIMFsm.end
		sample	mclk	reset				currently only rearranges lanes
		tag	mclk	reset	false	state(init) or (!grrdrun and !pvwrun)	false	camera frame tagging
			ImeIMFsm.
			
				ImeICFsmstate.iref
				1
				2
				3
				ImeICFsmstate.end
				ImeIMFsmstate.irefRefWdbeCFsmstate	sref	Extip	Comment
				0	init	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					frameA	grrdrun or pvwrun
					init	else
					ImeIAMFsmstateStep.end
				1	frameA	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					frameB	vsync_sig
					ImeIAMFsmstateStep.end
				1	frameB	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					rowA	!vsync_sig	frameB
					ImeIAMFsmstateStep.end
				2	rowA	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					rowB	!href_sig
					ImeIAMFsmstateStep.end
				2	rowB	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					colA	href_sig	rowB
					ImeIAMFsmstateStep.end
				3	colA	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					colB
					ImeIAMFsmstateStep.end
				3	colB	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					frameA	col=colmax-1	colzero	row=rowmax-1	rowzero
					rowA	col=colmax-1	colzero	else	rowinc
					colA	else	colinc
					ImeIAMFsmstateStep.end
				ImeIMFsmstate.end
			ImeIMFsm.end
		ImeIMProcess.end
	arty_ip_AXI;top;camacq	mipirx
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		clk_in_p			1			csi_clk_p
		retrupd	0		clk_in_n			1			csi_clk_n
		retrupd	0		data_in_from_pins_p			2					csid
		retrupd	0		data_in_from_pins_n			2					csidn
		retrupd	0		clk_reset			1				reset
		retrupd	0		io_reset			1				reset
		retrupd	0		bitslip			2		0
		retrupd	0		clk_div_out			1					rxclk
		retrupd	0		data_in_to_device			16					rxd
		ImeIMPort.end
	arty_ip_AXI;top;camacq	bingraybuf
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		clk								mclk
		retrupd	0		en								enBingraybuf
		retrupd	0		we								weBingraybuf
		retrupd	0		a								aBingraybuf_vec
		retrupd	0		drd								drdBingraybuf
		retrupd	0		dwr								dwrBingraybuf
		ImeIMPort.end
	arty_ip_AXI;top;camacq	binrgbbuf
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		clk								mclk
		retrupd	0		en								enBinrgbbuf
		retrupd	0		we								weBinrgbbuf
		retrupd	0		a								aBinrgbbuf_vec
		retrupd	0		drd								drdBinrgbbuf
		retrupd	0		dwr								dwrBinrgbbuf
		ImeIMPort.end
	arty_ip_AXI;top;camacq	evenbuf
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		clk								mclkn
		retrupd	0		en								enEvenbuf
		retrupd	0		we								weEvenbuf
		retrupd	0		a								aEvenbuf_vec
		retrupd	0		drd								drdEvenbuf
		retrupd	0		dwr								dwrEvenbuf
		ImeIMPort.end
	arty_ip_AXI;top;camacq	rawgraybuf
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		clk								mclkn
		retrupd	0		en								enRawgraybuf
		retrupd	0		we								weRawgraybuf
		retrupd	0		a								aRawgraybuf_vec
		retrupd	0		drd								drdRawgraybuf
		retrupd	0		dwr								dwrRawgraybuf
		ImeIMPort.end
	arty_ip_AXI;top;camacq	grrdabbuf
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		clkA								mclk
		retrupd	0		enA								enGrrdabbuf
		retrupd	0		aA								aGrrdbuf_vec
		retrupd	0		dwrA								dwrGrrdbuf
		retrupd	0		clkB								mclkn
		retrupd	0		enB								enGrrdabbufB
		retrupd	0		aB								aGrrdabbufB_vec
		retrupd	0		drdB							dGrrdabbufToFeatdet
		ImeIMPort.end
	arty_ip_AXI;top;camacq	grrdcdbuf
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		clkA								mclk
		retrupd	0		enA								enGrrdcdbuf
		retrupd	0		aA								aGrrdbuf_vec
		retrupd	0		dwrA								dwrGrrdbuf
		retrupd	0		clkB								mclkn
		retrupd	0		enB								enGrrdcdbufB
		retrupd	0		aB								aGrrdcdbufB_vec
		retrupd	0		drdB							dGrrdcdbufToFeatdet
		ImeIMPort.end
	arty_ip_AXI;top;camacq	grrdefbuf
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		clkA								mclk
		retrupd	0		enA								enGrrdefbuf
		retrupd	0		aA								aGrrdbuf_vec
		retrupd	0		dwrA								dwrGrrdbuf
		retrupd	0		clkB								mclkn
		retrupd	0		enB								enGrrdefbufB
		retrupd	0		aB								aGrrdefbufB_vec
		retrupd	0		drdB							dGrrdefbufToFeatdet
		ImeIMPort.end
	arty_ip_AXI;top;camacq	pvwabuf
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		clkA								mclk
		retrupd	0		enA								enPvwabuf
		retrupd	0		addrA								aPvwbuf_vec
		retrupd	0		dinA								dwrPvwbuf
		retrupd	0		clkB								mclk
		retrupd	0		enB								enPvwabufB
		retrupd	0		addrB								aPvwbufB_vec
		retrupd	0		doutB							dPvwabufToHostif
		ImeIMPort.end
	arty_ip_AXI;top;camacq	pvwbbuf
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		clkA								mclk
		retrupd	0		enA								enPvwbbuf
		retrupd	0		addrA								aPvwbuf_vec
		retrupd	0		dinA								dwrPvwbuf
		retrupd	0		clkB								mclk
		retrupd	0		enB								enPvwbbufB
		retrupd	0		addrB								aPvwbufB_vec
		retrupd	0		doutB							dPvwbbufToHostif
		ImeIMPort.end
	arty_ip_AXI;top	camif
		ImeIMGeneric.srefIxWdbeVIop	irefRefWdbeCGeneric	sref	srefWdbeKHdltype	Width	Minmax	Defval	srcSrefWdbeMGeneric	Comment
		ins	0	fMclk	nat		1..1000000	50000	fMclk	in kHz
		ImeIMGeneric.end
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		ins	0	reset	reset	in	sl	1					reset
		ins	0	clk	mclk	in	sl	1					mclk
		ins	0	clk	tkclk	in	sl	1					tkclk
		ins	0	rtetop	rng	out	sl	1					camrng
		ImeIMPort.end
		ImeICSignal2.iref
		1
		2
		3
		ImeICSignal2.end
		ImeIMSignal2.srefIxVBasetype	irefRefWdbeCSignal	srefMgeIxVTbl	srefMgeUref	sref	Const	srefWdbeKHdltype	Width	Minmax	Comb	Onval	Offval	Defon	srefDrvRefWdbeMPort	Comment
		oprt	0	prc	op	rng	false	sl	1				0	true	rng
		oprt	0	prc	op	ackInvSetRng	false	sl	1				0	false	ackInvSetRng
		oprt	0	prc	op	ackInvSetReg	false	sl	1				0	false	ackInvSetReg
		oprt	0	prc	op	ackInvSetRegaddr	false	sl	1				0	false	ackInvSetRegaddr
		oprt	0	prc	op	ackInvGetReg	false	sl	1				0	false	ackInvGetReg
		oprt	0	prc	op	regVal	false	slvdn	8				0	false	getRegVal
		oprt	0	prc	op	ackInvModReg	false	sl	1				0	false	ackInvModReg
		oth	0	prc	op	enParrom	false	sl	1		state(loadA)	1	0	false
		oth	1	prc	op	aParrom_vec	false	slvdn	11					false
		oth	1	prc	op	aParrom	false	nat		0..2048			0	false
		oth	2	prc	op	i2cReadNotWrite	false	sl	1				0	false
		oth	2	prc	op	i2cRegaddr	false	slvdn	16				0	false
		oth	2	prc	op	i2cSend	false	slvdn	8				0	false
		oth	0	mdl	i2c	i2cRecv	false	slvdn	8					false
		oth	0	mdl	parrom	drdParrom	false	slvdn	8					false
		hshk	3	prc	op	reqI2c	false	sl	1		state(xfer)	1	0	false
		hshk	3	mdl	i2c	ackI2c	false	sl	1					false
		hshk	3	mdl	i2c	dneI2c	false	sl	1					false
		ImeIMSignal2.end
		ImeIMProcess.sref	clkSrefWdbeMSignal	asrSrefWdbeMSignal	Falling	Syncrst	Extip	Comment
		camclk	mclk	reset	false		false	camera master clock
		op	mclk	reset	false	state(init)	false	main operation
			ImeIMFsm.
			
				ImeICFsmstate.iref
				1
				2
				3
				ImeICFsmstate.end
				ImeIMFsmstate.irefRefWdbeCFsmstate	sref	Extip	Comment
				0	init	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					prepB	not prepdone	prep
					pwupdnB	reqInvSetRng		setRngRng=fls8 and !pwdn_sig	pwdn
					pwupdnB	reqInvSetRng		setRngRng=tru8 and pwdn_sig	pwup
					inv	reqInvSetRng		else	invSetRng
					xfer	reqInvSetReg	invSetReg
					inv	reqInvSetRegaddr	invSetRegaddr
					xfer	reqInvGetReg	invGetReg
					xfer	reqInvModReg	invModReg
					ImeIAMFsmstateStep.end
				1	prepA	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					prepD	tkclk		i=imax	done
					prepB	tkclk		else
					ImeIAMFsmstateStep.end
				1	prepB	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					prepA	!tkclk	inc
					ImeIAMFsmstateStep.end
				1	prepC	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					loadA	tkclk		j=jmax	done
					prepD	tkclk		else
					ImeIAMFsmstateStep.end
				1	prepD	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					prepC	!tkclk	inc
					ImeIAMFsmstateStep.end
				2	loadA	true
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					loadB	k=kmax
					ImeIAMFsmstateStep.end
				2	loadB	true
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					loadA	bytecnt=1 and drdParrom=x"00"		not specNotGnr	prepSpec
					init	bytecnt=1 and drdParrom=x"00"		else	done
					xfer	else	inc	bytecnt=0
					loadA	else	inc	bytecnt=1	addrmsb
					loadA	else	inc	bytecnt=2	addrlsb
					loadA	else	inc	bytecnt=3	val
					ImeIAMFsmstateStep.end
				0	xfer	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					step	dneI2c
					ImeIAMFsmstateStep.end
				0	step	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					loadA	!i2cReadNotWrite		not prepdone	prep
					inv	!i2cReadNotWrite		else	cmdDone			specNotGnr='0'	gnrDone
					inv	else		not modNotGetSet	get
					xfer	else		else	mod
					ImeIAMFsmstateStep.end
				3	pwupdnA	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					inv	tkclk		j=jmax	done
					pwupdnB	tkclk		else
					ImeIAMFsmstateStep.end
				3	pwupdnB	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					pwupdnA	!tkclk	inc
					ImeIAMFsmstateStep.end
				0	inv	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					init	(!reqInvSetRng and ackInvSetRng_sig) or (!reqInvSetReg and ackInvSetReg_sig) or (!reqInvSetRegaddr and ackInvSetRegaddr_sig) or (!reqInvGetReg and ackInvGetReg_sig) or (!reqInvModReg and ackInvModReg_sig)
					ImeIAMFsmstateStep.end
				ImeIMFsmstate.end
			ImeIMFsm.end
		ImeIMProcess.end
	arty_ip_AXI;top;camif	i2c
		ImeICGeneric.iref
		1
		ImeICGeneric.end
		ImeIMGeneric.srefIxWdbeVIop	irefRefWdbeCGeneric	sref	srefWdbeKHdltype	Width	Minmax	Defval	srcSrefWdbeMGeneric	Comment
		ins	0	fMclk	nat		1..1000000		fMclk	in kHz
		ins	1	clkFastNotStd	sl	1		1		1Mbps/400kbps vs. 100kbps
		ins	1	clkFastplusNotFast	sl	1		0		1Mbps vs. 400kbps
		ins	0	devaddr	slvdn	8		00110100		0x1A left-shifted by one
		ImeIMGeneric.end
		ImeICPort.iref
		1
		2
		ImeICPort.end
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		ins	0	reset	reset	in	sl	1					reset
		ins	0	clk	mclk	in	sl	1					mclk
		ins	1	rtesup	req	in	sl	1					reqI2c
		ins	1	rtesup	ack	out	sl	1
		ins	1	rtesup	dne	out	sl	1					dneI2c
		ins	0	rtesup	readNotWrite	in	sl	1					i2cReadNotWrite
		ins	0	rtesup	regaddr	in	slvdn	16					i2cRegaddr
		ins	0	rtesup	send	in	slvdn	8					i2cSend
		ins	0	rtesup	recv	out	slvdn	8					i2cRecv
		ins	2	rtepin	scl	out	sl	1			scl
		ins	2	rtepin	sda	inout	sl	1			sda
		ImeIMPort.end
		ImeIMSignal2.srefIxVBasetype	irefRefWdbeCSignal	srefMgeIxVTbl	srefMgeUref	sref	Const	srefWdbeKHdltype	Width	Minmax	Comb	Onval	Offval	Defon	srefDrvRefWdbeMPort	Comment
		oprt	0	prc	xfer	ack	false	sl	1		state(init)	1	0	true	ack
		oprt	0	prc	xfer	dne	false	sl	1		state(done)	1	0	false	dne
		oprt	0	prc	xfer	recv	false	slvdn	8				0	false	recv
		oprt	0	prc	xfer	scl	false	sl	1		state(bitA;ackA;restart;stopA)	1	0	true	scl
		oth	0	prc	xfer	sda_sig	false	sl	1				0	false
		oth	0	mdl	iobuf	sda_in	false	sl	1				0	false
		ImeIMSignal2.end
		ImeIMProcess.sref	clkSrefWdbeMSignal	asrSrefWdbeMSignal	Falling	Syncrst	Extip	Comment
		xfer	mclk	reset	false	state(init) or !req	false	transfer operation
			ImeIMFsm.
			
				ImeICFsmstate.iref
				1
				2
				3
				4
				ImeICFsmstate.end
				ImeIMFsmstate.irefRefWdbeCFsmstate	sref	Extip	Comment
				0	init	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					init	!req
					startA	else
					ImeIAMFsmstateStep.end
				1	startA	true
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					startB	i=imax	step
					ImeIAMFsmstateStep.end
				1	startB	true
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					bitA	i=imax	step
					ImeIAMFsmstateStep.end
				2	bitA	true
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					bitB	i=imax	step
					ImeIAMFsmstateStep.end
				2	bitB	true
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					ackA	i=imax	step	bitcnt=8
					bitA	i=imax	step	else
					ImeIAMFsmstateStep.end
				3	ackA	true
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					ackB	i=imax	step
					ImeIAMFsmstateStep.end
				3	ackB	true
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					restart	i=imax	step	bytecnt=3		readNotWrite
					bitA	i=imax	step	bytecnt=3		else
					stopA	i=imax	step	(bytecnt=4 and !readNotWrite) or (bytecnt=5 and readNotWrite)	prepStop
					bitA	i=imax	step	else
					ImeIAMFsmstateStep.end
				0	restart	true
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					startA	i=imax	step
					ImeIAMFsmstateStep.end
				4	stopA	true
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					stopB	i=imax	step
					ImeIAMFsmstateStep.end
				4	stopB	true
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					stopC	i=imax	step
					ImeIAMFsmstateStep.end
				4	stopC	true
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					done	i=imax	step
					ImeIAMFsmstateStep.end
				0	done	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					init	!req
					ImeIAMFsmstateStep.end
				ImeIMFsmstate.end
			ImeIMFsm.end
		ImeIMProcess.end
	arty_ip_AXI;top;camif;i2c	iobuf
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		O								sda_in
		retrupd	0		IO							sda
		retrupd	0		I					0
		retrupd	0		T								sda_sig
		ImeIMPort.end
	arty_ip_AXI;top;camif	parrom
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		ins	0	clk	clk	in	sl	1					mclk
		ins	0	rtesup	en	in	sl	1					enParrom
		ins	0	rtesup	we	in	sl	1		0
		ins	0	rtesup	a	in	slvdn	11					aParrom_vec
		ins	0	rtesup	drd	out	slvdn	8					drdParrom
		ins	0	rtesup	dwr	in	slvdn	8		0
		ImeIMPort.end
	arty_ip_AXI;top;camif;parrom	bram
		ImeIMGeneric.srefIxWdbeVIop	irefRefWdbeCGeneric	sref	srefWdbeKHdltype	Width	Minmax	Defval	srcSrefWdbeMGeneric	Comment
		ins	0	INIT_00	slvdn	256		x"0094563000202E30003C2C3000041830002A0D30003B0C300000023000010030"
		ins	0	INIT_01	slvdn	256		x"0000A131007E6A3100A0683100025A3100C64C3100004C300028763000C87430"
		ins	0	INIT_02	slvdn	256		x"0001783600044C3600044A3600014836001816340005143400028A3200218832"
		ins	0	INIT_03	slvdn	256		x"00031737000116370002153700021437000308370010063700317E3600317C36"
		ins	0	INIT_04	slvdn	256		x"000031370089303700002F3700462E3700002D3700002C37003F1D37003D1C37"
		ins	0	INIT_05	slvdn	256		x"00115F3700005E3700005D37000240370005353700FE34370001333700083237"
		ins	0	INIT_06	slvdn	256		x"000F6E3700176D37001A6C37001B6B37001B6A37001B6937001B683700016037"
		ins	0	INIT_07	slvdn	256		x"00017D3700087C3700007B3700897A3700007937004678370000773700007637"
		ins	0	INIT_08	slvdn	256		x"000F883700A584370006833700F582370003813700D9803700027F3700237E37"
		ins	0	INIT_09	slvdn	256		x"0043923700F5903700068F3700878E3700058D3700EB8C3700038B3700D98A37"
		ins	0	INIT_0A	slvdn	256		x"000000000000000000000000000000000001003A0036B03700A19637007A9437"
		ImeIMGeneric.end
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		DO							drd
		retrupd	0		ADDR							a
		retrupd	0		CLK							clk
		retrupd	0		DI							dwr
		retrupd	0		DIP					0
		retrupd	0		EN							en
		retrupd	0		SSR					0
		retrupd	0		WE							we
		ImeIMPort.end
	arty_ip_AXI;top	featdet
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		ins	0	reset	reset	in	sl	1					reset
		ins	0	clk	mclk	in	sl	1					mclk
		ins	0	dbg	strb_dbg	out	slvdn	4					featdetStrb_dbg
		ImeIMPort.end
		ImeICSignal2.iref
		1
		2
		3
		4
		5
		6
		7
		8
		9
		10
		11
		12
		13
		14
		15
		16
		17
		18
		19
		20
		21
		22
		23
		24
		25
		26
		ImeICSignal2.end
		ImeIMSignal2.srefIxVBasetype	irefRefWdbeCSignal	srefMgeIxVTbl	srefMgeUref	sref	Const	srefWdbeKHdltype	Width	Minmax	Comb	Onval	Offval	Defon	srefDrvRefWdbeMPort	Comment
		oprt	0	prc	flg	ackInvTriggerThd	false	sl	1		state(inv)	1	0	false	ackInvTriggerThd
		oprt	1	prc	flg	tixVThdstate	false	slvdn	8				tixVThdstateIdle	false	getInfoTixVThdstate
		oprt	1	prc	flg	tkst	false	slvdn	32				0	false	getInfoTkst
		oth	0	prc	flg	enFlgbuf	false	sl	1		state(loadA;storeA)	1	0	false
		oth	0	prc	flg	weFlgbuf	false	slvdn	1				0	false
		oth	2	prc	flg	aFlgbuf_vec	false	slvdn	17					false
		oth	2	prc	flg	aFlgbuf	false	nat		0..98304			0	false
		oth	0	prc	flg	dwrFlgbuf	false	slvdn	8				0	false
		oth	0	prc	flg	thdrun	false	sl	1		thdNotCorner and state(ready;loadA;storeA)	1	0	false
		oth	0	prc	flg	thdSecondNotFirst	false	sl	1				0	false
		oth	0	prc	flg	cornerrun	false	sl	1		!thdNotCorner and state(ready;loadA;storeA)	1	0	false
		oth	0	prc	flg	drdThd	false	slvdn	8				0	false
		oth	3	prc	flgbuf	flgbufLock	false	lock_t					lockIdle	false
		oth	3	prc	flgbuf	flgbufFull	false	sl	1				0	false
		oprt	0	prc	flgbufB	tixVFlgbufstate	false	slvdn	8					false	getInfoTixVFlgbufstate
		oth	0	prc	flgbufB	enFlgbufB	false	sl	1		flgbufLock=lockBufB and !strbDFlgbufToHostif and state(readA)	1	0	false
		oth	2	prc	flgbufB	aFlgbufB_vec	false	slvdn	15					false
		oth	2	prc	flgbufB	aFlgbufB	false	nat		0..24576			0	false
		oprt	0	prc	flgbufB	ackFlgbufToHostif	false	sl	1				0	false	ackFlgbufToHostif
		oth	4	prc	maxsel	dCorner	false	slvdn	8				0	false
		strb	4	prc	maxsel	strbDCorner	false	sl	1		state(store)	1	0	false
		oth	0	prc	op	streamrun	false	sl	1				0	false
		oprt	0	prc	op	ackInvSet	false	sl	1				0	false	ackInvSet
		oth	0	prc	op	thdNotCorner	false	sl	1				0	false
		oth	0	prc	op	thdDeltaNotAbs	false	sl	1				0	false
		oprt	0	prc	op	ackInvSetCorner	false	sl	1				0	false	ackInvSetCorner
		oth	0	prc	op	cornerLinNotLog	false	sl	1				0	false
		oth	0	prc	op	cornerThd	false	nat		0..255			127	false
		oprt	0	prc	op	ackInvSetThd	false	sl	1				0	false	ackInvSetThd
		oth	5	prc	op	thdLvlFirst	false	slvdn	8				0	false
		oth	5	prc	op	thdLvlSecond	false	slvdn	8				0	false
		oth	6	prc	stream	reqGrrdbuf	false	sl	1				0	false
		oth	6	prc	stream	ackGrrdbuf	false	sl	1					false
		strb	0	prc	stream	strbDGrrdbuf	false	sl	1		state(loadAceB;loadBdfB)	1	0	false
		oth	7	prc	stream	dStream	false	slvdn	48				0	false
		strb	7	prc	stream	strbDStream	false	sl	1		state(loadBdfB)	1	0	false
		oth	8	prc	thd	dwrThd	false	slvdn	8				0	false
		strb	8	prc	thd	strbDwrThd	false	sl	1				0	false
		strb	0	prc	thd	strbDrdThd	false	sl	1				0	false
		oth	9	prc	imdstream	shift	false	nat		0..47			0	false
		oprt	9	prc	imdstream	scoreMin	false	slvdn	8				1	false	getCornerinfoScoreMin
		oprt	9	prc	imdstream	scoreMax	false	slvdn	8				0	false	getCornerinfoScoreMax
		oth	0	prc	imdstream	enImdbuf	false	sl	1		state(startrowC;LSB;LSD)	1	0	false
		oth	0	prc	imdstream	enImdabbuf	false	sl	1				0	false
		oth	0	prc	imdstream	weImdabbuf	false	sl	1				0	false
		oth	10	prc	imdstream	aImdabbuf_vec	false	slvdn	11					false
		oth	10	prc	imdstream	aImdabbuf	false	nat		0..2048			0	false
		oth	0	prc	imdstream	dwrImdabbuf	false	slvdn	8				0	false
		oth	0	prc	imdstream	enImdcdbuf	false	sl	1				0	false
		oth	0	prc	imdstream	weImdcdbuf	false	sl	1				0	false
		oth	11	prc	imdstream	aImdcdbuf_vec	false	slvdn	11					false
		oth	11	prc	imdstream	aImdcdbuf	false	nat		0..2048			0	false
		oth	0	prc	imdstream	dwrImdcdbuf	false	slvdn	8				0	false
		oth	0	prc	imdstream	enImdefbuf	false	sl	1				0	false
		oth	0	prc	imdstream	weImdefbuf	false	sl	1				0	false
		oth	12	prc	imdstream	aImdefbuf_vec	false	slvdn	11					false
		oth	12	prc	imdstream	aImdefbuf	false	nat		0..2048			0	false
		oth	0	prc	imdstream	dwrImdefbuf	false	slvdn	8				0	false
		oth	13	prc	imdstream	dImdstream	false	slvdn	40				0	false
		strb	13	prc	imdstream	strbDImdstream	false	sl	1		state(LSD)	1	0	false
		oth	0	mdl	flgbuf	drdFlgbuf	false	slvdn	8					false
		oth	0	mdl	imdabbuf	drdImdabbuf	false	slvdn	8					false
		oth	0	mdl	imdcdbuf	drdImdcdbuf	false	slvdn	8					false
		oth	0	mdl	imdefbuf	drdImdefbuf	false	slvdn	8					false
		hshk	14	prc	flg	reqFlgToFlgbufLock	false	sl	1				0	false
		hshk	14	prc	flgbuf	ackFlgToFlgbufLock	false	sl	1				0	false
		hshk	14	prc	flgbuf	dnyFlgToFlgbufLock	false	sl	1				0	false
		hshk	15	prc	flg	reqFlgToFlgbufSetFull	false	sl	1		state(doneB)	1	0	false
		hshk	15	prc	flgbuf	ackFlgToFlgbufSetFull	false	sl	1				0	false
		hshk	16	prc	flgbufB	reqFlgbufBToFlgbufLock	false	sl	1				0	false
		hshk	16	prc	flgbuf	ackFlgbufBToFlgbufLock	false	sl	1				0	false
		hshk	16	prc	flgbuf	dnyFlgbufBToFlgbufLock	false	sl	1				0	false
		hshk	17	prc	flgbufB	reqFlgbufBToFlgbufClear	false	sl	1				0	false
		hshk	17	prc	flgbuf	ackFlgbufBToFlgbufClear	false	sl	1				0	false
		oth	0	void		mclkn	false	sl	1					false
		oth	0	prc	corner	ceScore	false	sl	1		state(pipe)	1	0	true
		oth	0	prc	corner	abcde	false	nat	0..4				0	false
		oth	0	prc	corner	dx	false	slvdn	45				0	false		5x 9bits
		oth	0	prc	corner	dy	false	slvdn	45				0	false		5y 9bits
		oth	0	void		xsqr	false	slvdn	90					false		5x 18bits, set by modules xsqr0 to xsqr4
		oth	0	mdl	colsumXA	colsumXA	false	slvdn	20					false
		oth	18	prc	fwd	xsqr3p1	false	slvdn	18				0	false
		oth	18	prc	fwd	xsqr3p2	false	slvdn	18				0	false
		oth	19	prc	fwd	xsqr4p1	false	slvdn	18				0	false
		oth	19	prc	fwd	xsqr4p2	false	slvdn	18				0	false
		oth	0	mdl	colsumXB	colsumXB	false	slvdn	21					false
		oth	0	prc	copy	colsumX	false	slvdn	105				0	false		5x 21bits
		oth	0	mdl	sumXA	sumXA	false	slvdn	22					false
		oth	0	mdl	sumXB	sumXB	false	slvdn	22					false
		oth	0	mdl	sumXC	sumXC	false	slvdn	23					false
		oth	20	prc	fwd	colsumX4p1	false	slvdn	21				0	false
		oth	20	prc	fwd	colsumX4p2	false	slvdn	21				0	false
		oth	20	prc	fwd	colsumX4p3	false	slvdn	21				0	false
		oth	20	prc	fwd	colsumX4p4	false	slvdn	21				0	false
		oth	0	mdl	sumX	sumX	false	slvdn	23					false
		oth	0	void		ysqr	false	slvdn	90					false		5x 18bits, set by modules ysqr0 to ysqr4
		oth	0	mdl	colsumYA	colsumYA	false	slvdn	20					false
		oth	21	prc	fwd	ysqr3p1	false	slvdn	18				0	false
		oth	21	prc	fwd	ysqr3p2	false	slvdn	18				0	false
		oth	22	prc	fwd	ysqr4p1	false	slvdn	18				0	false
		oth	22	prc	fwd	ysqr4p2	false	slvdn	18				0	false
		oth	0	mdl	colsumYB	colsumYB	false	slvdn	21					false
		oth	0	prc	copy	colsumY	false	slvdn	105				0	false		5x 21bits
		oth	0	mdl	sumYA	sumYA	false	slvdn	22					false
		oth	0	mdl	sumYB	sumYB	false	slvdn	22					false
		oth	0	mdl	sumYC	sumYC	false	slvdn	23					false
		oth	23	prc	fwd	colsumY4p1	false	slvdn	21				0	false
		oth	23	prc	fwd	colsumY4p2	false	slvdn	21				0	false
		oth	23	prc	fwd	colsumY4p3	false	slvdn	21				0	false
		oth	23	prc	fwd	colsumY4p4	false	slvdn	21				0	false
		oth	0	mdl	sumY	sumY	false	slvdn	23					false
		oth	0	void		xy	false	slvdn	90					false		5x 18bits, set by modules xy0 to xy4
		oth	0	mdl	colsumXYA	colsumXYA	false	slvdn	20					false
		oth	24	prc	fwd	xy3p1	false	slvdn	18				0	false
		oth	24	prc	fwd	xy3p2	false	slvdn	18				0	false
		oth	25	prc	fwd	xy4p1	false	slvdn	18				0	false
		oth	25	prc	fwd	xy4p2	false	slvdn	18				0	false
		oth	0	mdl	colsumXYB	colsumXYB	false	slvdn	21					false
		oth	0	prc	copy	colsumXY	false	slvdn	105				0	false		5x 21bits
		oth	0	mdl	sumXYA	sumXYA	false	slvdn	22					false
		oth	0	mdl	sumXYB	sumXYB	false	slvdn	22					false
		oth	0	mdl	sumXYC	sumXYC	false	slvdn	23					false
		oth	26	prc	fwd	colsumXY4p1	false	slvdn	21				0	false
		oth	26	prc	fwd	colsumXY4p2	false	slvdn	21				0	false
		oth	26	prc	fwd	colsumXY4p3	false	slvdn	21				0	false
		oth	26	prc	fwd	colsumXY4p4	false	slvdn	21				0	false
		oth	0	mdl	sumXY	sumXY	false	slvdn	23					false
		oth	0	mdl	sumIII	sumIII	false	slvdn	24					false
		oth	0	mdl	termI	termI	false	slvdn	46					false
		oth	0	mdl	termII	termII	false	slvdn	46					false
		oth	0	mdl	termIII	termIII	false	slvdn	48					false
		oth	0	prc	factk	termIIIk	false	slvdn	44				0	false
		oth	0	mdl	diffI_II	diffI_II	false	slvdn	47					false
		oth	0	prc	fwd	diffI_IIp1	false	slvdn	47				0	false
		oth	0	mdl	r	r	false	slvdn	48					false
		oth	0	prc	exp	rexp	false	slvdn	8				0	false
		oth	0	prc	exp	rshift	false	nat		0..39			0	false
		ImeIMSignal2.end
		ImeIMProcess.sref	clkSrefWdbeMSignal	asrSrefWdbeMSignal	Falling	Syncrst	Extip	Comment
		flg	mclk	reset	false	state(init) or !streamrun	false	flagging operation, also managing flgbuf
			ImeIMFsm.
			
				ImeICFsmstate.iref
				1
				ImeICFsmstate.end
				ImeIMFsmstate.irefRefWdbeCFsmstate	sref	Extip	Comment
				0	init	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					init	!streamrun	off
					trylock	else		!thdNotCorner	corner
					waitTrig	else		else	thd
					ImeIAMFsmstateStep.end
				0	waitTrig	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					inv	reqInvTriggerThd
					ImeIAMFsmstateStep.end
				0	inv	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					trylock	!reqInvTriggerThd		!thdSecondNotFirst	trigFirst
					waitFrame	!reqInvTriggerThd		else
					ImeIAMFsmstateStep.end
				0	trylock	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					waitFrame	ackFlgToFlgbufLock	ack
					init	dnyFlgToFlgbufLock	dny
					ImeIAMFsmstateStep.end
				0	waitFrame	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					ready	camacqGetGrrdinfoTixVGrrdbufstate=tixVCamacqGrrdbufstateEmpty	tkst	!thdNotCorner	corner
					ldthd	camacqGetGrrdinfoTixVGrrdbufstate=tixVCamacqGrrdbufstateEmpty	tkst	else	thd
					ImeIAMFsmstateStep.end
				0	ready	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					stcorner	strbDCorner	prepStcorner
					ldthd	strbDrdThd	prepLdthd
					stthd	strbDwrThd	prepStthd
					ImeIAMFsmstateStep.end
				0	ldthd	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					ready		ldthd
					ImeIAMFsmstateStep.end
				0	stcorner	true
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					doneB	aFlgbuf=97664	cmt
					ready	else
					ImeIAMFsmstateStep.end
				0	stthd	true
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					doneA	arowFlgbufWr=768	lastRow	acolFlgbufWr=128	lastCol	a0FlgbufWr=98304
					ready	arowFlgbufWr=768	lastRow	acolFlgbufWr=128	lastCol	else
					ready	arowFlgbufWr=768	lastRow	else
					ready	else
					ImeIAMFsmstateStep.end
				1	doneA	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					doneB	!thdDeltaNotAbs or thdSecondNotFirst	final
					waitTrig	else	second
					ImeIAMFsmstateStep.end
				1	doneB	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					doneC	ackFlgToFlgbufSetFull
					ImeIAMFsmstateStep.end
				1	doneC	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					init	!flgbufFull
					ImeIAMFsmstateStep.end
				ImeIMFsmstate.end
			ImeIMFsm.end
		flgbuf	mclk	reset	false	state(init) or !streamrun	false	flgbuf mutex management
			ImeIAVKeylistKey.sref	Title	Comment
			lock_t	(lockIdle, lockBufB, lockFlg)	lockIdle
			ImeIAVKeylistKey.end
			ImeIMFsm.
			
				ImeIMFsmstate.irefRefWdbeCFsmstate	sref	Extip	Comment
				0	init	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					init	!streamrun
					ready	else
					ImeIAMFsmstateStep.end
				0	ready	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					ack	reqFlgToFlgbufLock	flgLock
					ack	reqFlgToFlgbufSetFull	flgFull
					ack	reqFlgbufBToFlgbufLock	flgbufBLock
					ack	reqFlgbufBToFlgbufClear	flgbufBClear
					ImeIAMFsmstateStep.end
				0	ack	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					ready	(ackFlgToFlgbufLock or dnyFlgToFlgbufLock) and !reqFlgToFlgbufLock	flgLock
					ready	ackFlgToFlgbufSetFull and !reqFlgToFlgbufSetFull	flgFull
					ready	(ackFlgbufBToFlgbufLock or dnyFlgbufBToFlgbufLock) and !reqFlgbufBToFlgbufLock	flgbufBLock
					ready	ackFlgbufBToFlgbufClear and !reqFlgbufBToFlgbufClear	flgbufBClear
					ImeIAMFsmstateStep.end
				ImeIMFsmstate.end
			ImeIMFsm.end
		flgbufB	mclk	reset	false	state(init) or !streamrun	false	flgbuf B/hostif-facing operation
			ImeIMFsm.
			
				ImeICFsmstate.iref
				1
				ImeICFsmstate.end
				ImeIMFsmstate.irefRefWdbeCFsmstate	sref	Extip	Comment
				0	init	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					init	!streamrun
					ready	else
					ImeIAMFsmstateStep.end
				0	ready	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					trylock	tixVFlgbufstate=tixVFlgbufstateFull and reqFlgbufToHostif	prep
					ImeIAMFsmstateStep.end
				0	trylock	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					readA	ackFlgbufBToFlgbufLock	ack
					init	dnyFlgbufBToFlgbufLock
					ImeIAMFsmstateStep.end
				1	readA	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					done	flgbufLock=lockBufB		dneFlgbufToHostif	dne
					done	flgbufLock=lockBufB		!reqFlgbufToHostif	cnc
					readB	flgbufLock=lockBufB		!strbDFlgbufToHostif	step
					ImeIAMFsmstateStep.end
				1	readB	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					done	flgbufLock=lockBufB		!reqFlgbufToHostif	cnc
					readA	flgbufLock=lockBufB		strbDFlgbufToHostif	inc
					ImeIAMFsmstateStep.end
				0	done	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					init	ackFlgbufBToFlgbufLock or ackFlgbufBToFlgbufClear
					ImeIAMFsmstateStep.end
				ImeIMFsmstate.end
			ImeIMFsm.end
		op	mclk	reset	false	state(init) or (state(!inv) and state(!invSet) and (reqInvSet or reqInvSetCorner or reqInvSetThd))		main operation
			ImeIMFsm.
			
				ImeIMFsmstate.irefRefWdbeCFsmstate	sref	Extip	Comment
				0	init	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					invSet	reqInvSet	invSet
					inv	reqInvSetCorner	invSetCorner
					inv	reqInvSetThd	invSetThd
					run	streamrun
					init	else	syncrst
					ImeIAMFsmstateStep.end
				0	invSet	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					inv		invSet
					ImeIAMFsmstateStep.end
				0	inv	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					init	(!reqInvSet and ackInvSet_sig) or (!reqInvSetCorner and ackInvSetCorner_sig) or (!reqInvSetThd and ackInvSetThd_sig)	inv
					ImeIAMFsmstateStep.end
				0	run	false
				ImeIMFsmstate.end
			ImeIMFsm.end
		stream	mclk	reset	false	state(init) or !streamrun	false	streaming operation, also handling grrd{ab/cd/ef}bufFromCamacq
			ImeIMFsm.
			
				ImeICFsmstate.iref
				1
				2
				3
				4
				ImeICFsmstate.end
				ImeIMFsmstate.irefRefWdbeCFsmstate	sref	Extip	Comment
				0	init	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					init	!streamrun
					waitFrame	else
					ImeIAMFsmstateStep.end
				0	waitFrame	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					skipA	camacqGetGrrdinfoTixVGrrdbufstate=tixVCamacqGrrdbufstateEmpty	waitFrame
					ImeIAMFsmstateStep.end
				1	skipA	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					skipB	camacqGetGrrdinfoTixVGrrdbufstate=tixVCamacqGrrdbufstateStream
					ImeIAMFsmstateStep.end
				1	skipB	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					startrowA	camacqGetGrrdinfoTixVGrrdbufstate=tixVCamacqGrrdbufstatePause	inc	row=5
					skipA	camacqGetGrrdinfoTixVGrrdbufstate=tixVCamacqGrrdbufstatePause	inc	else
					ImeIAMFsmstateStep.end
				2	startrowA	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					startrowB	camacqGetGrrdinfoTixVGrrdbufstate=tixVCamacqGrrdbufstateStream	startrowA
					ImeIAMFsmstateStep.end
				2	startrowB	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					loadAceA	ackGrrdbuf	startrowB
					ImeIAMFsmstateStep.end
				3	loadAceA	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					loadAceB		loadAceA
					ImeIAMFsmstateStep.end
				3	loadAceB	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					loadBdfA
					ImeIAMFsmstateStep.end
				4	loadBdfA	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					loadBdfB		loadBdfA
					ImeIAMFsmstateStep.end
				4	loadBdfB	true
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					stoprow	col=1024	lastCol
					loadAceA	else
					ImeIAMFsmstateStep.end
				0	stoprow	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					startrowA	camacqGetGrrdinfoTixVGrrdbufstate=tixVCamacqGrrdbufstatePause	incRow
					init	camacqGetGrrdinfoTixVGrrdbufstate=tixVCamacqGrrdbufstateEndfr
					ImeIAMFsmstateStep.end
				ImeIMFsmstate.end
			ImeIMFsm.end
		thd	mclk	reset	false	state(init) or !thdrun	false	threshold detection
			ImeIMFsm.
			
				ImeICFsmstate.iref
				1
				ImeICFsmstate.end
				ImeIMFsmstate.irefRefWdbeCFsmstate	sref	Extip	Comment
				0	init	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					init	!thdrun	stop
					LASA	else	start
					ImeIAMFsmstateStep.end
				1	LASA	false	complex conditional jump to LASB
				1	LASB	true
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					done	blk=127 and row=1 and byteS=6
					LASA	else
					ImeIAMFsmstateStep.end
				0	done	false
				ImeIMFsmstate.end
			ImeIMFsm.end
		copy	mclk	reset	false	state(init) or !cornerrun	false	Harris score pipeline copy operation
			ImeIMFsm.
			
				ImeIMFsmstate.irefRefWdbeCFsmstate	sref	Extip	Comment
				0	init	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					init	!cornerrun
					run	else
					ImeIAMFsmstateStep.end
				0	run	false
				ImeIMFsmstate.end
			ImeIMFsm.end
		corner	mclk	reset	false	state(init) or !cornerrun	false	Harris corner detection and score pipeline operation
			ImeIMFsm.
			
				ImeIMFsmstate.irefRefWdbeCFsmstate	sref	Extip	Comment
				0	init	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					init	!cornerrun
					diff	else
					ImeIAMFsmstateStep.end
				0	diff	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					pipe	strbDStream	diff
					ImeIAMFsmstateStep.end
				0	pipe	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					step
					ImeIAMFsmstateStep.end
				0	step	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					diff		step
					ImeIAMFsmstateStep.end
				ImeIMFsmstate.end
			ImeIMFsm.end
		exp	mclk	reset	false	state(init) or !cornerrun	false	Harris score result exponent/mantissa transform
			ImeIMFsm.
			
				ImeIMFsmstate.irefRefWdbeCFsmstate	sref	Extip	Comment
				0	init	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					init	!cornerrun
					run	else
					ImeIAMFsmstateStep.end
				0	run	false
				ImeIMFsmstate.end
			ImeIMFsm.end
		factk	mclk	reset	false	state(init) or !cornerrun	false	Harris score third term 5/128 multiplier
			ImeIMFsm.
			
				ImeIMFsmstate.irefRefWdbeCFsmstate	sref	Extip	Comment
				0	init	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					init	!cornerrun
					run	else
					ImeIAMFsmstateStep.end
				0	run	false
				ImeIMFsmstate.end
			ImeIMFsm.end
		fwd	mclk	reset	false	state(init) or !cornerrun	false	Harris score pipeline forward operation
			ImeIMFsm.
			
				ImeIMFsmstate.irefRefWdbeCFsmstate	sref	Extip	Comment
				0	init	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					init	!cornerrun
					run	else
					ImeIAMFsmstateStep.end
				0	run	false
				ImeIMFsmstate.end
			ImeIMFsm.end
		imdstream	mclk	reset	false	state(init) or !cornerrun	false	intermediate result streaming operation, also handling imd{ab/cd/ef}buf
			ImeIMFsm.
			
				ImeICFsmstate.iref
				1
				2
				3
				4
				ImeICFsmstate.end
				ImeIMFsmstate.irefRefWdbeCFsmstate	sref	Extip	Comment
				0	init	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					init	!cornerrun
					waitFrame	else
					ImeIAMFsmstateStep.end
				0	waitFrame	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					skipA	camacqGetGrrdinfoTixVGrrdbufstate=tixVCamacqGrrdbufstateEmpty	waitFrame
					ImeIAMFsmstateStep.end
				1	skipA	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					skipB	camacqGetGrrdinfoTixVGrrdbufstate=tixVCamacqGrrdbufstateStream
					ImeIAMFsmstateStep.end
				1	skipB	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					startrowA	camacqGetGrrdinfoTixVGrrdbufstate=tixVCamacqGrrdbufstatePause	inc	row=5
					skipA	camacqGetGrrdinfoTixVGrrdbufstate=tixVCamacqGrrdbufstatePause	inc	else
					ImeIAMFsmstateStep.end
				2	startrowA	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					startrowB	camacqGetGrrdinfoTixVGrrdbufstate=tixVCamacqGrrdbufstateStream	startrowA
					ImeIAMFsmstateStep.end
				2	startrowB	true
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					startrowC	i=imax	startrowB
					ImeIAMFsmstateStep.end
				2	startrowC	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					LSA
					ImeIAMFsmstateStep.end
				3	LSA	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					LSB		LSA
					ImeIAMFsmstateStep.end
				3	LSB	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					LSC
					ImeIAMFsmstateStep.end
				4	LSC	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					LSD		LSC
					ImeIAMFsmstateStep.end
				4	LSD	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					stoprow	col=1024
					LSA	else
					ImeIAMFsmstateStep.end
				0	stoprow	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					startrowA	camacqGetGrrdinfoTixVGrrdbufstate=tixVCamacqGrrdbufstatePause	incRow
					init	camacqGetGrrdinfoTixVGrrdbufstate=tixVCamacqGrrdbufstateEndfr	updScore
					ImeIAMFsmstateStep.end
				ImeIMFsmstate.end
			ImeIMFsm.end
		maxsel	mclk	reset	false	state(init) or !cornerrun	false	maximum selection
			ImeIMFsm.
			
				ImeIMFsmstate.irefRefWdbeCFsmstate	sref	Extip	Comment
				0	init	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					init	!cornerrun
					imd	else
					ImeIAMFsmstateStep.end
				0	imd	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					max	strbDImdstream	maxEl
					ImeIAMFsmstateStep.end
				0	max	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					act		max
					ImeIAMFsmstateStep.end
				0	act	true
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					store	i=8	toStore
					imd	else
					ImeIAMFsmstateStep.end
				0	store	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					imd
					ImeIAMFsmstateStep.end
				ImeIMFsmstate.end
			ImeIMFsm.end
		ImeIMProcess.end
	arty_ip_AXI;top;featdet	xsqr0
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		ce								ceScore
		retrupd	0		clk								mclk
		retrupd	0		a								dx[44..36]
		retrupd	0		b								dx[44..36]
		retrupd	0		p								xsqr[89..72]
		ImeIMPort.end
	arty_ip_AXI;top;featdet	xsqr1
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		ce								ceScore
		retrupd	0		clk								mclk
		retrupd	0		a								dx[35..27]
		retrupd	0		b								dx[35..27]
		retrupd	0		p								xsqr[71..54]
		ImeIMPort.end
	arty_ip_AXI;top;featdet	xsqr2
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		ce								ceScore
		retrupd	0		clk								mclk
		retrupd	0		a								dx[26..18]
		retrupd	0		b								dx[26..18]
		retrupd	0		p								xsqr[53..36]
		ImeIMPort.end
	arty_ip_AXI;top;featdet	xsqr3
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		ce								ceScore
		retrupd	0		clk								mclk
		retrupd	0		a								dx[17..9]
		retrupd	0		b								dx[17..9]
		retrupd	0		p								xsqr[35..18]
		ImeIMPort.end
	arty_ip_AXI;top;featdet	xsqr4
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		ce								ceScore
		retrupd	0		clk								mclk
		retrupd	0		a								dx[8..0]
		retrupd	0		b								dx[8..0]
		retrupd	0		p								xsqr[17..0]
		ImeIMPort.end
	arty_ip_AXI;top;featdet	colsumXA
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		ce								ceScore
		retrupd	0		clk								mclk
		retrupd	0		a								xsqr[89..72]
		retrupd	0		c								xsqr[71..54]
		retrupd	0		d								xsqr[53..36]
		retrupd	0		p								colsumXA
		ImeIMPort.end
	arty_ip_AXI;top;featdet	colsumXB
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		ce								ceScore
		retrupd	0		clk								mclk
		retrupd	0		a								xsqr[35..18]
		retrupd	0		c								colsumXA
		retrupd	0		d								xsqr[17..0]
		retrupd	0		p								colsumXB
		ImeIMPort.end
	arty_ip_AXI;top;featdet	sumXA
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		ce								ceScore
		retrupd	0		clk								mclk
		retrupd	0		a								colsumX[104..84]
		retrupd	0		b								colsumX[83..63]
		retrupd	0		s								sumXA
		ImeIMPort.end
	arty_ip_AXI;top;featdet	sumXB
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		ce								ceScore
		retrupd	0		clk								mclk
		retrupd	0		a								colsumX[62..42]
		retrupd	0		b								colsumX[41..21]
		retrupd	0		s								sumXB
		ImeIMPort.end
	arty_ip_AXI;top;featdet	sumXC
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		ce								ceScore
		retrupd	0		clk								mclk
		retrupd	0		a								sumXA
		retrupd	0		b								sumXB
		retrupd	0		s								sumXC
		ImeIMPort.end
	arty_ip_AXI;top;featdet	sumX
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		ce								ceScore
		retrupd	0		clk								mclk
		retrupd	0		a								sumXC
		retrupd	0		b								colsumX4p4
		retrupd	0		s								sumX
		ImeIMPort.end
	arty_ip_AXI;top;featdet	ysqr0
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		ce								ceScore
		retrupd	0		clk								mclk
		retrupd	0		a								dy[44..36]
		retrupd	0		b								dy[44..36]
		retrupd	0		p								ysqr[89..72]
		ImeIMPort.end
	arty_ip_AXI;top;featdet	ysqr1
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		ce								ceScore
		retrupd	0		clk								mclk
		retrupd	0		a								dy[35..27]
		retrupd	0		b								dy[35..27]
		retrupd	0		p								ysqr[71..54]
		ImeIMPort.end
	arty_ip_AXI;top;featdet	ysqr2
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		ce								ceScore
		retrupd	0		clk								mclk
		retrupd	0		a								dy[26..18]
		retrupd	0		b								dy[26..18]
		retrupd	0		p								ysqr[53..36]
		ImeIMPort.end
	arty_ip_AXI;top;featdet	ysqr3
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		ce								ceScore
		retrupd	0		clk								mclk
		retrupd	0		a								dy[17..9]
		retrupd	0		b								dy[17..9]
		retrupd	0		p								ysqr[35..18]
		ImeIMPort.end
	arty_ip_AXI;top;featdet	ysqr4
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		ce								ceScore
		retrupd	0		clk								mclk
		retrupd	0		a								dy[8..0]
		retrupd	0		b								dy[8..0]
		retrupd	0		p								ysqr[17..0]
		ImeIMPort.end
	arty_ip_AXI;top;featdet	colsumYA
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		ce								ceScore
		retrupd	0		clk								mclk
		retrupd	0		a								ysqr[89..72]
		retrupd	0		c								ysqr[71..54]
		retrupd	0		d								ysqr[53..36]
		retrupd	0		p								colsumYA
		ImeIMPort.end
	arty_ip_AXI;top;featdet	colsumYB
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		ce								ceScore
		retrupd	0		clk								mclk
		retrupd	0		a								ysqr[35..18]
		retrupd	0		c								colsumYA
		retrupd	0		d								ysqr[17..0]
		retrupd	0		p								colsumYB
		ImeIMPort.end
	arty_ip_AXI;top;featdet	sumYA
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		ce								ceScore
		retrupd	0		clk								mclk
		retrupd	0		a								colsumY[104..84]
		retrupd	0		b								colsumY[83..63]
		retrupd	0		s								sumYA
		ImeIMPort.end
	arty_ip_AXI;top;featdet	sumYB
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		ce								ceScore
		retrupd	0		clk								mclk
		retrupd	0		a								colsumY[62..42]
		retrupd	0		b								colsumY[41..21]
		retrupd	0		s								sumYB
		ImeIMPort.end
	arty_ip_AXI;top;featdet	sumYC
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		ce								ceScore
		retrupd	0		clk								mclk
		retrupd	0		a								sumYA
		retrupd	0		b								sumYB
		retrupd	0		s								sumYC
		ImeIMPort.end
	arty_ip_AXI;top;featdet	sumY
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		ce								ceScore
		retrupd	0		clk								mclk
		retrupd	0		a								sumYC
		retrupd	0		b								colsumY4p4
		retrupd	0		s								sumY
		ImeIMPort.end
	arty_ip_AXI;top;featdet	xy0
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		ce								ceScore
		retrupd	0		clk								mclk
		retrupd	0		a								dx[44..36]
		retrupd	0		b								dy[44..36]
		retrupd	0		p								xy[89..72]
		ImeIMPort.end
	arty_ip_AXI;top;featdet	xy1
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		ce								ceScore
		retrupd	0		clk								mclk
		retrupd	0		a								dx[35..27]
		retrupd	0		b								dy[35..27]
		retrupd	0		p								xy[71..54]
		ImeIMPort.end
	arty_ip_AXI;top;featdet	xy2
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		ce								ceScore
		retrupd	0		clk								mclk
		retrupd	0		a								dx[26..18]
		retrupd	0		b								dy[26..18]
		retrupd	0		p								xy[53..36]
		ImeIMPort.end
	arty_ip_AXI;top;featdet	xy3
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		ce								ceScore
		retrupd	0		clk								mclk
		retrupd	0		a								dx[17..9]
		retrupd	0		b								dy[17..9]
		retrupd	0		p								xy[35..18]
		ImeIMPort.end
	arty_ip_AXI;top;featdet	xy4
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		ce								ceScore
		retrupd	0		clk								mclk
		retrupd	0		a								dx[8..0]
		retrupd	0		b								dy[8..0]
		retrupd	0		p								xy[17..0]
		ImeIMPort.end
	arty_ip_AXI;top;featdet	colsumXYA
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		ce								ceScore
		retrupd	0		clk								mclk
		retrupd	0		a								xy[89..72]
		retrupd	0		c								xy[71..54]
		retrupd	0		d								xy[53..36]
		retrupd	0		p								colsumXYA
		ImeIMPort.end
	arty_ip_AXI;top;featdet	colsumXYB
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		ce								ceScore
		retrupd	0		clk								mclk
		retrupd	0		a								xy[35..18]
		retrupd	0		c								colsumXYA
		retrupd	0		d								xy[17..0]
		retrupd	0		p								colsumXYB
		ImeIMPort.end
	arty_ip_AXI;top;featdet	sumXYA
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		ce								ceScore
		retrupd	0		clk								mclk
		retrupd	0		a								colsumXY[104..84]
		retrupd	0		b								colsumXY[83..63]
		retrupd	0		s								sumXYA
		ImeIMPort.end
	arty_ip_AXI;top;featdet	sumXYB
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		ce								ceScore
		retrupd	0		clk								mclk
		retrupd	0		a								colsumXY[62..42]
		retrupd	0		b								colsumXY[41..21]
		retrupd	0		s								sumXYB
		ImeIMPort.end
	arty_ip_AXI;top;featdet	sumXYC
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		ce								ceScore
		retrupd	0		clk								mclk
		retrupd	0		a								sumXYA
		retrupd	0		b								sumXYB
		retrupd	0		s								sumXYC
		ImeIMPort.end
	arty_ip_AXI;top;featdet	sumXY
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		ce								ceScore
		retrupd	0		clk								mclk
		retrupd	0		a								sumXYC
		retrupd	0		b								colsumXY4p4
		retrupd	0		s								sumXY
		ImeIMPort.end
	arty_ip_AXI;top;featdet	sumIII
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		ce								ceScore
		retrupd	0		clk								mclk
		retrupd	0		a								sumX
		retrupd	0		b								sumY
		retrupd	0		s								sumIII
		ImeIMPort.end
	arty_ip_AXI;top;featdet	termIII
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		ce								ceScore
		retrupd	0		clk								mclk
		retrupd	0		a								sumIII
		retrupd	0		b								sumIII
		retrupd	0		p								termIII
		ImeIMPort.end
	arty_ip_AXI;top;featdet	termII
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		ce								ceScore
		retrupd	0		clk								mclk
		retrupd	0		a								sumXY
		retrupd	0		b								sumXY
		retrupd	0		p								termII
		ImeIMPort.end
	arty_ip_AXI;top;featdet	termI
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		ce								ceScore
		retrupd	0		clk								mclk
		retrupd	0		a								sumX
		retrupd	0		b								sumY
		retrupd	0		p								termI
		ImeIMPort.end
	arty_ip_AXI;top;featdet	diffI_II
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		ce								ceScore
		retrupd	0		clk								mclk
		retrupd	0		a								termI
		retrupd	0		b								termII
		retrupd	0		s								diffI_II
		ImeIMPort.end
	arty_ip_AXI;top;featdet	r
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		ce								ceScore
		retrupd	0		clk								mclk
		retrupd	0		a								diffI_II
		retrupd	0		b								termIIIk
		retrupd	0		s								r
		ImeIMPort.end
	arty_ip_AXI;top;featdet	flgbuf
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		clkA								mclkn
		retrupd	0		enA								enFlgbuf
		retrupd	0		weA								weFlgbuf
		retrupd	0		addrA								aFlgbuf_vec
		retrupd	0		doutA								drdFlgbuf
		retrupd	0		dinA								dwrFlgbuf
		retrupd	0		clkB								mclk
		retrupd	0		enB								enFlgbufB
		retrupd	0		addrB								aFlgbufB_vec
		retrupd	0		doutB							dFlgbufToHostif
		ImeIMPort.end
	arty_ip_AXI;top;featdet	imdabbuf
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		clk								mclk
		retrupd	0		en								enImdabbuf
		retrupd	0		we								weImdabbuf
		retrupd	0		a								aImdabbuf_vec
		retrupd	0		drd								drdImdabbuf
		retrupd	0		dwr								dwrImdabbuf
		ImeIMPort.end
	arty_ip_AXI;top;featdet	imdcdbuf
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		clk								mclk
		retrupd	0		en								enImdcdbuf
		retrupd	0		we								weImdcdbuf
		retrupd	0		a								aImdcdbuf_vec
		retrupd	0		drd								drdImdcdbuf
		retrupd	0		dwr								dwrImdcdbuf
		ImeIMPort.end
	arty_ip_AXI;top;featdet	imdefbuf
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		clk								mclk
		retrupd	0		en								enImdefbuf
		retrupd	0		we								weImdefbuf
		retrupd	0		a								aImdefbuf_vec
		retrupd	0		drd								drdImdefbuf
		retrupd	0		dwr								dwrImdefbuf
		ImeIMPort.end
	arty_ip_AXI;top	laser
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		ins	0	reset	reset	in	sl	1					reset
		ins	0	clk	mclk	in	sl	1					mclk
		ImeIMPort.end
		ImeICSignal2.iref
		1
		ImeICSignal2.end
		ImeIMSignal2.srefIxVBasetype	irefRefWdbeCSignal	srefMgeIxVTbl	srefMgeUref	sref	Const	srefWdbeKHdltype	Width	Minmax	Comb	Onval	Offval	Defon	srefDrvRefWdbeMPort	Comment
		oprt	0	prc	op	ackInvSet	false	sl	1					false	ackInvSet
		oth	0	prc	op	spilen	false	slvdn	17				0	false
		oth	0	prc	op	spisend	false	slvdn	8				0	false
		hshk	1	prc	op	reqSpi	false	sl	1				0	false
		hshk	1	mdl	spi	dneSpi	false	sl	1				0	false
		strb	0	mdl	spi	strbSpisend	false	sl	1				0	false
		ImeIMSignal2.end
		ImeIMProcess.sref	clkSrefWdbeMSignal	asrSrefWdbeMSignal	Falling	Syncrst	Extip	Comment
		op	mclk	reset	false	state(init)	false	main operation
			ImeIAVKeylistKey.sref	Title	Comment
			txbuf_t	array(0 to sizeTxbuf-1) of std_logic_vector(7 downto 0)
			ImeIAVKeylistKey.end
			ImeICVariable2.iref
			1
			2
			ImeICVariable2.end
			ImeIMVariable2.irefRefWdbeCVariable	sref	Const	Falling	srefWdbeKHdltype	Width	Minmax	Onval	Offval	Defon	Comment
			1	sizeTxbuf	true	false	nat				2	false
			1	txbuf	false	false	txbuf_t				(x"00",x"00")	false
			0	bytecnt	false	false	nat		0..sizeTxbuf		0	false
			2	imax	true	false	nat				fMclk*8/1000	false	8us
			2	i	false	false	nat		0..imax		0	false
			0	rNotL	false	false	_bool				false	false
			ImeIMVariable2.end
			ImeIMFsm.
			
				ImeICFsmstate.iref
				1
				2
				ImeICFsmstate.end
				ImeIMFsmstate.irefRefWdbeCFsmstate	sref	Extip	Comment
				0	init	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					prepC
					ImeIAMFsmstateStep.end
				1	prepA	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					wait	dneSpi	done
					prepB	!strbSpisend
					ImeIAMFsmstateStep.end
				1	prepB	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					prepC		prepB
					ImeIAMFsmstateStep.end
				1	prepC	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					prepD		prepC
					ImeIAMFsmstateStep.end
				1	prepD	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					prepA	strbSpisend
					ImeIAMFsmstateStep.end
				0	wait	true
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					idle	i=imax	done
					ImeIAMFsmstateStep.end
				0	idle	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					setC	reqInvSet	prepL
					ImeIAMFsmstateStep.end
				2	setA	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					setC	dneSpi	spioff	not rNotL	prepR
					inv	dneSpi	spioff	else
					setB	!strbSpisend
					ImeIAMFsmstateStep.end
				2	setB	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					setC		setB
					ImeIAMFsmstateStep.end
				2	setC	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					setD		setC
					ImeIAMFsmstateStep.end
				2	setD	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					setA	strbSpisend
					ImeIAMFsmstateStep.end
				0	inv	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					idle	!reqInvSet
					ImeIAMFsmstateStep.end
				ImeIMFsmstate.end
			ImeIMFsm.end
		ImeIMProcess.end
	arty_ip_AXI;top;laser	spi
		ImeIMGeneric.srefIxWdbeVIop	irefRefWdbeCGeneric	sref	srefWdbeKHdltype	Width	Minmax	Defval	srcSrefWdbeMGeneric	Comment
		retrupd	0	fMclk					fMclk
		ImeIMGeneric.end
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		reset								reset
		retrupd	0		mclk								mclk
		retrupd	0		req								reqSpi
		retrupd	0		dne								dneSpi
		retrupd	0		len								spilen
		retrupd	0		send								spisend
		retrupd	0		strbSend								strbSpisend
		retrupd	0		nss						cs
		retrupd	0		sclk						sclk
		retrupd	0		mosi						mosi
		retrupd	0		miso					0
		ImeIMPort.end
	arty_ip_AXI;top	pwmonif
		ImeIMGeneric.srefIxWdbeVIop	irefRefWdbeCGeneric	sref	srefWdbeKHdltype	Width	Minmax	Defval	srcSrefWdbeMGeneric	Comment
		retrupd	0	fMclk					fMclk
		retrupd	0	fSclk				9600
		retrupd	0	toRx				100
		ImeIMGeneric.end
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		reset								reset
		retrupd	0		mclk								mclk
		retrupd	0		tkclk								tkclk
		retrupd	0		rxd						pmnd_rxd
		retrupd	0		txd						pmnd_txd
		ImeIMPort.end
	arty_ip_AXI;top	state
		ImeICPort.iref
		1
		ImeICPort.end
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		ins	0	reset	reset	in	sl	1					reset
		ins	0	clk	tkclk	in	sl	1					tkclk
		ins	1	rtetop	commok	in	sl	1					commok
		ins	1	rtetop	camrng	in	sl	1					camrng
		ins	0	rtetop	rgb	out	slvdn	24					rgb4
		ImeIMPort.end
		ImeIMProcess.sref	clkSrefWdbeMSignal	asrSrefWdbeMSignal	Falling	Syncrst	Extip	Comment
		led	tkclk	reset	false		false	LED control
			ImeIMFsm.
			
				ImeIMFsmstate.irefRefWdbeCFsmstate	sref	Extip	Comment
				0	on	true
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					off	i=1000	prepOff
					ImeIAMFsmstateStep.end
				0	off	true
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					on	i=4000	prepOn
					ImeIAMFsmstateStep.end
				ImeIMFsmstate.end
			ImeIMFsm.end
		ImeIMProcess.end
	arty_ip_AXI;top	step
		ImeIMGeneric.srefIxWdbeVIop	irefRefWdbeCGeneric	sref	srefWdbeKHdltype	Width	Minmax	Defval	srcSrefWdbeMGeneric	Comment
		ins	0	fMclk	nat		1..1000000	50000	fMclk	in kHz
		ImeIMGeneric.end
		ImeICPort.iref
		1
		ImeICPort.end
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		ins	0	reset	reset	in	sl	1					reset
		ins	0	clk	mclk	in	sl	1					mclk
		ins	0	clk	tkclk	in	sl	1					tkclk
		ins	1	rtepin	nslp	out	sl	1			nslp
		ins	1	rtepin	m0	inout	sl	1			m0
		ins	1	rtepin	dir	out	sl	1			dir
		ins	1	rtepin	step0	out	sl	1			step0
		ImeIMPort.end
		ImeICSignal2.iref
		1
		2
		3
		ImeICSignal2.end
		ImeIMSignal2.srefIxVBasetype	irefRefWdbeCSignal	srefMgeIxVTbl	srefMgeUref	sref	Const	srefWdbeKHdltype	Width	Minmax	Comb	Onval	Offval	Defon	srefDrvRefWdbeMPort	Comment
		oprt	1	prc	op	angle	false	nat		0..4095			0	false	getInfoAngle
		oth	1	prc	op	angle_vec	false	slvdn	16					false
		oprt	0	prc	op	ackInvMoveto	false	sl	1				0	false	ackInvMoveto
		oprt	0	prc	op	ackInvSet	false	sl	1				0	false	ackInvSet
		oprt	0	prc	op	ackInvZero	false	sl	1				0	false	ackInvZero
		oth	2	prc	op	rng	false	sl	1				0	false
		oprt	2	prc	op	nslp	false	sl	1		!rng	1	0	false	nslp
		oprt	0	prc	op	ccwNotCw	false	sl	1				0	false	dir
		oprt	0	prc	op	step0	false	sl	1				0	false	step0
		oth	3	prc	op	m0_sig	false	sl	1				0	false
		oth	3	prc	op	m0z	false	sl	1				0	false
		ImeIMSignal2.end
		ImeIMProcess.sref	clkSrefWdbeMSignal	asrSrefWdbeMSignal	Falling	Syncrst	Extip	Comment
		op	mclk	reset	false	state(init) or (state(!inv) and (reqInvMoveto or reqInvSet or reqInvZero))	false	main operation
			ImeICVariable2.iref
			1
			2
			ImeICVariable2.end
			ImeIMVariable2.irefRefWdbeCVariable	sref	Const	Falling	srefWdbeKHdltype	Width	Minmax	Onval	Offval	Defon	Comment
			1	target	true	false	nat		0..1000		0	false
			1	dAngle	false	false	int		-999..1000		0	false
			0	Tstep	false	false	nat		0..255		0	false
			2	targetNotSteady	true	false	_bool				false	false
			2	atTarget	false	false	_bool				false	false
			ImeIMVariable2.end
			ImeIMFsm.
			
				ImeICFsmstate.iref
				1
				ImeICFsmstate.end
				ImeIMFsmstate.irefRefWdbeCFsmstate	sref	Extip	Comment
				0	init	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					inv	reqInvMoveto	moveto
					inv	reqInvSet	set
					inv	reqInvZero	zero
					ready	else
					ImeIAMFsmstateStep.end
				0	ready	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					runB	Tstep/=0		not targetNotSteady and rng	steady
					runB	Tstep/=0		targetNotSteady and not atTarget	target
					ready	Tstep/=0		else	hold
					ImeIAMFsmstateStep.end
				1	runA	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					runB	tkclk	runA
					ImeIAMFsmstateStep.end
				1	runB	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					ready	!tkclk	runB	targetNotSteady and target=angle	done
					runA	!tkclk	runB	else
					ImeIAMFsmstateStep.end
				0	inv	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					init	(!reqInvMoveto and ackInvMoveto_sig) or (!reqInvSet and ackInvSet_sig) or (!reqInvZero and ackInvZero_sig)
					ImeIAMFsmstateStep.end
				ImeIMFsmstate.end
			ImeIMFsm.end
		ImeIMProcess.end
	arty_ip_AXI;top;step	iobufM0
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		IO							m0
		retrupd	0		I								m0_sig
		retrupd	0		T								m0z
		ImeIMPort.end
	arty_ip_AXI;top	tkclksrc
		ImeIMGeneric.srefIxWdbeVIop	irefRefWdbeCGeneric	sref	srefWdbeKHdltype	Width	Minmax	Defval	srcSrefWdbeMGeneric	Comment
		retrupd	0	fMclk					fMclk
		ImeIMGeneric.end
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		reset								reset
		retrupd	0		mclk								mclk
		retrupd	0		tkclk								tkclk
		ImeIMPort.end
	ImeIMModule.end
cleb
	ImeIMBank.srefIxWdbeVIop	sref	srefKVoltstd
	retrupd	bankSd	_1v8
		ImeICPin.iref
		1
		ImeICPin.end
		ImeIMPin.srefIxWdbeVIop	irefRefWdbeCPin	sref	Location
		retrupd	1	pcie_clk_p	C12	GBTCLK0_M2C_P
		retrupd	1	pcie_clk_n	C11	GBTCLK0_M2C_N
		ImeIMPin.end
	retrupd	bank0	_3v3
		ImeIMPin.srefIxWdbeVIop	irefRefWdbeCPin	sref	Location
		retrupd	0	pmnd_rxd	D17	PMOD2_9
		retrupd	0	pmnd_txd	E18	PMOD2_10
		ImeIMPin.end
	retrupd	bank3	_1v8
		ImeICPin.iref
		1
		2
		ImeICPin.end
		ImeIMPin.srefIxWdbeVIop	irefRefWdbeCPin	sref	Location
		retrupd	0	rgb1_r	V14	LA22_P
		retrupd	1	rgb2_r	R13	LA21_N
		retrupd	1	rgb2_g	P13	LA21_P
		retrupd	1	rgb2_b	U14	LA22_N
		retrupd	2	btn0	Y15	LA29_P
		retrupd	2	btn1	Y16	LA29_N
		retrupd	2	btn2	U15	LA28_P
		retrupd	2	btn3	V16	LA28_N
		retrupd	0	pcie_nperst	W11	LA14_P
		retrupd	0	pcie_nwake	Y11	LA14_N
		ImeIMPin.end
	retrupd	bank4	_1v8
		ImeICPin.iref
		1
		ImeICPin.end
		ImeIMPin.srefIxWdbeVIop	irefRefWdbeCPin	sref	Location
		retrupd	0	rgb1_g	R11	LA23_N
		retrupd	0	rgb1_b	P11	LA23_P
		retrupd	0	led4	W6	LA03_P
		retrupd	0	led5	Y6	LA03_N
		retrupd	1	pcie_scl	W8	LA15_P
		retrupd	1	pcie_sda	V9	LA15_N
		ImeIMPin.end
	retrupd	bank5	_1v8
		ImeIMPin.srefIxWdbeVIop	irefRefWdbeCPin	sref	Location
		retrupd	0	led0	R5	LA05_P
		retrupd	0	led1	R6	LA05_N
		retrupd	0	led2	V1	LA04_P
		retrupd	0	led3	W1	LA04_N
		retrupd	0	led6	Y2	LA02_P
		retrupd	0	led7	Y3	LA02_N
		ImeIMPin.end
	retrupd	bank6	_3v3
		ImeICPin.iref
		1
		ImeICPin.end
		ImeIMPin.srefIxWdbeVIop	irefRefWdbeCPin	sref	Location
		retrupd	1	dbg0	L6	RASP_IO02
		retrupd	1	dbg1	L5	RASP_IO03
		ImeIMPin.end
	retrupd	bank7	_3v3
		ImeICPin.iref
		1
		2
		3
		ImeICPin.end
		ImeIMPin.srefIxWdbeVIop	irefRefWdbeCPin	sref	Location
		retrupd	0	PMOD0_1	D10	PMOD0_1
		retrupd	1	scl_alt	D5	PMOD0_8
		retrupd	1	sda_alt	D9	PMOD0_2
		retrupd	0	flsh_alt	D7	PMOD0_3
		retrupd	0	PMOD0_4	D8	PMOD0_4
		retrupd	0	PMOD0_7	D6	PMOD0_7
		retrupd	0	trig_alt	D4	PMOD0_9
		retrupd	0	PMOD0_10	D3	PMOD0_10
		retrupd	2	cs	E10	PMOD1_1
		retrupd	2	sclk	E4	PMOD1_7
		retrupd	2	mosi	E9	PMOD1_2
		retrupd	0	nflt	E7	PMOD1_3
		retrupd	0	dir	E8	PMOD1_4
		retrupd	0	nslp	E3	PMOD1_8
		retrupd	0	m0	E2	PMOD1_9
		retrupd	0	step0	F1	PMOD1_10
		retrupd	0	trig	J2	PMOD2_1
		retrupd	0	flsh	J1	PMOD2_2
		retrupd	3	scl	K2	PMOD2_3
		retrupd	3	sda	K1	PMOD2_4
		retrupd	0	PMOD2_7	K3	PMOD2_7
		retrupd	0	PMOD2_8	K4	PMOD2_8
		ImeIMPin.end
	retrupd	bank61	_1v2
		ImeICPin.iref
		1
		2
		3
		4
		5
		ImeICPin.end
		ImeIMPin.srefIxWdbeVIop	irefRefWdbeCPin	sref	Location
		retrupd	1	csi_clk_p	A8
		retrupd	1	csi_clk_n	B8
		retrupd	2	csi_d0_p	A7
		retrupd	2	csi_d0_n	B7
		retrupd	3	csi_d1_p	A9
		retrupd	3	csi_d1_n	B9
		retrupd	4	csi_d2_p	A6
		retrupd	4	csi_d2_n	B6
		retrupd	5	csi_d3_p	A10
		retrupd	5	csi_d3_n	B10
		ImeIMPin.end
	retrupd	bank80	_1v8
		ImeICPin.iref
		1
		2
		ImeICPin.end
		ImeIMPin.srefIxWdbeVIop	irefRefWdbeCPin	sref	Location
		retrupd	1	pcie_rx_p	A13	DP0_C2M_P
		retrupd	1	pcie_rx_n	A12	DP0_C2M_N
		retrupd	2	pcie_tx_p	A16	DP0_M2C_P
		retrupd	2	pcie_tx_n	A15	DP0_M2C_N
		ImeIMPin.end
	ImeIMBank.end
	ImeIMModule.hsrefSupRefWdbeMModule	sref
		top
		ImeICSignal2.iref
		1
		ImeICSignal2.end
		ImeIMSignal2.srefIxVBasetype	irefRefWdbeCSignal	srefMgeIxVTbl	srefMgeUref	sref	Const	srefWdbeKHdltype	Width	Minmax	Comb	Onval	Offval	Defon	srefDrvRefWdbeMPort	Comment
		oth	0	mdl	hostif	commok	false	sl	1					false
		oth	0	void		camrng	false	sl	1					false
		oth	0	mdl	tkclksrc	tkclk	false	sl	1					false
		oth	0	mdl	debounceBtn0	btn0_sig	false	sl	1					false
		hshk	0	mdl	debounceBtn1	reqResetBtn1	false	sl	1					false
		oth	0	mdl	state	rgb4	false	slvdn	24					false
		oth	0	void		rgb5	false	slvdn	24					false
		oth	1	void		bcddbg0	false	slvdn	8					false
		oth	1	void		bcddbg1	false	slvdn	8					false
		ImeIMSignal2.end
	top	bcdfreqDbg0
		ImeIMGeneric.srefIxWdbeVIop	irefRefWdbeCGeneric	sref	srefWdbeKHdltype	Width	Minmax	Defval	srcSrefWdbeMGeneric	Comment
		retrupd	0	fMclk					fMclk
		ImeIMGeneric.end
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		reset								reset
		retrupd	0		mclk								mclk
		retrupd	0		high								bcddbg0[7..4]
		retrupd	0		low								bcddbg0[3..0]
		retrupd	0		freq						dbg0
		ImeIMPort.end
	top	bcdfreqDbg1
		ImeIMGeneric.srefIxWdbeVIop	irefRefWdbeCGeneric	sref	srefWdbeKHdltype	Width	Minmax	Defval	srcSrefWdbeMGeneric	Comment
		retrupd	0	fMclk					fMclk
		ImeIMGeneric.end
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		reset								reset
		retrupd	0		mclk								mclk
		retrupd	0		high								bcddbg1[7..4]
		retrupd	0		low								bcddbg1[3..0]
		retrupd	0		freq						dbg1
		ImeIMPort.end
	top	debounceBtn0
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		reset								reset
		retrupd	0		mclk								mclk
		retrupd	0		tkclk								tkclk
		retrupd	0		noisy						btn0
		retrupd	0		clean								btn0_sig
		ImeIMPort.end
	top	debounceBtn1
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		reset								reset
		retrupd	0		mclk								mclk
		retrupd	0		tkclk								tkclk
		retrupd	0		noisy						btn1
		retrupd	0		clean								reqResetBtn1
		ImeIMPort.end
	top	rgbled4
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		ins	0	reset	reset	in	sl	1					reset
		ins	0	clk	mclk	in	sl	1					mclk
		ins	0	clk	tkclk	in	sl	1					tkclk
		ins	0	rtetop	rgb	in	slvdn	24					rgb4
		ins	0	rtepin	r	out	sl	1			rgb1_r
		ins	0	rtepin	g	out	sl	1			rgb1_g
		ins	0	rtepin	b	out	sl	1			rgb1_b
		ImeIMPort.end
		ImeIMProcess.sref	clkSrefWdbeMSignal	asrSrefWdbeMSignal	Falling	Syncrst	Extip	Comment
		red	tkclk	reset				red LED PWM
			ImeIMFsm.
			
				ImeIMFsmstate.irefRefWdbeCFsmstate	sref	Extip	Comment
				0	on	false
				0	off	false
				ImeIMFsmstate.end
			ImeIMFsm.end
		green	tkclk	reset				green LED PWM
			ImeIMFsm.
			
				ImeIMFsmstate.irefRefWdbeCFsmstate	sref	Extip	Comment
				0	on	false
				0	off	false
				ImeIMFsmstate.end
			ImeIMFsm.end
		blue	tkclk	reset				blue LED PWM
			ImeIMFsm.
			
				ImeIMFsmstate.irefRefWdbeCFsmstate	sref	Extip	Comment
				0	on	false
				0	off	false
				ImeIMFsmstate.end
			ImeIMFsm.end
		ImeIMProcess.end
	top	rgbled5
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		ins	0	reset	reset	in	sl	1					reset
		ins	0	clk	mclk	in	sl	1					mclk
		ins	0	clk	tkclk	in	sl	1					tkclk
		ins	0	rtetop	rgb	in	slvdn	24					rgb5
		ins	0	rtepin	r	out	sl	1			rgb2_r
		ins	0	rtepin	g	out	sl	1			rgb2_g
		ins	0	rtepin	b	out	sl	1			rgb2_b
		ImeIMPort.end
		ImeIMProcess.sref	clkSrefWdbeMSignal	asrSrefWdbeMSignal	Falling	Syncrst	Extip	Comment
		red	tkclk	reset				red LED PWM
			ImeIMFsm.
			
				ImeIMFsmstate.irefRefWdbeCFsmstate	sref	Extip	Comment
				0	on	false
				0	off	false
				ImeIMFsmstate.end
			ImeIMFsm.end
		green	tkclk	reset				green LED PWM
			ImeIMFsm.
			
				ImeIMFsmstate.irefRefWdbeCFsmstate	sref	Extip	Comment
				0	on	false
				0	off	false
				ImeIMFsmstate.end
			ImeIMFsm.end
		blue	tkclk	reset				blue LED PWM
			ImeIMFsm.
			
				ImeIMFsmstate.irefRefWdbeCFsmstate	sref	Extip	Comment
				0	on	false
				0	off	false
				ImeIMFsmstate.end
			ImeIMFsm.end
		ImeIMProcess.end
	top	hostif
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		reset								reset
		retrupd	0		mclk								mclk
		retrupd	0		tkclk								tkclk
		retrupd	0		commok								commok
		retrupd	0		rxd						rxd
		retrupd	0		txd						txd
		ImeIMPort.end
	top	laser
		ImeICPort.iref
		1
		ImeICPort.end
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		ins	0	reset	reset	in	sl	1					reset
		ins	0	clk	mclk	in	sl	1					mclk
		ImeIMPort.end
		ImeICSignal2.iref
		1
		ImeICSignal2.end
		ImeIMSignal2.srefIxVBasetype	irefRefWdbeCSignal	srefMgeIxVTbl	srefMgeUref	sref	Const	srefWdbeKHdltype	Width	Minmax	Comb	Onval	Offval	Defon	srefDrvRefWdbeMPort	Comment
		oprt	0	prc	op	ackInvSet	false	sl	1					false	ackInvSet
		oth	0	prc	op	spilen	false	slvdn	17				0	false
		oth	0	prc	op	spisend	false	slvdn	8				0	false
		hshk	1	prc	op	reqSpi	false	sl	1				0	false
		hshk	1	mdl	spi	dneSpi	false	sl	1				0	false
		strb	0	mdl	spi	strbSpisend	false	sl	1				0	false
		ImeIMSignal2.end
		ImeIMProcess.sref	clkSrefWdbeMSignal	asrSrefWdbeMSignal	Falling	Syncrst	Extip	Comment
		op	mclk	reset	false	state(init)	false	main operation
			ImeIAVKeylistKey.sref	Title	Comment
			txbuf_t	array(0 to sizeTxbuf-1) of std_logic_vector(7 downto 0)
			ImeIAVKeylistKey.end
			ImeICVariable2.iref
			1
			2
			ImeICVariable2.end
			ImeIMVariable2.irefRefWdbeCVariable	sref	Const	Falling	srefWdbeKHdltype	Width	Minmax	Onval	Offval	Defon	Comment
			1	sizeTxbuf	true	false	nat				2	false
			1	txbuf	false	false	txbuf_t				(x"00",x"00")	false
			0	bytecnt	false	false	nat		0..sizeTxbuf		0	false
			2	imax	true	false	nat				fMclk*8/1000	false	8us
			2	i	false	false	nat		0..imax		0	false
			0	rNotL	false	false	_bool				false	false
			ImeIMVariable2.end
			ImeIMFsm.
			
				ImeICFsmstate.iref
				1
				2
				ImeICFsmstate.end
				ImeIMFsmstate.irefRefWdbeCFsmstate	sref	Extip	Comment
				0	init	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					prepC
					ImeIAMFsmstateStep.end
				1	prepA	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					wait	dneSpi	done
					prepB	!strbSpisend
					ImeIAMFsmstateStep.end
				1	prepB	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					prepC		prepB
					ImeIAMFsmstateStep.end
				1	prepC	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					prepD		prepC
					ImeIAMFsmstateStep.end
				1	prepD	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					prepA	strbSpisend
					ImeIAMFsmstateStep.end
				0	wait	true
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					idle	i=imax	done
					ImeIAMFsmstateStep.end
				0	idle	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					setC	reqInvSet	prepL
					ImeIAMFsmstateStep.end
				2	setA	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					setC	dneSpi	spioff	not rNotL	prepR
					inv	dneSpi	spioff	else
					setB	!strbSpisend
					ImeIAMFsmstateStep.end
				2	setB	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					setC		setB
					ImeIAMFsmstateStep.end
				2	setC	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					setD		setC
					ImeIAMFsmstateStep.end
				2	setD	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					setA	strbSpisend
					ImeIAMFsmstateStep.end
				0	inv	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					idle	!reqInvSet
					ImeIAMFsmstateStep.end
				ImeIMFsmstate.end
			ImeIMFsm.end
		ImeIMProcess.end
	top;laser	spi
		ImeIMGeneric.srefIxWdbeVIop	irefRefWdbeCGeneric	sref	srefWdbeKHdltype	Width	Minmax	Defval	srcSrefWdbeMGeneric	Comment
		retrupd	0	fMclk					fMclk
		ImeIMGeneric.end
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		reset								reset
		retrupd	0		mclk								mclk
		retrupd	0		req								reqSpi
		retrupd	0		dne								dneSpi
		retrupd	0		len								spilen
		retrupd	0		send								spisend
		retrupd	0		strbSend								strbSpisend
		retrupd	0		nss						cs
		retrupd	0		sclk						sclk
		retrupd	0		mosi						mosi
		retrupd	0		miso					0
		ImeIMPort.end
	top	state
		ImeICPort.iref
		1
		ImeICPort.end
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		ins	0	reset	reset	in	sl	1					reset
		ins	0	clk	tkclk	in	sl	1					tkclk
		ins	1	rtetop	commok	in	sl	1					commok
		ins	1	rtetop	camrng	in	sl	1					camrng
		ins	0	rtetop	rgb	out	slvdn	24					rgb4
		ImeIMPort.end
		ImeIMProcess.sref	clkSrefWdbeMSignal	asrSrefWdbeMSignal	Falling	Syncrst	Extip	Comment
		led	tkclk	reset	false		false	LED control
			ImeIMFsm.
			
				ImeIMFsmstate.irefRefWdbeCFsmstate	sref	Extip	Comment
				0	on	true
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					off	i=1000	prepOff
					ImeIAMFsmstateStep.end
				0	off	true
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					on	i=4000	prepOn
					ImeIAMFsmstateStep.end
				ImeIMFsmstate.end
			ImeIMFsm.end
		ImeIMProcess.end
	top	step
		ImeIMGeneric.srefIxWdbeVIop	irefRefWdbeCGeneric	sref	srefWdbeKHdltype	Width	Minmax	Defval	srcSrefWdbeMGeneric	Comment
		ins	0	fMclk	nat		1..1000000	50000	fMclk	in kHz
		ImeIMGeneric.end
		ImeICPort.iref
		1
		ImeICPort.end
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		ins	0	reset	reset	in	sl	1					reset
		ins	0	clk	mclk	in	sl	1					mclk
		ins	0	clk	tkclk	in	sl	1					tkclk
		ins	1	rtepin	nslp	out	sl	1			nslp
		ins	1	rtepin	m0	inout	sl	1			m0
		ins	1	rtepin	dir	out	sl	1			dir
		ins	1	rtepin	step0	out	sl	1			step0
		ins	1	rtepin	nflt	in	sl	1			nflt			iccl only
		ImeIMPort.end
		ImeICSignal2.iref
		1
		2
		3
		ImeICSignal2.end
		ImeIMSignal2.srefIxVBasetype	irefRefWdbeCSignal	srefMgeIxVTbl	srefMgeUref	sref	Const	srefWdbeKHdltype	Width	Minmax	Comb	Onval	Offval	Defon	srefDrvRefWdbeMPort	Comment
		oprt	1	prc	op	angle	false	nat		0..4095			0	false	getInfoAngle
		oth	1	prc	op	angle_vec	false	slvdn	16					false
		oprt	0	prc	op	ackInvMoveto	false	sl	1				0	false	ackInvMoveto
		oprt	0	prc	op	ackInvSet	false	sl	1				0	false	ackInvSet
		oprt	0	prc	op	ackInvZero	false	sl	1				0	false	ackInvZero
		oth	2	prc	op	rng	false	sl	1				0	false
		oprt	2	prc	op	nslp	false	sl	1		!rng	1	0	false	nslp
		oprt	0	prc	op	ccwNotCw	false	sl	1				0	false	dir
		oprt	0	prc	op	step0	false	sl	1				0	false	step0
		oth	3	prc	op	m0_sig	false	sl	1				0	false
		oth	3	prc	op	m0z	false	sl	1				0	false
		ImeIMSignal2.end
		ImeIMProcess.sref	clkSrefWdbeMSignal	asrSrefWdbeMSignal	Falling	Syncrst	Extip	Comment
		op	mclk	reset	false	state(init) or (state(!inv) and (reqInvMoveto or reqInvSet or reqInvZero))	false	main operation
			ImeICVariable2.iref
			1
			2
			ImeICVariable2.end
			ImeIMVariable2.irefRefWdbeCVariable	sref	Const	Falling	srefWdbeKHdltype	Width	Minmax	Onval	Offval	Defon	Comment
			1	target	true	false	nat		0..1000		0	false
			1	dAngle	false	false	int		-999..1000		0	false
			0	Tstep	false	false	nat		0..255		0	false
			2	targetNotSteady	true	false	_bool				false	false
			2	atTarget	false	false	_bool				false	false
			ImeIMVariable2.end
			ImeIMFsm.
			
				ImeICFsmstate.iref
				1
				ImeICFsmstate.end
				ImeIMFsmstate.irefRefWdbeCFsmstate	sref	Extip	Comment
				0	init	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					inv	reqInvMoveto	moveto
					inv	reqInvSet	set
					inv	reqInvZero	zero
					ready	else
					ImeIAMFsmstateStep.end
				0	ready	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					runB	Tstep/=0		not targetNotSteady and rng	steady
					runB	Tstep/=0		targetNotSteady and not atTarget	target
					ready	Tstep/=0		else	hold
					ImeIAMFsmstateStep.end
				1	runA	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					runB	tkclk	runA
					ImeIAMFsmstateStep.end
				1	runB	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					ready	!tkclk	runB	targetNotSteady and target=angle	done
					runA	!tkclk	runB	else
					ImeIAMFsmstateStep.end
				0	inv	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					init	(!reqInvMoveto and ackInvMoveto_sig) or (!reqInvSet and ackInvSet_sig) or (!reqInvZero and ackInvZero_sig)
					ImeIAMFsmstateStep.end
				ImeIMFsmstate.end
			ImeIMFsm.end
		ImeIMProcess.end
	top;step	bbM0
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		B							m0
		retrupd	0		I								m0_sig
		retrupd	0		T								m0z
		ImeIMPort.end
	top	tkclksrc
		ImeIMGeneric.srefIxWdbeVIop	irefRefWdbeCGeneric	sref	srefWdbeKHdltype	Width	Minmax	Defval	srcSrefWdbeMGeneric	Comment
		retrupd	0	fMclk					fMclk
		ImeIMGeneric.end
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		reset								reset
		retrupd	0		mclk								mclk
		retrupd	0		tkclk								tkclk
		ImeIMPort.end
	ImeIMModule.end
iccl
	ImeIMBank.srefIxWdbeVIop	sref	srefKVoltstd
	retrupd	bank0	_1v8
		ImeICPin.iref
		1
		2
		3
		ImeICPin.end
		ImeIMPin.srefIxWdbeVIop	irefRefWdbeCPin	sref	Location
		retrupd	1	led4_r	V14	LED1 (red)
		retrupd	1	led4_g	T12	LED3 (orange)
		retrupd	2	led5_r	U13	LED2 (red)
		retrupd	2	led5_g	AB19	LED4 (orange)
		retrupd	3	btn0	U18	SW2
		retrupd	3	btn1	W19	SW3
		ImeIMPin.end
	retrupd	bank1	_3v3
		ImeICPin.iref
		1
		2
		3
		4
		5
		6
		7
		8
		9
		ImeICPin.end
		ImeIMPin.srefIxWdbeVIop	irefRefWdbeCPin	sref	Location
		retrupd	1	csi_clk_p	C4	GPIO169PB1
		retrupd	1	csi_clk_n	B4	GPIO169NB1
		retrupd	2	csi_d0_p	C5	GPIO170PB1
		retrupd	2	csi_d0_n	B5	GPIO170NB1
		retrupd	3	csi_d1_p	D9	GPIO174PB1
		retrupd	3	csi_d1_n	D8	GPIO174NB1
		retrupd	4	csi_d2_p	H12	GPIO182PB1
		retrupd	4	csi_d2_n	G12	GPIO182NB1
		retrupd	5	csi_d3_p	G17	GPIO8PB1
		retrupd	5	csi_d3_n	H17	GPIO8NB1
		retrupd	0	csi_clk_lp	A6	GPIO172PB1
		retrupd	0	csi_d0_lp	A7	GPIO173PB1
		retrupd	6	scl	H15	GPIO7NB1
		retrupd	6	sda	D14	GPIO2NB1
		retrupd	7	cs	H13	GPIO185NB1
		retrupd	7	sclk	C10	GPIO176PB1
		retrupd	7	mosi	D13	GPIO2PB1
		retrupd	0	m0	D6	GPIO168NB1
		retrupd	0	step0	G15	GPIO7PB1
		retrupd	0	nslp	C6	GPIO171PB1
		retrupd	0	dir	E14	GPIO9NB1
		retrupd	0	trig	C9	GPIO176NB1
		retrupd	0	flsh	F11	GPIO181NB1
		retrupd	0	nflt	F16	GPIO11NB1
		retrupd	8	dbg0	A8	GPIO175PB1
		retrupd	8	dbg1	B8	GPIO175NB1
		retrupd	9	pmnd_rxd	A21
		retrupd	9	pmnd_txd	B20
		ImeIMPin.end
	ImeIMBank.end
	ImeIMModule.hsrefSupRefWdbeMModule	sref
	iccl_ip_AXI	top
		ImeICSignal2.iref
		1
		ImeICSignal2.end
		ImeIMSignal2.srefIxVBasetype	irefRefWdbeCSignal	srefMgeIxVTbl	srefMgeUref	sref	Const	srefWdbeKHdltype	Width	Minmax	Comb	Onval	Offval	Defon	srefDrvRefWdbeMPort	Comment
		oth	0	mdl	hostif	commok	false	sl	1					false
		oth	0	mdl	camif	camrng	false	sl	1					false
		oth	0	mdl	tkclksrc	tkclk	false	sl	1					false
		oth	0	mdl	debounceBtn0	btn0_sig	false	sl	1					false
		hshk	0	mdl	debounceBtn1	reqResetBtn1	false	sl	1					false
		oth	0	mdl	state	rgb4	false	slvdn	24					false
		oth	0	void		rgb5	false	slvdn	24					false
		oth	0	void		camacqPixclk_dbg	false	sl	1					false
		oth	0	void		camacqStrb_dbg	false	slvdn	4					false
		oth	0	void		featdetStrb_dbg	false	slvdn	4					false
		oth	1	void		bcddbg0	false	slvdn	8					false
		oth	1	void		bcddbg1	false	slvdn	8					false
		oth	1	void		bcddbg2	false	slvdn	8					false
		oth	1	void		bcddbg3	false	slvdn	8					false
		ImeIMSignal2.end
	iccl_ip_AXI;top	bcdfreqDbg0
		ImeIMGeneric.srefIxWdbeVIop	irefRefWdbeCGeneric	sref	srefWdbeKHdltype	Width	Minmax	Defval	srcSrefWdbeMGeneric	Comment
		retrupd	0	fMclk					fMclk
		ImeIMGeneric.end
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		reset								reset
		retrupd	0		mclk								mclk
		retrupd	0		high								bcddbg0[7..4]
		retrupd	0		low								bcddbg0[3..0]
		retrupd	0		freq						dbg0
		ImeIMPort.end
	iccl_ip_AXI;top	bcdfreqDbg1
		ImeIMGeneric.srefIxWdbeVIop	irefRefWdbeCGeneric	sref	srefWdbeKHdltype	Width	Minmax	Defval	srcSrefWdbeMGeneric	Comment
		retrupd	0	fMclk					fMclk
		ImeIMGeneric.end
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		reset								reset
		retrupd	0		mclk								mclk
		retrupd	0		high								bcddbg1[7..4]
		retrupd	0		low								bcddbg1[3..0]
		retrupd	0		freq						dbg1
		ImeIMPort.end
	iccl_ip_AXI;top	debounceBtn0
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		reset								reset
		retrupd	0		mclk								mclk
		retrupd	0		tkclk								tkclk
		retrupd	0		noisy						btn0
		retrupd	0		clean								btn0_sig
		ImeIMPort.end
	iccl_ip_AXI;top	debounceBtn1
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		reset								reset
		retrupd	0		mclk								mclk
		retrupd	0		tkclk								tkclk
		retrupd	0		noisy						btn1
		retrupd	0		clean								reqResetBtn1
		ImeIMPort.end
	iccl_ip_AXI;top	rgbled4
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		ins	0	reset	reset	in	sl	1					reset
		ins	0	clk	mclk	in	sl	1					mclk
		ins	0	clk	tkclk	in	sl	1					tkclk
		ins	0	rtetop	rgb	in	slvdn	24					rgb4
		ins	0	rtepin	r	out	sl	1			led4_r
		ins	0	rtepin	g	out	sl	1			led4_g
		ins	0	rtepin	b	out	sl	1
		ImeIMPort.end
		ImeIMProcess.sref	clkSrefWdbeMSignal	asrSrefWdbeMSignal	Falling	Syncrst	Extip	Comment
		red	tkclk	reset				red LED PWM
			ImeIMFsm.
			
				ImeIMFsmstate.irefRefWdbeCFsmstate	sref	Extip	Comment
				0	on	false
				0	off	false
				ImeIMFsmstate.end
			ImeIMFsm.end
		green	tkclk	reset				green LED PWM
			ImeIMFsm.
			
				ImeIMFsmstate.irefRefWdbeCFsmstate	sref	Extip	Comment
				0	on	false
				0	off	false
				ImeIMFsmstate.end
			ImeIMFsm.end
		blue	tkclk	reset				blue LED PWM
			ImeIMFsm.
			
				ImeIMFsmstate.irefRefWdbeCFsmstate	sref	Extip	Comment
				0	on	false
				0	off	false
				ImeIMFsmstate.end
			ImeIMFsm.end
		ImeIMProcess.end
	iccl_ip_AXI;top	rgbled5
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		ins	0	reset	reset	in	sl	1					reset
		ins	0	clk	mclk	in	sl	1					mclk
		ins	0	clk	tkclk	in	sl	1					tkclk
		ins	0	rtetop	rgb	in	slvdn	24					rgb5
		ins	0	rtepin	r	out	sl	1			led5_r
		ins	0	rtepin	g	out	sl	1			led5_g
		ins	0	rtepin	b	out	sl	1
		ImeIMPort.end
		ImeIMProcess.sref	clkSrefWdbeMSignal	asrSrefWdbeMSignal	Falling	Syncrst	Extip	Comment
		red	tkclk	reset				red LED PWM
			ImeIMFsm.
			
				ImeIMFsmstate.irefRefWdbeCFsmstate	sref	Extip	Comment
				0	on	false
				0	off	false
				ImeIMFsmstate.end
			ImeIMFsm.end
		green	tkclk	reset				green LED PWM
			ImeIMFsm.
			
				ImeIMFsmstate.irefRefWdbeCFsmstate	sref	Extip	Comment
				0	on	false
				0	off	false
				ImeIMFsmstate.end
			ImeIMFsm.end
		blue	tkclk	reset				blue LED PWM
			ImeIMFsm.
			
				ImeIMFsmstate.irefRefWdbeCFsmstate	sref	Extip	Comment
				0	on	false
				0	off	false
				ImeIMFsmstate.end
			ImeIMFsm.end
		ImeIMProcess.end
	iccl_ip_AXI;top	hostif
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		reset								reset
		retrupd	0		mclk								mclk
		retrupd	0		tkclk								tkclk
		retrupd	0		commok								commok
		retrupd	0		rdyRx						rdyRx
		retrupd	0		enRx						enRx
		retrupd	0		rx						rx
		retrupd	0		strbRx						strbRx
		retrupd	0		rdyTx						rdyTx
		retrupd	0		enTx						enTx
		retrupd	0		tx						tx
		retrupd	0		strbTx						strbTx
		ImeIMPort.end
	iccl_ip_AXI;top	camacq
		ImeICPort.iref
		1
		2
		3
		4
		5
		ImeICPort.end
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		ins	0	reset	reset	in	sl	1					reset
		ins	0	clk	mclk	in	sl	1					mclk
		ins	1	rtepin	csi_clk_p	in	sl	1			csi_clk_p
		ins	1	rtepin	csi_clk_n	in	sl	1			csi_clk_n
		ins	2	rtepin	csi_d0_p	in	sl	1			csi_d0_p
		ins	2	rtepin	csi_d0_n	in	sl	1			csi_d0_n
		ins	3	rtepin	csi_d1_p	in	sl	1			csi_d1_p
		ins	3	rtepin	csi_d1_n	in	sl	1			csi_d1_n
		ins	4	rtepin	csi_d2_p	in	sl	1			csi_d2_p
		ins	4	rtepin	csi_d2_n	in	sl	1			csi_d2_n
		ins	5	rtepin	csi_d3_p	in	sl	1			csi_d3_p
		ins	5	rtepin	csi_d3_n	in	sl	1			csi_d3_n
		ins	0	dbg	pixclk_dbg	out	sl	1					camacqPixclk_dbg
		ins	0	dbg	strb_dbg	out	slvdn	4					camacqStrb_dbg
		ImeIMPort.end
		ImeICSignal2.iref
		1
		2
		3
		4
		5
		6
		7
		8
		9
		10
		11
		12
		13
		14
		15
		16
		17
		18
		19
		20
		21
		22
		23
		24
		25
		26
		27
		28
		29
		30
		31
		32
		33
		34
		35
		36
		37
		38
		39
		40
		41
		42
		43
		44
		45
		46
		ImeICSignal2.end
		ImeIMSignal2.srefIxVBasetype	irefRefWdbeCSignal	srefMgeIxVTbl	srefMgeUref	sref	Const	srefWdbeKHdltype	Width	Minmax	Comb	Onval	Offval	Defon	srefDrvRefWdbeMPort	Comment
		oprt	1	prc	grrd	tixVGrrdbufstate	false	slvdn	8				tixVGrrdbufstateIdle	false	getGrrdinfoTixVGrrdbufstate
		oprt	1	prc	grrd	grrdTkst	false	slvdn	32				0	false	getGrrdinfoTkst
		oth	0	prc	grrd	grrdbuf	false	grrdbuf_t					grrdbufAb	false
		oth	2	prc	grrd	enGrrdabbuf	false	sl	1		grrdbuf=grrdbufAb and state(store)	1	0	false
		oth	2	prc	grrd	enGrrdcdbuf	false	sl	1		grrdbuf=grrdbufCd and state(store)	1	0	false
		oth	2	prc	grrd	enGrrdefbuf	false	sl	1		grrdbuf=grrdbufEf and state(store)	1	0	false
		oth	3	prc	grrd	aGrrdbuf_vec	false	slvdn	11					false
		oth	3	prc	grrd	aGrrdbuf	false	nat		0..2048			0	false
		oth	0	prc	grrd	dwrGrrdbuf	false	slvdn	8				0	false
		oth	0	prc	grrd	grrdaccrun	false	sl	1		state(ready;store)	1	0	false
		oprt	0	prc	grrdabbufB	ackGrrdabbufToFeatdet	false	sl	1				0	false	ackGrrdabbufToFeatdet
		oth	0	prc	grrdabbufB	enGrrdabbufB	false	sl	1		!strbDGrrdabbufToFeatdet and state(readA)	1	0	false
		oth	4	prc	grrdabbufB	aGrrdabbufB_vec	false	slvdn	11					false
		oth	4	prc	grrdabbufB	aGrrdabbufB	false	nat		0..2048			0	false
		oth	5	prc	grrdacc	dGrrdacc	false	slvdn	8				0	false
		strb	5	prc	grrdacc	strbDGrrdacc	false	sl	1				0	false
		oth	0	prc	grrdacc	enEvenbuf	false	sl	1		state(LASA..D)	1	0	false
		oth	0	prc	grrdacc	weEvenbuf	false	sl	1				0	false
		oth	6	prc	grrdacc	aEvenbuf_vec	false	slvdn	12					false
		oth	6	prc	grrdacc	aEvenbuf	false	nat		0..4096			0	false
		oth	0	prc	grrdacc	dwrEvenbuf	false	slvdn	8				0	false
		oprt	0	prc	grrdcdbufB	ackGrrdcdbufToFeatdet	false	sl	1				0	false	ackGrrdcdbufToFeatdet
		oth	0	prc	grrdcdbufB	enGrrdcdbufB	false	sl	1		!strbDGrrdcdbufToFeatdet and state(readA)	1	0	false
		oth	7	prc	grrdcdbufB	aGrrdcdbufB_vec	false	slvdn	11					false
		oth	7	prc	grrdcdbufB	aGrrdcdbufB	false	nat		0..2048			0	false
		oprt	0	prc	grrdefbufB	ackGrrdefbufToFeatdet	false	sl	1				0	false	ackGrrdefbufToFeatdet
		oth	0	prc	grrdefbufB	enGrrdefbufB	false	sl	1		!strbDGrrdefbufToFeatdet and state(readA)	1	0	false
		oth	8	prc	grrdefbufB	aGrrdefbufB_vec	false	slvdn	11					false
		oth	8	prc	grrdefbufB	aGrrdefbufB	false	nat		0..2048			0	false
		oprt	0	prc	op	ackInvSetGrrd	false	sl	1				0	false	ackInvSetGrrd
		oprt	0	prc	op	ackInvSetPvw	false	sl	1				0	false	ackInvSetPvw
		oth	0	prc	op	grrdrun	false	sl	1				0	false
		oth	0	prc	op	grrdRedNotGray	false	sl	1				0	false
		oth	0	prc	op	pvwrun	false	sl	1				0	false
		oth	0	prc	op	pvwacc	false	pvwacc_t					pvwaccBinrgb	false
		oth	9	prc	pvw	pvwTkstA	false	slvdn	32				0	false
		oth	9	prc	pvw	pvwTkstB	false	slvdn	32				0	false
		oth	0	prc	pvw	pvwLatestBNotA	false	sl	1				0	false
		oth	10	prc	pvw	enPvwabuf	false	sl	1		pvwabufLock=lockPvw and state(storeA..D)	1	0	false
		oth	10	prc	pvw	enPvwbbuf	false	sl	1		pvwbbufLock=lockPvw and state(storeA..D)	1	0	false
		oth	11	prc	pvw	aPvwbuf_vec	false	slvdn	16					false
		oth	11	prc	pvw	aPvwbuf	false	nat		0..57600			0	false
		oth	0	prc	pvw	dwrPvwbuf	false	slvdn	8				0	false
		oth	12	prc	pvw	pvwbingrayrun	false	sl	1		pvwacc=pvwaccBingray and state(ready;storeA..D)	1	0	false
		oth	12	prc	pvw	pvwbinrgbrun	false	sl	1		pvwacc=pvwaccBinrgb and state(ready;storeA..D)	1	0	false
		oth	12	prc	pvw	pvwrawgrayrun	false	sl	1		pvwacc=pvwaccRawgray and state(ready;storeA..D)	1	0	false
		oth	12	prc	pvw	pvwrawrgbrun	false	sl	1		pvwacc=pvwaccRawrgb and state(ready;storeA..D)	1	0	false
		oth	13	prc	pvwbingray	dPvwbingrayGr	false	slvdn	8				0	false
		strb	13	prc	pvwbingray	strbDPvwbingrayGr	false	sl	1				0	false
		oth	0	prc	pvwbingray	enBingraybuf	false	sl	1		state(LASB..C)	1	0	false
		oth	0	prc	pvwbingray	weBingraybuf	false	sl	1				0	false
		oth	14	prc	pvwbingray	aBingraybuf_vec	false	slvdn	11					false
		oth	14	prc	pvwbingray	aBingraybuf	false	nat		0..2048			0	false
		oth	0	prc	pvwbingray	dwrBingraybuf	false	slvdn	8				0	false
		oth	15	prc	pvwbinrgb	dPvwbinrgbRd	false	slvdn	8				0	false
		strb	15	prc	pvwbinrgb	strbDPvwbinrgbRd	false	sl	1				0	false
		oth	16	prc	pvwbinrgb	dPvwbinrgbGn	false	slvdn	8				0	false
		oth	16	prc	pvwbinrgb	dPvwbinrgbBl	false	slvdn	8				0	false
		strb	16	prc	pvwbinrgb	strbDPvwbinrgbGnBl	false	sl	1				0	false
		oth	0	prc	pvwbinrgb	enBinrgbbuf	false	sl	1		state(LASB..C)	1	0	false
		oth	0	prc	pvwbinrgb	weBinrgbbuf	false	sl	1				0	false
		oth	17	prc	pvwbinrgb	aBinrgbbuf_vec	false	slvdn	11					false
		oth	17	prc	pvwbinrgb	aBinrgbbuf	false	nat		0..2048			0	false
		oth	0	prc	pvwbinrgb	dwrBinrgbbuf	false	slvdn	8				0	false
		oth	18	prc	pvwbuf	pvwabufLock	false	lock_t					lockIdle	false
		oth	18	prc	pvwbuf	pvwabufFull	false	sl	1				0	false
		oth	19	prc	pvwbuf	pvwbbufLock	false	lock_t					lockIdle	false
		oth	19	prc	pvwbuf	pvwbbufFull	false	sl	1				0	false
		oth	20	prc	pvwbufB	enPvwabufB	false	sl	1		pvwabufLock=lockBufB and !strbDPvwabufToHostif and state(readA)	1	0	false
		oth	20	prc	pvwbufB	enPvwbbufB	false	sl	1		pvwbbufLock=lockBufB and !strbDPvwabufToHostif and state(readA)	1	0	false
		oth	21	prc	pvwbufB	aPvwbufB_vec	false	slvdn	14					false
		oth	21	prc	pvwbufB	aPvwbufB	false	nat		0..14400			0	false
		oprt	22	prc	pvwbufB	tixVPvwbufstate	false	slvdn	8				tixVPvwbufstateIdle	false	getPvwinfoTixVPvwbufstate
		oth	22	prc	pvwbufB	pvwtkst	false	slvdn	32				0	false	getPvwinfoTkst
		oth	23	prc	pvwbufB	ackPvwbufToHostif	false	sl	1				0	false
		oprt	23	prc	pvwbufB	ackPvwabufToHostif	false	sl	1		pvwabufLock=lockBufB	ackPvwbufToHostif	0	false	ackPvwabufToHostif
		oprt	23	prc	pvwbufB	ackPvwbbufToHostif	false	sl	1		pvwbbufLock=lockBufB	ackPvwbufToHostif	0	false	ackPvwbbufToHostif
		oth	24	prc	pvwrawgray	dPvwrawgrayGr	false	slvdn	8				0	false
		strb	24	prc	pvwrawgray	strbDPvwrawgrayGr	false	sl	1				0	false
		oth	0	prc	pvwrawgray	enRawgraybuf	false	sl	1		state(LASA..D)	1	0	false
		oth	0	prc	pvwrawgray	weRawgraybuf	false	sl	1				0	false
		oth	25	prc	pvwrawgray	aRawgraybuf_vec	false	slvdn	11					false
		oth	25	prc	pvwrawgray	aRawgraybuf	false	nat		0..2048			0	false
		oth	0	prc	pvwrawgray	dwrRawgraybuf	false	slvdn	8				0	false
		oth	26	prc	pvwrawrgb	dPvwrawrgbRd	false	slvdn	8				0	false
		strb	26	prc	pvwrawrgb	strbDPvwrawrgbRd	false	sl	1				0	false
		oth	27	prc	pvwrawrgb	dPvwrawrgbGn	false	slvdn	8				0	false
		oth	27	prc	pvwrawrgb	dPvwrawrgbBl	false	slvdn	8				0	false
		strb	27	prc	pvwrawrgb	strbDPvwrawrgbGnBl	false	sl	1				0	false
		oth	28	prc	sample	csid	false	slvdn	4				0	false
		oth	28	prc	sample	csidn	false	slvdn	4				0	false
		oth	0	prc	sample	d	false	slvdn	8				0	false
		oth	29	prc	tag	rowmax	true	nat					1944	false
		oth	29	prc	tag	row	false	nat		0..rowmax			0	false
		oth	30	prc	tag	row120	true	nat					852	false		skiprow (1944 - 240) / 2
		oth	30	prc	tag	row192	true	nat					780	false		skiprow (1944 - 384) / 2
		oth	30	prc	tag	row768	true	nat					204	false		skiprow (1944 - 1536) / 2
		oth	30	prc	tag	row960	true	nat					12	false		skiprow (1944 - 1920) / 2
		oth	31	prc	tag	colmax	true	nat					2592	false
		oth	31	prc	tag	col	false	nat		0..colmax			0	false
		oth	32	prc	tag	col160N1	true	nat					1135	false		skipcol (2592 - 320) / 2 - 1
		oth	32	prc	tag	col256N3	true	nat					1037	false		skipcol (2592 - 512) / 2 - 3
		oth	32	prc	tag	col1024N3	true	nat					269	false		skipcol (2592 - 2048) / 2 - 3
		oth	32	prc	tag	col1024N9	true	nat					263	false		skipcol (2592 - 2048) / 2 - 9
		oth	32	prc	tag	col1280	true	nat					16	false		skipcol (2592 - 2560) / 2
		oth	32	prc	tag	col1280N9	true	nat					7	false		skipcol (2592 - 2560) / 2 - 9
		strb	0	prc	tag	strbFrame	false	sl	1		state(frameB) and !vsync_sig	1	0	false
		strb	33	prc	tag	strbRow120	false	sl	1		state(rowB) and href_sig and row=row120	1	0	false
		strb	33	prc	tag	strbRow192	false	sl	1		state(rowB) and href_sig and row=row192	1	0	false
		strb	33	prc	tag	strbRow768	false	sl	1		state(rowB) and href_sig and row=row768	1	0	false
		strb	33	prc	tag	strbRow960	false	sl	1		state(rowB) and href_sig and row=row960	1	0	false
		strb	34	prc	tag	strbCol160N1	false	sl	1		state(colA) and col=col160N1	1	0	false
		strb	34	prc	tag	strbCol256N3	false	sl	1		state(colA) and col=col256N3	1	0	false
		strb	34	prc	tag	strbCol1024N3	false	sl	1		state(colA) and col=col1024N3	1	0	false
		strb	34	prc	tag	strbCol1024N9	false	sl	1		state(colA) and col=col1024N9	1	0	false
		strb	34	prc	tag	strbCol1280	false	sl	1		state(colA) and col=col1280	1	0	false
		strb	34	prc	tag	strbCol1280N9	false	sl	1		state(colA) and col=col1280N9	1	0	false
		clk	0	mdl	mipirx	rxclk	false	sl	1					false
		oth	0	mdl	mipirx	rxd	false	slvdn	32					false
		oth	35	mdl	mipirx	rxdLp	false	slvdn	4					false
		oth	35	mdl	mipirx	rxdLpn	false	slvdn	4					false
		clk	0	mdl	mipipll	pixclk	false	sl	1					false
		oth	0	mdl	mipidec	pixd	false	slvdn	48					false
		strb	36	mdl	mipidec	strbFrameStart	false	sl	1					false
		strb	36	mdl	mipidec	strbFrameEnd	false	sl	1					false
		strb	37	mdl	mipidec	strbRowStart	false	sl	1					false
		strb	37	mdl	mipidec	strbRowEnd	false	sl	1					false
		oth	0	mdl	bingraybuf	drdBingraybuf	false	slvdn	8					false
		oth	0	mdl	binrgbbuf	drdBinrgbbuf	false	slvdn	8					false
		oth	0	mdl	evenbuf	drdEvenbuf	false	slvdn	8					false
		oth	0	mdl	rawgraybuf	drdRawgraybuf	false	slvdn	8					false
		oth	38	void		resetn	false	sl	1					false
		oth	38	void		mclkn	false	sl	1					false
		hshk	39	prc	pvw	reqPvwToPvwbufAbufLock	false	sl	1				0	false
		hshk	39	prc	pvwbuf	ackPvwToPvwbufAbufLock	false	sl	1				0	false
		hshk	39	prc	pvwbuf	dnyPvwToPvwbufAbufLock	false	sl	1				0	false
		hshk	40	prc	pvw	reqPvwToPvwbufAbufSetFull	false	sl	1				0	false
		hshk	40	prc	pvwbuf	ackPvwToPvwbufAbufSetFull	false	sl	1				0	false
		hshk	41	prc	pvw	reqPvwToPvwbufBbufLock	false	sl	1				0	false
		hshk	41	prc	pvwbuf	ackPvwToPvwbufBbufLock	false	sl	1				0	false
		hshk	41	prc	pvwbuf	dnyPvwToPvwbufBbufLock	false	sl	1				0	false
		hshk	42	prc	pvw	reqPvwToPvwbufBbufSetFull	false	sl	1				0	false
		hshk	42	prc	pvwbuf	ackPvwToPvwbufBbufSetFull	false	sl	1				0	false
		hshk	43	prc	pvwbufB	reqPvwbufBToPvwbufAbufLock	false	sl	1				0	false
		hshk	43	prc	pvwbuf	ackPvwbufBToPvwbufAbufLock	false	sl	1				0	false
		hshk	43	prc	pvwbuf	dnyPvwbufBToPvwbufAbufLock	false	sl	1				0	false
		hshk	44	prc	pvwbufB	reqPvwbufBToPvwbufAbufClear	false	sl	1				0	false
		hshk	44	prc	pvwbuf	ackPvwbufBToPvwbufAbufClear	false	sl	1				0	false
		hshk	45	prc	pvwbufB	reqPvwbufBToPvwbufBbufLock	false	sl	1				0	false
		hshk	45	prc	pvwbuf	ackPvwbufBToPvwbufBbufLock	false	sl	1				0	false
		hshk	45	prc	pvwbuf	dnyPvwbufBToPvwbufBbufLock	false	sl	1				0	false
		hshk	46	prc	pvwbufB	reqPvwbufBToPvwbufBbufClear	false	sl	1				0	false
		hshk	46	prc	pvwbuf	ackPvwbufBToPvwbufBbufClear	false	sl	1				0	false
		ImeIMSignal2.end
		ImeIMProcess.sref	clkSrefWdbeMSignal	asrSrefWdbeMSignal	Falling	Syncrst	Extip	Comment
		grrd	mclk	reset	false	state(init) or !grrdrun	false	gray/red operation, also managing grrd{ab/cd/ef}buf
			ImeIAVKeylistKey.sref	Title	Comment
			grrdbuf_t	(grrdbufAb, grrdbufCd, grrdbufEf)	grrdbufAb
			ImeIAVKeylistKey.end
			ImeIMFsm.
			
				ImeIMFsmstate.irefRefWdbeCFsmstate	sref	Extip	Comment
				0	init	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					init	!grrdrun	toIdle
					waitFrame	else
					ImeIAMFsmstateStep.end
				0	waitFrame	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					ready	strbFrame	waitFrame
					ImeIAMFsmstateStep.end
				0	ready	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					store	strbDGrrdacc	ready
					ImeIAMFsmstateStep.end
				0	store	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					ready	aGrrdbuf=2046	eorEven
					init	aGrrdbuf=2047	eorOdd	rowcnt=768	eof
					ready	aGrrdbuf=2047	eorOdd	else	eorOddInt
					ready	else	inc
					ImeIAMFsmstateStep.end
				ImeIMFsmstate.end
			ImeIMFsm.end
		grrdabbufB	mclk	reset	false	state(init) or tixVGrrdbufstate/=tixVGrrdbufstateStream	false	grrdabbuf B/featdet-facing operation
			ImeIMFsm.
			
				ImeICFsmstate.iref
				1
				ImeICFsmstate.end
				ImeIMFsmstate.irefRefWdbeCFsmstate	sref	Extip	Comment
				0	init	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					init	tixVGrrdbufstate/=tixVGrrdbufstateStream
					ready	else
					ImeIAMFsmstateStep.end
				0	ready	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					readA	reqGrrdabbufToFeatdet	ready
					ImeIAMFsmstateStep.end
				1	readA	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					ready	!reqGrrdabbufToFeatdet	done
					readB	!strbDGrrdabbufToFeatdet	next
					ImeIAMFsmstateStep.end
				1	readB	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					readA	strbDGrrdabbufToFeatdet	inc
					ImeIAMFsmstateStep.end
				ImeIMFsmstate.end
			ImeIMFsm.end
		grrdacc	mclk	reset	false	state(init) or !grrdaccrun	false	gray/red accumulation, also managing evenbuf
			ImeIMFsm.
			
				ImeICFsmstate.iref
				1
				ImeICFsmstate.end
				ImeIMFsmstate.irefRefWdbeCFsmstate	sref	Extip	Comment
				0	init	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					init	!grrdaccrun
					waitFrame	else
					ImeIAMFsmstateStep.end
				0	waitFrame	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					waitRow	strbRow768	waitFrame
					ImeIAMFsmstateStep.end
				0	waitRow	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					LASA	strbCol1024N3	waitRow
					ImeIAMFsmstateStep.end
				1	LASA	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					LASB		LASA
					ImeIAMFsmstateStep.end
				1	LASB	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					LASC		LASB
					ImeIAMFsmstateStep.end
				1	LASC	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					LASD		LASC
					ImeIAMFsmstateStep.end
				1	LASD	true
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					LASA	pre='1'	preOff
					LASA	col2A=2048 and post='0'	postOn
					waitFrame	post='1'	incRow	row_lcl=std_logic_vector(to_unsigned(rowmax_lcl, 11))
					waitRow	post='1'	incRow	else
					LASA	else
					ImeIAMFsmstateStep.end
				ImeIMFsmstate.end
			ImeIMFsm.end
		grrdcdbufB	mclk	reset	false	state(init) or tixVGrrdbufstate/=tixVGrrdbufstateStream		grrdcdbuf B/featdet-facing operation
			ImeIMFsm.
			
				ImeICFsmstate.iref
				1
				ImeICFsmstate.end
				ImeIMFsmstate.irefRefWdbeCFsmstate	sref	Extip	Comment
				0	init	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					init	tixVGrrdbufstate/=tixVGrrdbufstateStream
					ready	else
					ImeIAMFsmstateStep.end
				0	ready	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					readA	reqGrrdcdbufToFeatdet	ready
					ImeIAMFsmstateStep.end
				1	readA	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					ready	!reqGrrdcdbufToFeatdet	done
					readB	!strbDGrrdcdbufToFeatdet	next
					ImeIAMFsmstateStep.end
				1	readB	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					readA	strbDGrrdcdbufToFeatdet	inc
					ImeIAMFsmstateStep.end
				ImeIMFsmstate.end
			ImeIMFsm.end
		grrdefbufB	mclk	reset	false	state(init) or tixVGrrdbufstate/=tixVGrrdbufstateStream		grrdefbuf B/featdet-facing operation
			ImeIMFsm.
			
				ImeICFsmstate.iref
				1
				ImeICFsmstate.end
				ImeIMFsmstate.irefRefWdbeCFsmstate	sref	Extip	Comment
				0	init	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					init	tixVGrrdbufstate/=tixVGrrdbufstateStream
					ready	else
					ImeIAMFsmstateStep.end
				0	ready	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					readA	reqGrrdefbufToFeatdet	ready
					ImeIAMFsmstateStep.end
				1	readA	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					ready	!reqGrrdefbufToFeatdet	done
					readB	!strbDGrrdefbufToFeatdet	next
					ImeIAMFsmstateStep.end
				1	readB	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					readA	strbDGrrdefbufToFeatdet	inc
					ImeIAMFsmstateStep.end
				ImeIMFsmstate.end
			ImeIMFsm.end
		op	mclk	reset	false	state(init) or (state(!invGrrd) and state(!invPvw) and state(!inv) and (reqInvSetGrrd or reqInvSetPvw))	false	main operation
			ImeIAVKeylistKey.sref	Title	Comment
			pvwacc_t	(pvwaccBingray, pvwaccBinrgb, pvwaccRawgray, pvwaccRawrgb)	pvwaccBingray
			ImeIAVKeylistKey.end
			ImeIMFsm.
			
				ImeIMFsmstate.irefRefWdbeCFsmstate	sref	Extip	Comment
				0	init	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					invGrrd	reqInvSetGrrd	invSetGrrd
					invPvw	reqInvSetPvw	invSetPvw
					init	else
					ImeIAMFsmstateStep.end
				0	invGrrd	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					inv		invGrrd
					ImeIAMFsmstateStep.end
				0	invPvw	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					inv		invPvw
					ImeIAMFsmstateStep.end
				0	inv	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					init	(!reqInvSetGrrd and ackInvSetGrrd_sig) or (!reqInvSetPvw and ackInvSetPvw_sig)
					ImeIAMFsmstateStep.end
				ImeIMFsmstate.end
			ImeIMFsm.end
		pvw	mclk	reset	false	state(init) or !pvwrun	false	preview operation, also managing pvw{a/b}buf
			ImeIMFsm.
			
				ImeICFsmstate.iref
				1
				2
				3
				ImeICFsmstate.end
				ImeIMFsmstate.irefRefWdbeCFsmstate	sref	Extip	Comment
				0	init	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					init	!pvwrun	reset
					trylockA	else	toLock
					ImeIAMFsmstateStep.end
				1	trylockA	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					waitFrame	ackPvwToPvwbufAbufLock	ack
					trylockB	dnyPvwToPvwbufAbufLock	dny
					ImeIAMFsmstateStep.end
				1	trylockB	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					waitFrame	ackPvwToPvwbufBbufLock	ack
					trylockA	dnyPvwToPvwbufBbufLock	dny
					ImeIAMFsmstateStep.end
				0	waitFrame	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					ready	strbFrame	waitFrame
					ImeIAMFsmstateStep.end
				0	ready	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					storeA	strbDPvwbingrayGr	bingrayGr
					storeA	strbDPvwrawgrayGr	rawgrayGr
					storeB	strbDPvwbinrgbRd	binrgbRd
					storeB	strbDPvwrawrgbRd	rawrgbRd
					storeC	strbDPvwbinrgbGnBl	binrgbGnBl
					storeC	strbDPvwrawrgbGnBl	rawrgbGnBl
					ImeIAMFsmstateStep.end
				2	storeA	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					doneA	aPvwbufGr=49151
					ready	else	inc
					ImeIAMFsmstateStep.end
				2	storeB	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					ready		inc
					ImeIAMFsmstateStep.end
				2	storeC	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					storeD		storeC
					ImeIAMFsmstateStep.end
				2	storeD	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					doneA	aPvwbufBl=57599
					ready	else	inc
					ImeIAMFsmstateStep.end
				3	doneA	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					doneB		doneA
					ImeIAMFsmstateStep.end
				3	doneB	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					trylockB	ackPvwToPvwbufAbufSetFull or ackPvwToPvwbufBbufSetFull	doneB	!pvwLatestBNotA	bbuf
					trylockA	ackPvwToPvwbufAbufSetFull or ackPvwToPvwbufBbufSetFull	doneB	else	abuf
					ImeIAMFsmstateStep.end
				ImeIMFsmstate.end
			ImeIMFsm.end
		pvwbingray	mclk	reset	false	state(init) or !pvwbingrayrun	false	preview 4x4 pixel binning gray, also managing bingraybuf
			ImeIMFsm.
			
				ImeICFsmstate.iref
				1
				ImeICFsmstate.end
				ImeIMFsmstate.irefRefWdbeCFsmstate	sref	Extip	Comment
				0	init	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					init	!pvwbingrayrun
					waitFrame	else
					ImeIAMFsmstateStep.end
				0	waitFrame	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					waitRow	strbRow768	reset
					ImeIAMFsmstateStep.end
				0	waitRow	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					LASA	strbCol1024N9	reset
					ImeIAMFsmstateStep.end
				1	LASA	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					LASB		LASA
					ImeIAMFsmstateStep.end
				1	LASB	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					LASC
					ImeIAMFsmstateStep.end
				1	LASC	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					LASD		LASC
					ImeIAMFsmstateStep.end
				1	LASD	true
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					LASA	pixcnt="00"		pre1='1'	pre1
					LASA	pixcnt="00"		pre2='1'	pre2
					LASA	pixcnt="00"		col2L=512 and post1='0' and post2='0'	post
					LASA	pixcnt="00"		post1='1'	post1
					waitFrame	pixcnt="00"		post2='1'	post2	row_lcl=std_logic_vector(to_unsigned(rowmax_lcl, 11))
					waitRow	pixcnt="00"		post2='1'	post2	else
					LASA	pixcnt="00"		else
					LASA	else
					ImeIAMFsmstateStep.end
				ImeIMFsmstate.end
			ImeIMFsm.end
		pvwbinrgb	mclk	reset	false	state(init) or !pvwbinrgbrun	false	preview 8x8 pixel binning RGB, also managing binrgbbuf
			ImeIMFsm.
			
				ImeICFsmstate.iref
				1
				ImeICFsmstate.end
				ImeIMFsmstate.irefRefWdbeCFsmstate	sref	Extip	Comment
				0	init	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					init	!pvwbinrgbrun	syncrst
					waitFrame	else
					ImeIAMFsmstateStep.end
				0	waitFrame	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					waitRow	strbRow960	reset
					ImeIAMFsmstateStep.end
				0	waitRow	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					LASA	strbCol1280N9	reset
					ImeIAMFsmstateStep.end
				1	LASA	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					LASB		LASA
					ImeIAMFsmstateStep.end
				1	LASB	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					LASC
					ImeIAMFsmstateStep.end
				1	LASC	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					LASD		LASC
					ImeIAMFsmstateStep.end
				1	LASD	true
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					LASA	pixcnt="000"		pre1='1'	pre1
					LASA	pixcnt="000"		pre2='1'	pre2
					LASA	pixcnt="000"		col2L=320 and post1='0' and post2='0'	post
					LASA	pixcnt="000"		post1='1'	post1
					waitFrame	pixcnt="000"		post2='1'	post2	row_lcl=std_logic_vector(to_unsigned(rowmax_lcl, 11))
					waitRow	pixcnt="000"		post2='1'	post2	else
					LASA	pixcnt="000"		else
					LASA	else
					ImeIAMFsmstateStep.end
				ImeIMFsmstate.end
			ImeIMFsm.end
		pvwbuf	mclk	reset	false	state(init) or !pvwrun	false	pvw{a/b}buf mutex management
			ImeIAVKeylistKey.sref	Title	Comment
			lock_t	(lockIdle, lockBufB, lockPvw)	lockIdle
			ImeIAVKeylistKey.end
			ImeIMFsm.
			
				ImeIMFsmstate.irefRefWdbeCFsmstate	sref	Extip	Comment
				0	init	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					init	!pvwrun
					ready	else
					ImeIAMFsmstateStep.end
				0	ready	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					ack	reqPvwToPvwbufAbufLock	pvwAbufLock
					ack	reqPvwToPvwbufAbufSetFull	pvwAbufFull
					ack	reqPvwToPvwbufBbufLock	pvwBbufLock
					ack	reqPvwToPvwbufBbufSetFull	pvwBbufFull
					ack	reqPvwbufBToPvwbufAbufLock	pvwbufBAbufLock
					ack	reqPvwbufBToPvwbufAbufClear	pvwbufBAbufClear
					ack	reqPvwbufBToPvwbufBbufLock	pvwbufBBbufLock
					ack	reqPvwbufBToPvwbufBbufClear	pvwbufBBbufClear
					ImeIAMFsmstateStep.end
				0	ack	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					ready	(ackPvwToPvwbufAbufLock or dnyPvwToPvwbufAbufLock) and !reqPvwToPvwbufAbufLock	pvwAbufLock
					ready	ackPvwToPvwbufAbufSetFull and !reqPvwToPvwbufAbufSetFull	pvwAbufFull
					ready	(ackPvwToPvwbufBbufLock or dnyPvwToPvwbufBbufLock) and !reqPvwToPvwbufBbufLock	pvwBbufLock
					ready	ackPvwToPvwbufBbufSetFull and !reqPvwToPvwbufBbufSetFull	pvwBbufFull
					ready	(ackPvwbufBToPvwbufAbufLock or dnyPvwbufBToPvwbufAbufLock) and !reqPvwbufBToPvwbufAbufLock	pvwbufBAbufLock
					ready	ackPvwbufBToPvwbufAbufClear and !reqPvwbufBToPvwbufAbufClear	pvwbufBAbufClear
					ready	(ackPvwbufBToPvwbufBbufLock or dnyPvwbufBToPvwbufBbufLock) and !reqPvwbufBToPvwbufBbufLock	pvwbufBBbufLock
					ready	ackPvwbufBToPvwbufBbufClear and !reqPvwbufBToPvwbufBbufClear	pvwbufBBbufClear
					ImeIAMFsmstateStep.end
				ImeIMFsmstate.end
			ImeIMFsm.end
		pvwbufB	mclk	reset	false	state(init) or !pvwrun	false	pvw{a/b}buf B/hostif-facing operation
			ImeIMFsm.
			
				ImeICFsmstate.iref
				1
				ImeICFsmstate.end
				ImeIMFsmstate.irefRefWdbeCFsmstate	sref	Extip	Comment
				0	init	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					init	!pvwrun
					ready	else
					ImeIAMFsmstateStep.end
				0	ready	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					trylock	tixVPvwbufstate=tixVPvwbufstateAbuf and reqPvwabufToHostif	aprep
					trylock	tixVPvwbufstate=tixVPvwbufstateBbuf and reqPvwbbufToHostif	bprep
					ImeIAMFsmstateStep.end
				0	trylock	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					readA	ackPvwbufBToPvwbufAbufLock or ackPvwbufBToPvwbufBbufLock	ack
					init	dnyPvwbufBToPvwbufAbufLock or dnyPvwbufBToPvwbufBbufLock
					ImeIAMFsmstateStep.end
				1	readA	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					done	pvwabufLock=lockBufB		dnePvwabufToHostif	adne
					done	pvwabufLock=lockBufB		!reqPvwabufToHostif	acnc
					readB	pvwabufLock=lockBufB		!strbDPvwabufToHostif	astep
					done	pvwbbufLock=lockBufB		dnePvwbbufToHostif	bdne
					done	pvwbbufLock=lockBufB		!reqPvwbbufToHostif	bcnc
					readB	pvwbbufLock=lockBufB		!strbDPvwbbufToHostif	bstep
					ImeIAMFsmstateStep.end
				1	readB	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					done	pvwabufLock=lockBufB		!reqPvwabufToHostif	acnc
					readA	pvwabufLock=lockBufB		strbDPvwabufToHostif	ainc
					done	pvwbbufLock=lockBufB		!reqPvwbbufToHostif	bcnc
					readA	pvwbbufLock=lockBufB		strbDPvwbbufToHostif	binc
					ImeIAMFsmstateStep.end
				0	done	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					init	ackPvwbufBToPvwbufAbufLock or ackPvwbufBToPvwbufAbufClear or ackPvwbufBToPvwbufBbufLock or ackPvwbufBToPvwbufBbufClear
					ImeIAMFsmstateStep.end
				ImeIMFsmstate.end
			ImeIMFsm.end
		pvwrawgray	mclk	reset	false	state(init) or !pvwrawgrayrun	false	preview raw gray, also managing rawgraybuf
			ImeIMFsm.
			
				ImeICFsmstate.iref
				1
				ImeICFsmstate.end
				ImeIMFsmstate.irefRefWdbeCFsmstate	sref	Extip	Comment
				0	init	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					init	!pvwrawgrayrun
					waitFrame	else
					ImeIAMFsmstateStep.end
				0	waitFrame	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					waitRow	strbRow192	reset
					ImeIAMFsmstateStep.end
				0	waitRow	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					LASA	strbCol256N3	reset
					ImeIAMFsmstateStep.end
				1	LASA	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					LASB		LASA
					ImeIAMFsmstateStep.end
				1	LASB	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					LASC		LASB
					ImeIAMFsmstateStep.end
				1	LASC	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					LASD		LASC
					ImeIAMFsmstateStep.end
				1	LASD	true
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					LASA	pre='1'	pre
					LASA	col2A=512 and post='0'	toPost
					waitFrame	post='1'	post	row_lcl=std_logic_vector(to_unsigned(rowmax_lcl, 9))
					waitRow	post='1'	post	else
					LASA	else
					ImeIAMFsmstateStep.end
				ImeIMFsmstate.end
			ImeIMFsm.end
		pvwrawrgb	mclk	reset	false	state(init) or !pvwrawrgbrun	false	preview raw RGB
			ImeIMFsm.
			
				ImeICFsmstate.iref
				1
				ImeICFsmstate.end
				ImeIMFsmstate.irefRefWdbeCFsmstate	sref	Extip	Comment
				0	init	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					init	!pvwrawrgbrun
					waitFrame	else
					ImeIAMFsmstateStep.end
				0	waitFrame	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					waitRow	strbRow120	reset
					ImeIAMFsmstateStep.end
				0	waitRow	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					LASA	strbCol160N1	reset
					ImeIAMFsmstateStep.end
				1	LASA	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					LASB		LASA
					ImeIAMFsmstateStep.end
				1	LASB	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					LASC
					ImeIAMFsmstateStep.end
				1	LASC	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					LASD		LASC
					ImeIAMFsmstateStep.end
				1	LASD	true
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					waitFrame	col_lcl=colmax_lcl	inc	row_lcl=std_logic_vector(to_unsigned(rowmax_lcl, 8))
					waitRow	col_lcl=colmax_lcl	inc	else
					LASA	else
					ImeIAMFsmstateStep.end
				ImeIMFsmstate.end
			ImeIMFsm.end
		sample	mclk	reset	true	state(init) or (!grrdrun and !pvwrun)		camera data sampling at every other rising or falling mclk edge
			ImeIMFsm.
			
				ImeICFsmstate.iref
				1
				ImeICFsmstate.end
				ImeIMFsmstate.irefRefWdbeCFsmstate	sref	Extip	Comment
				0	init	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					runA	grrdrun or pvwrun
					init	else
					ImeIAMFsmstateStep.end
				1	runA	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					runB		runA
					ImeIAMFsmstateStep.end
				1	runB	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					runA		runB
					ImeIAMFsmstateStep.end
				ImeIMFsmstate.end
			ImeIMFsm.end
		tag	mclk	reset	false	state(init) or (!grrdrun and !pvwrun)	false	camera frame tagging
			ImeIMFsm.
			
				ImeICFsmstate.iref
				1
				2
				3
				ImeICFsmstate.end
				ImeIMFsmstate.irefRefWdbeCFsmstate	sref	Extip	Comment
				0	init	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					frameA	grrdrun or pvwrun
					init	else
					ImeIAMFsmstateStep.end
				1	frameA	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					frameB	vsync_sig
					ImeIAMFsmstateStep.end
				1	frameB	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					rowA	!vsync_sig	frameB
					ImeIAMFsmstateStep.end
				2	rowA	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					rowB	!href_sig
					ImeIAMFsmstateStep.end
				2	rowB	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					colA	href_sig	rowB
					ImeIAMFsmstateStep.end
				3	colA	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					colB
					ImeIAMFsmstateStep.end
				3	colB	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					frameA	col=colmax-1	colzero	row=rowmax-1	rowzero
					rowA	col=colmax-1	colzero	else	rowinc
					colA	else	colinc
					ImeIAMFsmstateStep.end
				ImeIMFsmstate.end
			ImeIMFsm.end
		ImeIMProcess.end
	iccl_ip_AXI;top;camacq	mipirx
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		rx_clk_p						csi_clk_p
		retrupd	0		rx_clk_n						csi_clk_n
		retrupd	0		rxd								csid
		retrupd	0		rxd_n								csidn
		retrupd	0		arst_n								resetn
		retrupd	0		hs_sel					0
		retrupd	0		hs_io_clk_pause					0
		retrupd	0		rx_clk_g								rxclk
		retrupd	0		l0_rxd_data								rxd[7..0]
		retrupd	0		l1_rxd_data								rxd[15..8]
		retrupd	0		l2_rxd_data								rxd[23..16]
		retrupd	0		l3_rxd_data								rxd[31..24]
		retrupd	0		l0_lp_data								rxdLp[0]
		retrupd	0		l0_lp_data_n								rxdLpn[0]
		retrupd	0		l1_lp_data								rxdLp[1]
		retrupd	0		l1_lp_data_n								rxdLpn[1]
		retrupd	0		l2_lp_data								rxdLp[2]
		retrupd	0		l2_lp_data_n								rxdLpn[2]
		retrupd	0		l3_lp_data								rxdLp[3]
		retrupd	0		l3_lp_data_n								rxdLpn[3]
		ImeIMPort.end
	iccl_ip_AXI;top;camacq	mipipll
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		PLL_POWERDOWN_N_0					1
		retrupd	0		REF_CLK_0								rxclk
		retrupd	0		OUT0_FABCLK_0								pixclk
		ImeIMPort.end
	iccl_ip_AXI;top;camacq	mipidec
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		reset_n_i								resetn
		retrupd	0		parallel_clock_i								pixclk
		retrupd	0		cam_clock_i								rxclk
		retrupd	0		l0_hs_data_i								rxd[7..0]
		retrupd	0		l1_hs_data_i								rxd[15..8]
		retrupd	0		l2_hs_data_i								rxd[23..16]
		retrupd	0		l3_hs_data_i								rxd[31..24]
		retrupd	0		l0_lp_data_i								rxdLp[0]
		retrupd	0		l0_lp_data_n_i								rxdLpn[0]
		retrupd	0		l1_lp_data_i								rxdLp[1]
		retrupd	0		l1_lp_data_n_i								rxdLpn[1]
		retrupd	0		l2_lp_data_i								rxdLp[2]
		retrupd	0		l2_lp_data_n_i								rxdLpn[2]
		retrupd	0		l3_lp_data_i								rxdLp[3]
		retrupd	0		l3_lp_data_n_i								rxdLpn[3]
		retrupd	0		frame_start_o								strbFrameStart
		retrupd	0		frame_end_o								strbFrameEnd
		retrupd	0		frame_valid_o
		retrupd	0		line_start_o								strbRowStart
		retrupd	0		line_end_o								strbRowEnd
		retrupd	0		line_valid_o
		retrupd	0		data_out_o								pixd
		retrupd	0		data_type_o
		retrupd	0		virtual_channel_o
		retrupd	0		ecc_error_o
		retrupd	0		word_count_o
		ImeIMPort.end
	iccl_ip_AXI;top;camacq	bingraybuf
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		CLK								mclk
		retrupd	0		A_BLK_EN								enBingraybuf
		retrupd	0		A_WEN								weBingraybuf
		retrupd	0		A_ADDR								aBingraybuf_vec
		retrupd	0		A_DOUT								drdBingraybuf
		retrupd	0		A_DIN								dwrBingraybuf
		ImeIMPort.end
	iccl_ip_AXI;top;camacq	binrgbbuf
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		CLK								mclk
		retrupd	0		A_BLK_EN								enBinrgbbuf
		retrupd	0		A_WEN								weBinrgbbuf
		retrupd	0		A_ADDR								aBinrgbbuf_vec
		retrupd	0		A_DOUT								drdBinrgbbuf
		retrupd	0		A_DIN								dwrBinrgbbuf
		ImeIMPort.end
	iccl_ip_AXI;top;camacq	evenbuf
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		CLK_N								mclk
		retrupd	0		A_BLK_EN								enEvenbuf
		retrupd	0		A_WEN								weEvenbuf
		retrupd	0		A_ADDR								aEvenbuf_vec
		retrupd	0		A_DOUT								drdEvenbuf
		retrupd	0		A_DIN								dwrEvenbuf
		ImeIMPort.end
	iccl_ip_AXI;top;camacq	rawgraybuf
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		CLK_N								mclk
		retrupd	0		A_BLK_EN								enRawgraybuf
		retrupd	0		A_WEN								weRawgraybuf
		retrupd	0		A_ADDR								aRawgraybuf_vec
		retrupd	0		A_DOUT								drdRawgraybuf
		retrupd	0		A_DIN								dwrRawgraybuf
		ImeIMPort.end
	iccl_ip_AXI;top;camacq	grrdabbuf
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		W_CLK								mclk
		retrupd	0		W_EN								enGrrdabbuf
		retrupd	0		W_ADDR								aGrrdbuf_vec
		retrupd	0		W_DATA								dwrGrrdbuf
		retrupd	0		R_CLK_N								mclk
		retrupd	0		R_EN								enGrrdabbufB
		retrupd	0		R_ADDR								aGrrdabbufB_vec
		retrupd	0		R_DATA							dGrrdabbufToFeatdet
		ImeIMPort.end
	iccl_ip_AXI;top;camacq	grrdcdbuf
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		W_CLK								mclk
		retrupd	0		W_EN								enGrrdcdbuf
		retrupd	0		W_ADDR								aGrrdbuf_vec
		retrupd	0		W_DATA								dwrGrrdbuf
		retrupd	0		R_CLK_N								mclk
		retrupd	0		R_EN								enGrrdcdbufB
		retrupd	0		R_ADDR								aGrrdcdbufB_vec
		retrupd	0		R_DATA							dGrrdcdbufToFeatdet
		ImeIMPort.end
	iccl_ip_AXI;top;camacq	grrdefbuf
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		W_CLK								mclk
		retrupd	0		W_EN								enGrrdefbuf
		retrupd	0		W_ADDR								aGrrdbuf_vec
		retrupd	0		W_DATA								dwrGrrdbuf
		retrupd	0		R_CLK_N								mclk
		retrupd	0		R_EN								enGrrdefbufB
		retrupd	0		R_ADDR								aGrrdefbufB_vec
		retrupd	0		R_DATA							dGrrdefbufToFeatdet
		ImeIMPort.end
	iccl_ip_AXI;top;camacq	pvwabuf
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		W_CLK								mclk
		retrupd	0		W_EN								enPvwabuf
		retrupd	0		W_ADDR								aPvwbuf_vec
		retrupd	0		W_DATA								dwrPvwbuf
		retrupd	0		R_CLK								mclk
		retrupd	0		R_EN								enPvwabufB
		retrupd	0		R_ADDR								aPvwbufB_vec
		retrupd	0		R_DATA							dPvwabufToHostif
		ImeIMPort.end
	iccl_ip_AXI;top;camacq	pvwbbuf
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		W_CLK								mclk
		retrupd	0		W_EN								enPvwbbuf
		retrupd	0		W_ADDR								aPvwbuf_vec
		retrupd	0		W_DATA								dwrPvwbuf
		retrupd	0		R_CLK								mclk
		retrupd	0		R_EN								enPvwbbufB
		retrupd	0		R_ADDR								aPvwbufB_vec
		retrupd	0		R_DATA							dPvwbbufToHostif
		ImeIMPort.end
	iccl_ip_AXI;top	camif
		ImeIMGeneric.srefIxWdbeVIop	irefRefWdbeCGeneric	sref	srefWdbeKHdltype	Width	Minmax	Defval	srcSrefWdbeMGeneric	Comment
		ins	0	fMclk	nat		1..1000000	50000	fMclk	in kHz
		ImeIMGeneric.end
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		ins	0	reset	reset	in	sl	1					reset
		ins	0	clk	mclk	in	sl	1					mclk
		ins	0	clk	tkclk	in	sl	1					tkclk
		ins	0	rtetop	rng	out	sl	1					camrng
		ImeIMPort.end
		ImeICSignal2.iref
		1
		2
		3
		ImeICSignal2.end
		ImeIMSignal2.srefIxVBasetype	irefRefWdbeCSignal	srefMgeIxVTbl	srefMgeUref	sref	Const	srefWdbeKHdltype	Width	Minmax	Comb	Onval	Offval	Defon	srefDrvRefWdbeMPort	Comment
		oprt	0	prc	op	rng	false	sl	1				0	true	rng
		oprt	0	prc	op	ackInvSetRng	false	sl	1				0	false	ackInvSetRng
		oprt	0	prc	op	ackInvSetReg	false	sl	1				0	false	ackInvSetReg
		oprt	0	prc	op	ackInvSetRegaddr	false	sl	1				0	false	ackInvSetRegaddr
		oprt	0	prc	op	ackInvGetReg	false	sl	1				0	false	ackInvGetReg
		oprt	0	prc	op	regVal	false	slvdn	8				0	false	getRegVal
		oprt	0	prc	op	ackInvModReg	false	sl	1				0	false	ackInvModReg
		oth	0	prc	op	enParrom	false	sl	1		state(loadA)	1	0	false
		oth	1	prc	op	aParrom_vec	false	slvdn	11					false
		oth	1	prc	op	aParrom	false	nat		0..2048			0	false
		oth	2	prc	op	i2cReadNotWrite	false	sl	1				0	false
		oth	2	prc	op	i2cRegaddr	false	slvdn	16				0	false
		oth	2	prc	op	i2cSend	false	slvdn	8				0	false
		oth	0	mdl	i2c	i2cRecv	false	slvdn	8					false
		oth	0	mdl	parrom	drdParrom	false	slvdn	8					false
		hshk	3	prc	op	reqI2c	false	sl	1		state(xfer)	1	0	false
		hshk	3	mdl	i2c	ackI2c	false	sl	1					false
		hshk	3	mdl	i2c	dneI2c	false	sl	1					false
		ImeIMSignal2.end
		ImeIMProcess.sref	clkSrefWdbeMSignal	asrSrefWdbeMSignal	Falling	Syncrst	Extip	Comment
		camclk	mclk	reset	false		false	camera master clock
		op	mclk	reset	false	state(init)	false	main operation
			ImeIMFsm.
			
				ImeICFsmstate.iref
				1
				2
				3
				ImeICFsmstate.end
				ImeIMFsmstate.irefRefWdbeCFsmstate	sref	Extip	Comment
				0	init	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					prepB	not prepdone	prep
					pwupdnB	reqInvSetRng		setRngRng=fls8 and !pwdn_sig	pwdn
					pwupdnB	reqInvSetRng		setRngRng=tru8 and pwdn_sig	pwup
					inv	reqInvSetRng		else	invSetRng
					xfer	reqInvSetReg	invSetReg
					inv	reqInvSetRegaddr	invSetRegaddr
					xfer	reqInvGetReg	invGetReg
					xfer	reqInvModReg	invModReg
					ImeIAMFsmstateStep.end
				1	prepA	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					prepD	tkclk		i=imax	done
					prepB	tkclk		else
					ImeIAMFsmstateStep.end
				1	prepB	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					prepA	!tkclk	inc
					ImeIAMFsmstateStep.end
				1	prepC	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					loadA	tkclk		j=jmax	done
					prepD	tkclk		else
					ImeIAMFsmstateStep.end
				1	prepD	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					prepC	!tkclk	inc
					ImeIAMFsmstateStep.end
				2	loadA	true
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					loadB	k=kmax
					ImeIAMFsmstateStep.end
				2	loadB	true
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					loadA	bytecnt=1 and drdParrom=x"00"		not specNotGnr	prepSpec
					init	bytecnt=1 and drdParrom=x"00"		else	done
					xfer	else	inc	bytecnt=0
					loadA	else	inc	bytecnt=1	addrmsb
					loadA	else	inc	bytecnt=2	addrlsb
					loadA	else	inc	bytecnt=3	val
					ImeIAMFsmstateStep.end
				0	xfer	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					step	dneI2c
					ImeIAMFsmstateStep.end
				0	step	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					loadA	!i2cReadNotWrite		not prepdone	prep
					inv	!i2cReadNotWrite		else	cmdDone			specNotGnr='0'	gnrDone
					inv	else		not modNotGetSet	get
					xfer	else		else	mod
					ImeIAMFsmstateStep.end
				3	pwupdnA	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					inv	tkclk		j=jmax	done
					pwupdnB	tkclk		else
					ImeIAMFsmstateStep.end
				3	pwupdnB	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					pwupdnA	!tkclk	inc
					ImeIAMFsmstateStep.end
				0	inv	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					init	(!reqInvSetRng and ackInvSetRng_sig) or (!reqInvSetReg and ackInvSetReg_sig) or (!reqInvSetRegaddr and ackInvSetRegaddr_sig) or (!reqInvGetReg and ackInvGetReg_sig) or (!reqInvModReg and ackInvModReg_sig)
					ImeIAMFsmstateStep.end
				ImeIMFsmstate.end
			ImeIMFsm.end
		ImeIMProcess.end
	iccl_ip_AXI;top;camif	i2c
		ImeICGeneric.iref
		1
		ImeICGeneric.end
		ImeIMGeneric.srefIxWdbeVIop	irefRefWdbeCGeneric	sref	srefWdbeKHdltype	Width	Minmax	Defval	srcSrefWdbeMGeneric	Comment
		ins	0	fMclk	nat		1..1000000		fMclk	in kHz
		ins	1	clkFastNotStd	sl	1		1		1Mbps/400kbps vs. 100kbps
		ins	1	clkFastplusNotFast	sl	1		0		1Mbps vs. 400kbps
		ins	0	devaddr	slvdn	8		01111000		0x3C left-shifted by one
		ImeIMGeneric.end
		ImeICPort.iref
		1
		2
		ImeICPort.end
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		ins	0	reset	reset	in	sl	1					reset
		ins	0	clk	mclk	in	sl	1					mclk
		ins	1	rtesup	req	in	sl	1					reqI2c
		ins	1	rtesup	ack	out	sl	1
		ins	1	rtesup	dne	out	sl	1					dneI2c
		ins	0	rtesup	readNotWrite	in	sl	1					i2cReadNotWrite
		ins	0	rtesup	regaddr	in	slvdn	16					i2cRegaddr
		ins	0	rtesup	send	in	slvdn	8					i2cSend
		ins	0	rtesup	recv	out	slvdn	8					i2cRecv
		ins	2	rtepin	scl	out	sl	1			sioc
		ins	2	rtepin	sda	inout	sl	1			siod
		ImeIMPort.end
		ImeICSignal2.iref
		1
		ImeICSignal2.end
		ImeIMSignal2.srefIxVBasetype	irefRefWdbeCSignal	srefMgeIxVTbl	srefMgeUref	sref	Const	srefWdbeKHdltype	Width	Minmax	Comb	Onval	Offval	Defon	srefDrvRefWdbeMPort	Comment
		oprt	0	prc	xfer	ack	false	sl	1		state(init)	1	0	true	ack
		oprt	0	prc	xfer	dne	false	sl	1		state(done)	1	0	false	dne
		oprt	0	prc	xfer	recv	false	slvdn	8				0	false	recv
		oprt	0	prc	xfer	scl	false	sl	1		state(bitA;ackA;restart;stopA)	1	0	true	scl
		oth	1	prc	xfer	sda_sig	false	sl	1				0	false
		oth	1	prc	xfer	sdan	false	sl	1		!sda_sig	1	0	false
		oth	0	mdl	iobuf	sda_in	false	sl	1				0	false
		ImeIMSignal2.end
		ImeIMProcess.sref	clkSrefWdbeMSignal	asrSrefWdbeMSignal	Falling	Syncrst	Extip	Comment
		xfer	mclk	reset	false	state(init) or !req	false	transfer operation
			ImeIMFsm.
			
				ImeICFsmstate.iref
				1
				2
				3
				4
				ImeICFsmstate.end
				ImeIMFsmstate.irefRefWdbeCFsmstate	sref	Extip	Comment
				0	init	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					init	!req
					startA	else
					ImeIAMFsmstateStep.end
				1	startA	true
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					startB	i=imax	step
					ImeIAMFsmstateStep.end
				1	startB	true
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					bitA	i=imax	step
					ImeIAMFsmstateStep.end
				2	bitA	true
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					bitB	i=imax	step
					ImeIAMFsmstateStep.end
				2	bitB	true
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					ackA	i=imax	step	bitcnt=8
					bitA	i=imax	step	else
					ImeIAMFsmstateStep.end
				3	ackA	true
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					ackB	i=imax	step
					ImeIAMFsmstateStep.end
				3	ackB	true
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					restart	i=imax	step	bytecnt=3		readNotWrite
					bitA	i=imax	step	bytecnt=3		else
					stopA	i=imax	step	(bytecnt=4 and !readNotWrite) or (bytecnt=5 and readNotWrite)	prepStop
					bitA	i=imax	step	else
					ImeIAMFsmstateStep.end
				0	restart	true
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					startA	i=imax	step
					ImeIAMFsmstateStep.end
				4	stopA	true
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					stopB	i=imax	step
					ImeIAMFsmstateStep.end
				4	stopB	true
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					stopC	i=imax	step
					ImeIAMFsmstateStep.end
				4	stopC	true
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					done	i=imax	step
					ImeIAMFsmstateStep.end
				0	done	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					init	!req
					ImeIAMFsmstateStep.end
				ImeIMFsmstate.end
			ImeIMFsm.end
		ImeIMProcess.end
	iccl_ip_AXI;top;camif;i2c	iobuf
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		Y								sda_in
		retrupd	0		PAD							sda
		retrupd	0		D					0
		retrupd	0		E								sdan
		ImeIMPort.end
	iccl_ip_AXI;top;camif	parrom
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		CLK								mclk
		retrupd	0		A_BLK_EN								enParrom
		retrupd	0		A_ADDR								aParrom_vec
		retrupd	0		A_DOUT								drdParrom
		ImeIMPort.end
	iccl_ip_AXI;top	featdet
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		ins	0	reset	reset	in	sl	1					reset
		ins	0	clk	mclk	in	sl	1					mclk
		ins	0	dbg	strb_dbg	out	slvdn	4					featdetStrb_dbg
		ImeIMPort.end
		ImeICSignal2.iref
		1
		2
		3
		4
		5
		6
		7
		8
		9
		10
		11
		12
		13
		14
		15
		16
		17
		18
		19
		20
		21
		22
		23
		ImeICSignal2.end
		ImeIMSignal2.srefIxVBasetype	irefRefWdbeCSignal	srefMgeIxVTbl	srefMgeUref	sref	Const	srefWdbeKHdltype	Width	Minmax	Comb	Onval	Offval	Defon	srefDrvRefWdbeMPort	Comment
		oprt	0	prc	flg	ackInvTriggerThd	false	sl	1		state(inv)	1	0	false	ackInvTriggerThd
		oprt	1	prc	flg	tixVThdstate	false	slvdn	8				tixVThdstateIdle	false	getInfoTixVThdstate
		oprt	1	prc	flg	tkst	false	slvdn	32				0	false	getInfoTkst
		oth	0	prc	flg	enFlgbuf	false	sl	1		state(loadA;storeA)	1	0	false
		oth	0	prc	flg	weFlgbuf	false	sl	1				0	false
		oth	2	prc	flg	aFlgbuf_vec	false	slvdn	17					false
		oth	2	prc	flg	aFlgbuf	false	nat		0..98304			0	false
		oth	0	prc	flg	dwrFlgbuf	false	slvdn	8				0	false
		oth	0	prc	flg	thdrun	false	sl	1		thdNotCorner and state(ready;loadA;storeA)	1	0	false
		oth	0	prc	flg	thdSecondNotFirst	false	sl	1				0	false
		oth	0	prc	flg	cornerrun	false	sl	1		!thdNotCorner and state(ready;loadA;storeA)	1	0	false
		oth	0	prc	flg	drdThd	false	slvdn	8				0	false
		oth	3	prc	flgbuf	flgbufLock	false	lock_t					lockIdle	false
		oth	3	prc	flgbuf	flgbufFull	false	sl	1				0	false
		oprt	0	prc	flgbufB	tixVFlgbufstate	false	slvdn	8					false	getInfoTixVFlgbufstate
		oth	0	prc	flgbufB	enFlgbufB	false	sl	1		flgbufLock=lockBufB and !strbDFlgbufToHostif and state(readA)	1	0	false
		oth	2	prc	flgbufB	aFlgbufB_vec	false	slvdn	15					false
		oth	2	prc	flgbufB	aFlgbufB	false	nat		0..24576			0	false
		oprt	0	prc	flgbufB	ackFlgbufToHostif	false	sl	1				0	false	ackFlgbufToHostif
		oth	4	prc	maxsel	dCorner	false	slvdn	8				0	false
		strb	4	prc	maxsel	strbDCorner	false	sl	1		state(store)	1	0	false
		oth	0	prc	op	streamrun	false	sl	1				0	false
		oprt	0	prc	op	ackInvSet	false	sl	1				0	false	ackInvSet
		oth	0	prc	op	thdNotCorner	false	sl	1				0	false
		oth	0	prc	op	thdDeltaNotAbs	false	sl	1				0	false
		oprt	0	prc	op	ackInvSetCorner	false	sl	1				0	false	ackInvSetCorner
		oth	0	prc	op	cornerLinNotLog	false	sl	1				0	false
		oth	0	prc	op	cornerThd	false	nat		0..255			127	false
		oprt	0	prc	op	ackInvSetThd	false	sl	1				0	false	ackInvSetThd
		oth	5	prc	op	thdLvlFirst	false	slvdn	8				0	false
		oth	5	prc	op	thdLvlSecond	false	slvdn	8				0	false
		oth	6	prc	stream	reqGrrdbuf	false	sl	1				0	false
		oth	6	prc	stream	ackGrrdbuf	false	sl	1					false
		strb	0	prc	stream	strbDGrrdbuf	false	sl	1		state(loadAceB;loadBdfB)	1	0	false
		oth	7	prc	stream	dStream	false	slvdn	48				0	false
		strb	7	prc	stream	strbDStream	false	sl	1		state(loadBdfB)	1	0	false
		oth	8	prc	thd	dwrThd	false	slvdn	8				0	false
		strb	8	prc	thd	strbDwrThd	false	sl	1				0	false
		strb	0	prc	thd	strbDrdThd	false	sl	1				0	false
		oth	9	prc	imdstream	shift	false	nat		0..47			0	false
		oprt	9	prc	imdstream	scoreMin	false	slvdn	8				1	false	getCornerinfoScoreMin
		oprt	9	prc	imdstream	scoreMax	false	slvdn	8				0	false	getCornerinfoScoreMax
		oth	0	prc	imdstream	enImdbuf	false	sl	1		state(startrowC;LSB;LSD)	1	0	false
		oth	0	prc	imdstream	enImdabbuf	false	sl	1				0	false
		oth	0	prc	imdstream	weImdabbuf	false	sl	1				0	false
		oth	10	prc	imdstream	aImdabbuf_vec	false	slvdn	11					false
		oth	10	prc	imdstream	aImdabbuf	false	nat		0..2048			0	false
		oth	0	prc	imdstream	dwrImdabbuf	false	slvdn	8				0	false
		oth	0	prc	imdstream	enImdcdbuf	false	sl	1				0	false
		oth	0	prc	imdstream	weImdcdbuf	false	sl	1				0	false
		oth	11	prc	imdstream	aImdcdbuf_vec	false	slvdn	11					false
		oth	11	prc	imdstream	aImdcdbuf	false	nat		0..2048			0	false
		oth	0	prc	imdstream	dwrImdcdbuf	false	slvdn	8				0	false
		oth	0	prc	imdstream	enImdefbuf	false	sl	1				0	false
		oth	0	prc	imdstream	weImdefbuf	false	sl	1				0	false
		oth	12	prc	imdstream	aImdefbuf_vec	false	slvdn	11					false
		oth	12	prc	imdstream	aImdefbuf	false	nat		0..2048			0	false
		oth	0	prc	imdstream	dwrImdefbuf	false	slvdn	8				0	false
		oth	13	prc	imdstream	dImdstream	false	slvdn	40				0	false
		strb	13	prc	imdstream	strbDImdstream	false	sl	1		state(LSD)	1	0	false
		oth	0	mdl	flgbuf	drdFlgbuf	false	slvdn	8					false
		oth	0	mdl	imdabbuf	drdImdabbuf	false	slvdn	8					false
		oth	0	mdl	imdcdbuf	drdImdcdbuf	false	slvdn	8					false
		oth	0	mdl	imdefbuf	drdImdefbuf	false	slvdn	8					false
		hshk	14	prc	flg	reqFlgToFlgbufLock	false	sl	1				0	false
		hshk	14	prc	flgbuf	ackFlgToFlgbufLock	false	sl	1				0	false
		hshk	14	prc	flgbuf	dnyFlgToFlgbufLock	false	sl	1				0	false
		hshk	15	prc	flg	reqFlgToFlgbufSetFull	false	sl	1		state(doneB)	1	0	false
		hshk	15	prc	flgbuf	ackFlgToFlgbufSetFull	false	sl	1				0	false
		hshk	16	prc	flgbufB	reqFlgbufBToFlgbufLock	false	sl	1				0	false
		hshk	16	prc	flgbuf	ackFlgbufBToFlgbufLock	false	sl	1				0	false
		hshk	16	prc	flgbuf	dnyFlgbufBToFlgbufLock	false	sl	1				0	false
		hshk	17	prc	flgbufB	reqFlgbufBToFlgbufClear	false	sl	1				0	false
		hshk	17	prc	flgbuf	ackFlgbufBToFlgbufClear	false	sl	1				0	false
		oth	0	void		mclkn	false	sl	1					false
		oth	0	prc	corner	ceScore	false	sl	1		state(pipe)	1	0	true
		oth	0	prc	corner	abcde	false	nat	0..4				0	false
		oth	0	prc	corner	dx	false	slvdn	45				0	false		5x 9bits
		oth	0	prc	corner	dy	false	slvdn	45				0	false		5y 9bits
		oth	0	void		xsqr	false	slvdn	90					false		5x 18bits, set by modules xsqr0 to xsqr4
		oth	0	mdl	colsumXA1	colsumXA1	false	slvdn	19					false
		oth	0	mdl	colsumXA2	colsumXA2	false	slvdn	19					false
		oth	0	mdl	colsumXB	colsumXB	false	slvdn	21					false
		oth	18	prc	fwd	xsqr4p1	false	slvdn	18				0	false
		oth	18	prc	fwd	xsqr4p2	false	slvdn	18				0	false
		oth	0	mdl	colsumXC	colsumXC	false	slvdn	21					false
		oth	0	prc	copy	colsumX	false	slvdn	105				0	false		5x 21bits
		oth	0	mdl	sumXA	sumXA	false	slvdn	22					false
		oth	0	mdl	sumXB	sumXB	false	slvdn	22					false
		oth	19	prc	fwd	colsumX4p1	false	slvdn	21				0	false
		oth	19	prc	fwd	colsumX4p2	false	slvdn	21				0	false
		oth	0	mdl	sumXC	sumXC	false	slvdn	23					false
		oth	0	mdl	sumX	sumX	false	slvdn	23					false
		oth	0	void		ysqr	false	slvdn	90					false		5x 18bits, set by modules ysqr0 to ysqr4
		oth	0	mdl	colsumYA1	colsumYA1	false	slvdn	19					false
		oth	0	mdl	colsumYA2	colsumYA2	false	slvdn	19					false
		oth	0	mdl	colsumYB	colsumYB	false	slvdn	21					false
		oth	20	prc	fwd	ysqr4p1	false	slvdn	18				0	false
		oth	20	prc	fwd	ysqr4p2	false	slvdn	18				0	false
		oth	0	mdl	colsumYC	colsumYC	false	slvdn	21					false
		oth	0	prc	copy	colsumY	false	slvdn	105				0	false		5x 21bits
		oth	0	mdl	sumYA	sumYA	false	slvdn	22					false
		oth	0	mdl	sumYB	sumYB	false	slvdn	22					false
		oth	21	prc	fwd	colsumY4p1	false	slvdn	21				0	false
		oth	21	prc	fwd	colsumY4p2	false	slvdn	21				0	false
		oth	0	mdl	sumYC	sumYC	false	slvdn	23					false
		oth	0	mdl	sumY	sumY	false	slvdn	23					false
		oth	0	void		xy	false	slvdn	90					false		5x 18bits, set by modules xy0 to xy4
		oth	0	mdl	colsumXYA1	colsumXYA1	false	slvdn	19					false
		oth	0	mdl	colsumXYA2	colsumXYA2	false	slvdn	19					false
		oth	0	mdl	colsumXYB	colsumXYB	false	slvdn	21					false
		oth	22	prc	fwd	xy4p1	false	slvdn	18				0	false
		oth	22	prc	fwd	xy4p2	false	slvdn	18				0	false
		oth	0	mdl	colsumXYC	colsumXYC	false	slvdn	21					false
		oth	0	prc	copy	colsumXY	false	slvdn	105				0	false		5x 21bits
		oth	0	mdl	sumXYA	sumXYA	false	slvdn	22					false
		oth	0	mdl	sumXYB	sumXYB	false	slvdn	22					false
		oth	23	prc	fwd	colsumXY4p1	false	slvdn	21				0	false
		oth	23	prc	fwd	colsumXY4p2	false	slvdn	21				0	false
		oth	0	mdl	sumXYC	sumXYC	false	slvdn	23					false
		oth	0	mdl	sumXY	sumXY	false	slvdn	23					false
		oth	0	mdl	sumIII	sumIII	false	slvdn	24					false
		oth	0	mdl	termI	termI	false	slvdn	46					false
		oth	0	mdl	termII	termII	false	slvdn	46					false
		oth	0	mdl	termIII	termIII	false	slvdn	48					false
		oth	0	prc	factk	termIIIk	false	slvdn	44				0	false
		oth	0	mdl	diffI_II	diffI_II	false	slvdn	47					false
		oth	0	prc	fwd	diffI_IIp1	false	slvdn	47				0	false
		oth	0	mdl	r	r	false	slvdn	48					false
		oth	0	prc	exp	rexp	false	slvdn	8				0	false
		oth	0	prc	exp	rshift	false	nat		0..39			0	false
		ImeIMSignal2.end
		ImeIMProcess.sref	clkSrefWdbeMSignal	asrSrefWdbeMSignal	Falling	Syncrst	Extip	Comment
		flg	mclk	reset	false	state(init) or !streamrun	false	flagging operation, also managing flgbuf
			ImeIMFsm.
			
				ImeICFsmstate.iref
				1
				ImeICFsmstate.end
				ImeIMFsmstate.irefRefWdbeCFsmstate	sref	Extip	Comment
				0	init	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					init	!streamrun	off
					trylock	else		!thdNotCorner	corner
					waitTrig	else		else	thd
					ImeIAMFsmstateStep.end
				0	waitTrig	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					inv	reqInvTriggerThd
					ImeIAMFsmstateStep.end
				0	inv	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					trylock	!reqInvTriggerThd		!thdSecondNotFirst	trigFirst
					waitFrame	!reqInvTriggerThd		else
					ImeIAMFsmstateStep.end
				0	trylock	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					waitFrame	ackFlgToFlgbufLock	ack
					init	dnyFlgToFlgbufLock	dny
					ImeIAMFsmstateStep.end
				0	waitFrame	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					ready	camacqGetGrrdinfoTixVGrrdbufstate=tixVCamacqGrrdbufstateEmpty	tkst	!thdNotCorner	corner
					ldthd	camacqGetGrrdinfoTixVGrrdbufstate=tixVCamacqGrrdbufstateEmpty	tkst	else	thd
					ImeIAMFsmstateStep.end
				0	ready	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					stcorner	strbDCorner	prepStcorner
					ldthd	strbDrdThd	prepLdthd
					stthd	strbDwrThd	prepStthd
					ImeIAMFsmstateStep.end
				0	ldthd	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					ready		ldthd
					ImeIAMFsmstateStep.end
				0	stcorner	true
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					doneB	aFlgbuf=97664	cmt
					ready	else
					ImeIAMFsmstateStep.end
				0	stthd	true
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					doneA	arowFlgbufWr=768	lastRow	acolFlgbufWr=128	lastCol	a0FlgbufWr=98304
					ready	arowFlgbufWr=768	lastRow	acolFlgbufWr=128	lastCol	else
					ready	arowFlgbufWr=768	lastRow	else
					ready	else
					ImeIAMFsmstateStep.end
				1	doneA	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					doneB	!thdDeltaNotAbs or thdSecondNotFirst	final
					waitTrig	else	second
					ImeIAMFsmstateStep.end
				1	doneB	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					doneC	ackFlgToFlgbufSetFull
					ImeIAMFsmstateStep.end
				1	doneC	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					init	!flgbufFull
					ImeIAMFsmstateStep.end
				ImeIMFsmstate.end
			ImeIMFsm.end
		flgbuf	mclk	reset	false	state(init) or !streamrun	false	flgbuf mutex management
			ImeIAVKeylistKey.sref	Title	Comment
			lock_t	(lockIdle, lockBufB, lockFlg)	lockIdle
			ImeIAVKeylistKey.end
			ImeIMFsm.
			
				ImeIMFsmstate.irefRefWdbeCFsmstate	sref	Extip	Comment
				0	init	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					init	!streamrun
					ready	else
					ImeIAMFsmstateStep.end
				0	ready	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					ack	reqFlgToFlgbufLock	flgLock
					ack	reqFlgToFlgbufSetFull	flgFull
					ack	reqFlgbufBToFlgbufLock	flgbufBLock
					ack	reqFlgbufBToFlgbufClear	flgbufBClear
					ImeIAMFsmstateStep.end
				0	ack	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					ready	(ackFlgToFlgbufLock or dnyFlgToFlgbufLock) and !reqFlgToFlgbufLock	flgLock
					ready	ackFlgToFlgbufSetFull and !reqFlgToFlgbufSetFull	flgFull
					ready	(ackFlgbufBToFlgbufLock or dnyFlgbufBToFlgbufLock) and !reqFlgbufBToFlgbufLock	flgbufBLock
					ready	ackFlgbufBToFlgbufClear and !reqFlgbufBToFlgbufClear	flgbufBClear
					ImeIAMFsmstateStep.end
				ImeIMFsmstate.end
			ImeIMFsm.end
		flgbufB	mclk	reset	false	state(init) or !streamrun	false	flgbuf B/hostif-facing operation
			ImeIMFsm.
			
				ImeICFsmstate.iref
				1
				ImeICFsmstate.end
				ImeIMFsmstate.irefRefWdbeCFsmstate	sref	Extip	Comment
				0	init	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					init	!streamrun
					ready	else
					ImeIAMFsmstateStep.end
				0	ready	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					trylock	tixVFlgbufstate=tixVFlgbufstateFull and reqFlgbufToHostif	prep
					ImeIAMFsmstateStep.end
				0	trylock	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					readA	ackFlgbufBToFlgbufLock	ack
					init	dnyFlgbufBToFlgbufLock
					ImeIAMFsmstateStep.end
				1	readA	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					done	flgbufLock=lockBufB		dneFlgbufToHostif	dne
					done	flgbufLock=lockBufB		!reqFlgbufToHostif	cnc
					readB	flgbufLock=lockBufB		!strbDFlgbufToHostif	step
					ImeIAMFsmstateStep.end
				1	readB	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					done	flgbufLock=lockBufB		!reqFlgbufToHostif	cnc
					readA	flgbufLock=lockBufB		strbDFlgbufToHostif	inc
					ImeIAMFsmstateStep.end
				0	done	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					init	ackFlgbufBToFlgbufLock or ackFlgbufBToFlgbufClear
					ImeIAMFsmstateStep.end
				ImeIMFsmstate.end
			ImeIMFsm.end
		op	mclk	reset	false	state(init) or (state(!inv) and state(!invSet) and (reqInvSet or reqInvSetCorner or reqInvSetThd))		main operation
			ImeIMFsm.
			
				ImeIMFsmstate.irefRefWdbeCFsmstate	sref	Extip	Comment
				0	init	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					invSet	reqInvSet	invSet
					inv	reqInvSetCorner	invSetCorner
					inv	reqInvSetThd	invSetThd
					run	streamrun
					init	else	syncrst
					ImeIAMFsmstateStep.end
				0	invSet	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					inv		invSet
					ImeIAMFsmstateStep.end
				0	inv	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					init	(!reqInvSet and ackInvSet_sig) or (!reqInvSetCorner and ackInvSetCorner_sig) or (!reqInvSetThd and ackInvSetThd_sig)	inv
					ImeIAMFsmstateStep.end
				0	run	false
				ImeIMFsmstate.end
			ImeIMFsm.end
		stream	mclk	reset	false	state(init) or !streamrun	false	streaming operation, also handling grrd{ab/cd/ef}bufFromCamacq
			ImeIMFsm.
			
				ImeICFsmstate.iref
				1
				2
				3
				4
				ImeICFsmstate.end
				ImeIMFsmstate.irefRefWdbeCFsmstate	sref	Extip	Comment
				0	init	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					init	!streamrun
					waitFrame	else
					ImeIAMFsmstateStep.end
				0	waitFrame	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					skipA	camacqGetGrrdinfoTixVGrrdbufstate=tixVCamacqGrrdbufstateEmpty	waitFrame
					ImeIAMFsmstateStep.end
				1	skipA	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					skipB	camacqGetGrrdinfoTixVGrrdbufstate=tixVCamacqGrrdbufstateStream
					ImeIAMFsmstateStep.end
				1	skipB	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					startrowA	camacqGetGrrdinfoTixVGrrdbufstate=tixVCamacqGrrdbufstatePause	inc	row=5
					skipA	camacqGetGrrdinfoTixVGrrdbufstate=tixVCamacqGrrdbufstatePause	inc	else
					ImeIAMFsmstateStep.end
				2	startrowA	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					startrowB	camacqGetGrrdinfoTixVGrrdbufstate=tixVCamacqGrrdbufstateStream	startrowA
					ImeIAMFsmstateStep.end
				2	startrowB	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					loadAceA	ackGrrdbuf	startrowB
					ImeIAMFsmstateStep.end
				3	loadAceA	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					loadAceB		loadAceA
					ImeIAMFsmstateStep.end
				3	loadAceB	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					loadBdfA
					ImeIAMFsmstateStep.end
				4	loadBdfA	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					loadBdfB		loadBdfA
					ImeIAMFsmstateStep.end
				4	loadBdfB	true
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					stoprow	col=1024	lastCol
					loadAceA	else
					ImeIAMFsmstateStep.end
				0	stoprow	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					startrowA	camacqGetGrrdinfoTixVGrrdbufstate=tixVCamacqGrrdbufstatePause	incRow
					init	camacqGetGrrdinfoTixVGrrdbufstate=tixVCamacqGrrdbufstateEndfr
					ImeIAMFsmstateStep.end
				ImeIMFsmstate.end
			ImeIMFsm.end
		thd	mclk	reset	false	state(init) or !thdrun	false	threshold detection
			ImeIMFsm.
			
				ImeICFsmstate.iref
				1
				ImeICFsmstate.end
				ImeIMFsmstate.irefRefWdbeCFsmstate	sref	Extip	Comment
				0	init	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					init	!thdrun	stop
					LASA	else	start
					ImeIAMFsmstateStep.end
				1	LASA	false	complex conditional jump to LASB
				1	LASB	true
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					done	blk=127 and row=1 and byteS=6
					LASA	else
					ImeIAMFsmstateStep.end
				0	done	false
				ImeIMFsmstate.end
			ImeIMFsm.end
		copy	mclk	reset	false	state(init) or !cornerrun	false	Harris score pipeline copy operation
			ImeIMFsm.
			
				ImeIMFsmstate.irefRefWdbeCFsmstate	sref	Extip	Comment
				0	init	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					init	!cornerrun
					run	else
					ImeIAMFsmstateStep.end
				0	run	false
				ImeIMFsmstate.end
			ImeIMFsm.end
		corner	mclk	reset	false	state(init) or !cornerrun	false	Harris corner detection and score pipeline operation
			ImeIMFsm.
			
				ImeIMFsmstate.irefRefWdbeCFsmstate	sref	Extip	Comment
				0	init	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					init	!cornerrun
					diff	else
					ImeIAMFsmstateStep.end
				0	diff	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					pipe	strbDStream	diff
					ImeIAMFsmstateStep.end
				0	pipe	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					step
					ImeIAMFsmstateStep.end
				0	step	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					diff		step
					ImeIAMFsmstateStep.end
				ImeIMFsmstate.end
			ImeIMFsm.end
		exp	mclk	reset	false	state(init) or !cornerrun	false	Harris score result exponent/mantissa transform
			ImeIMFsm.
			
				ImeIMFsmstate.irefRefWdbeCFsmstate	sref	Extip	Comment
				0	init	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					init	!cornerrun
					run	else
					ImeIAMFsmstateStep.end
				0	run	false
				ImeIMFsmstate.end
			ImeIMFsm.end
		factk	mclk	reset	false	state(init) or !cornerrun	false	Harris score third term 5/128 multiplier
			ImeIMFsm.
			
				ImeIMFsmstate.irefRefWdbeCFsmstate	sref	Extip	Comment
				0	init	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					init	!cornerrun
					run	else
					ImeIAMFsmstateStep.end
				0	run	false
				ImeIMFsmstate.end
			ImeIMFsm.end
		fwd	mclk	reset	false	state(init) or !cornerrun	false	Harris score pipeline forward operation
			ImeIMFsm.
			
				ImeIMFsmstate.irefRefWdbeCFsmstate	sref	Extip	Comment
				0	init	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					init	!cornerrun
					run	else
					ImeIAMFsmstateStep.end
				0	run	false
				ImeIMFsmstate.end
			ImeIMFsm.end
		imdstream	mclk	reset	false	state(init) or !cornerrun	false	intermediate result streaming operation, also handling imd{ab/cd/ef}buf
			ImeIMFsm.
			
				ImeICFsmstate.iref
				1
				2
				3
				4
				ImeICFsmstate.end
				ImeIMFsmstate.irefRefWdbeCFsmstate	sref	Extip	Comment
				0	init	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					init	!cornerrun
					waitFrame	else
					ImeIAMFsmstateStep.end
				0	waitFrame	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					skipA	camacqGetGrrdinfoTixVGrrdbufstate=tixVCamacqGrrdbufstateEmpty	waitFrame
					ImeIAMFsmstateStep.end
				1	skipA	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					skipB	camacqGetGrrdinfoTixVGrrdbufstate=tixVCamacqGrrdbufstateStream
					ImeIAMFsmstateStep.end
				1	skipB	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					startrowA	camacqGetGrrdinfoTixVGrrdbufstate=tixVCamacqGrrdbufstatePause	inc	row=5
					skipA	camacqGetGrrdinfoTixVGrrdbufstate=tixVCamacqGrrdbufstatePause	inc	else
					ImeIAMFsmstateStep.end
				2	startrowA	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					startrowB	camacqGetGrrdinfoTixVGrrdbufstate=tixVCamacqGrrdbufstateStream	startrowA
					ImeIAMFsmstateStep.end
				2	startrowB	true
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					startrowC	i=imax	startrowB
					ImeIAMFsmstateStep.end
				2	startrowC	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					LSA
					ImeIAMFsmstateStep.end
				3	LSA	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					LSB		LSA
					ImeIAMFsmstateStep.end
				3	LSB	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					LSC
					ImeIAMFsmstateStep.end
				4	LSC	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					LSD		LSC
					ImeIAMFsmstateStep.end
				4	LSD	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					stoprow	col=1024
					LSA	else
					ImeIAMFsmstateStep.end
				0	stoprow	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					startrowA	camacqGetGrrdinfoTixVGrrdbufstate=tixVCamacqGrrdbufstatePause	incRow
					init	camacqGetGrrdinfoTixVGrrdbufstate=tixVCamacqGrrdbufstateEndfr	updScore
					ImeIAMFsmstateStep.end
				ImeIMFsmstate.end
			ImeIMFsm.end
		maxsel	mclk	reset	false	state(init) or !cornerrun	false	maximum selection
			ImeIMFsm.
			
				ImeIMFsmstate.irefRefWdbeCFsmstate	sref	Extip	Comment
				0	init	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					init	!cornerrun
					imd	else
					ImeIAMFsmstateStep.end
				0	imd	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					max	strbDImdstream	maxEl
					ImeIAMFsmstateStep.end
				0	max	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					act		max
					ImeIAMFsmstateStep.end
				0	act	true
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					store	i=8	toStore
					imd	else
					ImeIAMFsmstateStep.end
				0	store	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					imd
					ImeIAMFsmstateStep.end
				ImeIMFsmstate.end
			ImeIMFsm.end
		ImeIMProcess.end
	iccl_ip_AXI;top;featdet	xsqr0
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		reset								reset
		retrupd	0		mclk								mclk
		retrupd	0		ce								ceScore
		retrupd	0		a								dx[44..36]
		retrupd	0		b								dx[44..36]
		retrupd	0		p								xsqr[89..72]
		ImeIMPort.end
	iccl_ip_AXI;top;featdet	xsqr1
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		reset								reset
		retrupd	0		mclk								mclk
		retrupd	0		ce								ceScore
		retrupd	0		a								dx[35..27]
		retrupd	0		b								dx[35..27]
		retrupd	0		p								xsqr[71..54]
		ImeIMPort.end
	iccl_ip_AXI;top;featdet	xsqr2
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		reset								reset
		retrupd	0		mclk								mclk
		retrupd	0		ce								ceScore
		retrupd	0		a								dx[26..18]
		retrupd	0		b								dx[26..18]
		retrupd	0		p								xsqr[53..36]
		ImeIMPort.end
	iccl_ip_AXI;top;featdet	xsqr3
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		reset								reset
		retrupd	0		mclk								mclk
		retrupd	0		ce								ceScore
		retrupd	0		a								dx[17..9]
		retrupd	0		b								dx[17..9]
		retrupd	0		p								xsqr[35..18]
		ImeIMPort.end
	iccl_ip_AXI;top;featdet	xsqr4
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		reset								reset
		retrupd	0		mclk								mclk
		retrupd	0		ce								ceScore
		retrupd	0		a								dx[8..0]
		retrupd	0		b								dx[8..0]
		retrupd	0		p								xsqr[17..0]
		ImeIMPort.end
	iccl_ip_AXI;top;featdet	colsumXA1
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		reset								reset
		retrupd	0		mclk								mclk
		retrupd	0		ce								ceScore
		retrupd	0		a								xsqr[89..72]
		retrupd	0		b								xsqr[71..54]
		retrupd	0		s								colsumXA1
		ImeIMPort.end
	iccl_ip_AXI;top;featdet	colsumXA2
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		reset								reset
		retrupd	0		mclk								mclk
		retrupd	0		ce								ceScore
		retrupd	0		a								xsqr[53..36]
		retrupd	0		b								xsqr[35..18]
		retrupd	0		s								colsumXA2
		ImeIMPort.end
	iccl_ip_AXI;top;featdet	colsumXB
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		reset								reset
		retrupd	0		mclk								mclk
		retrupd	0		ce								ceScore
		retrupd	0		a								colsumXA1
		retrupd	0		b								colsumXA2
		retrupd	0		s								colsumXB
		ImeIMPort.end
	iccl_ip_AXI;top;featdet	colsumXC
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		reset								reset
		retrupd	0		mclk								mclk
		retrupd	0		ce								ceScore
		retrupd	0		a								colsumXB
		retrupd	0		b								xsqr4p2
		retrupd	0		s								colsumXC
		ImeIMPort.end
	iccl_ip_AXI;top;featdet	sumXA
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		reset								reset
		retrupd	0		mclk								mclk
		retrupd	0		ce								ceScore
		retrupd	0		a								colsumX[104..84]
		retrupd	0		b								colsumX[83..63]
		retrupd	0		s								sumXA
		ImeIMPort.end
	iccl_ip_AXI;top;featdet	sumXB
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		reset								reset
		retrupd	0		mclk								mclk
		retrupd	0		ce								ceScore
		retrupd	0		a								colsumX[62..42]
		retrupd	0		b								colsumX[41..21]
		retrupd	0		s								sumXB
		ImeIMPort.end
	iccl_ip_AXI;top;featdet	sumXC
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		reset								reset
		retrupd	0		mclk								mclk
		retrupd	0		ce								ceScore
		retrupd	0		a								sumXA
		retrupd	0		b								sumXB
		retrupd	0		s								sumXC
		ImeIMPort.end
	iccl_ip_AXI;top;featdet	sumX
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		reset								reset
		retrupd	0		mclk								mclk
		retrupd	0		ce								ceScore
		retrupd	0		a								sumXC
		retrupd	0		b								colsumX4p2
		retrupd	0		s								sumX
		ImeIMPort.end
	iccl_ip_AXI;top;featdet	ysqr0
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		reset								reset
		retrupd	0		mclk								mclk
		retrupd	0		ce								ceScore
		retrupd	0		a								dy[44..36]
		retrupd	0		b								dy[44..36]
		retrupd	0		p								ysqr[89..72]
		ImeIMPort.end
	iccl_ip_AXI;top;featdet	ysqr1
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		reset								reset
		retrupd	0		mclk								mclk
		retrupd	0		ce								ceScore
		retrupd	0		a								dy[35..27]
		retrupd	0		b								dy[35..27]
		retrupd	0		p								ysqr[71..54]
		ImeIMPort.end
	iccl_ip_AXI;top;featdet	ysqr2
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		reset								reset
		retrupd	0		mclk								mclk
		retrupd	0		ce								ceScore
		retrupd	0		a								dy[26..18]
		retrupd	0		b								dy[26..18]
		retrupd	0		p								ysqr[53..36]
		ImeIMPort.end
	iccl_ip_AXI;top;featdet	ysqr3
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		reset								reset
		retrupd	0		mclk								mclk
		retrupd	0		ce								ceScore
		retrupd	0		a								dy[17..9]
		retrupd	0		b								dy[17..9]
		retrupd	0		p								ysqr[35..18]
		ImeIMPort.end
	iccl_ip_AXI;top;featdet	ysqr4
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		reset								reset
		retrupd	0		mclk								mclk
		retrupd	0		ce								ceScore
		retrupd	0		a								dy[8..0]
		retrupd	0		b								dy[8..0]
		retrupd	0		p								ysqr[17..0]
		ImeIMPort.end
	iccl_ip_AXI;top;featdet	colsumYA1
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		reset								reset
		retrupd	0		mclk								mclk
		retrupd	0		ce								ceScore
		retrupd	0		a								ysqr[89..72]
		retrupd	0		b								ysqr[71..54]
		retrupd	0		s								colsumYA1
		ImeIMPort.end
	iccl_ip_AXI;top;featdet	colsumYA2
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		reset								reset
		retrupd	0		mclk								mclk
		retrupd	0		ce								ceScore
		retrupd	0		a								ysqr[53..36]
		retrupd	0		b								ysqr[35..18]
		retrupd	0		s								colsumYA2
		ImeIMPort.end
	iccl_ip_AXI;top;featdet	colsumYB
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		reset								reset
		retrupd	0		mclk								mclk
		retrupd	0		ce								ceScore
		retrupd	0		a								colsumYA1
		retrupd	0		b								colsumYA2
		retrupd	0		s								colsumYB
		ImeIMPort.end
	iccl_ip_AXI;top;featdet	colsumYC
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		reset								reset
		retrupd	0		mclk								mclk
		retrupd	0		ce								ceScore
		retrupd	0		a								colsumYB
		retrupd	0		b								ysqr4p2
		retrupd	0		s								colsumYC
		ImeIMPort.end
	iccl_ip_AXI;top;featdet	sumYA
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		reset								reset
		retrupd	0		mclk								mclk
		retrupd	0		ce								ceScore
		retrupd	0		a								colsumY[104..84]
		retrupd	0		b								colsumY[83..63]
		retrupd	0		s								sumYA
		ImeIMPort.end
	iccl_ip_AXI;top;featdet	sumYB
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		reset								reset
		retrupd	0		mclk								mclk
		retrupd	0		ce								ceScore
		retrupd	0		a								colsumY[62..42]
		retrupd	0		b								colsumY[41..21]
		retrupd	0		s								sumYB
		ImeIMPort.end
	iccl_ip_AXI;top;featdet	sumYC
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		reset								reset
		retrupd	0		mclk								mclk
		retrupd	0		ce								ceScore
		retrupd	0		a								sumYA
		retrupd	0		b								sumYB
		retrupd	0		s								sumYC
		ImeIMPort.end
	iccl_ip_AXI;top;featdet	sumY
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		reset								reset
		retrupd	0		mclk								mclk
		retrupd	0		ce								ceScore
		retrupd	0		a								sumYC
		retrupd	0		b								colsumY4p2
		retrupd	0		s								sumY
		ImeIMPort.end
	iccl_ip_AXI;top;featdet	xy0
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		reset								reset
		retrupd	0		mclk								mclk
		retrupd	0		ce								ceScore
		retrupd	0		a								dx[44..36]
		retrupd	0		b								dy[44..36]
		retrupd	0		p								xy[89..72]
		ImeIMPort.end
	iccl_ip_AXI;top;featdet	xy1
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		reset								reset
		retrupd	0		mclk								mclk
		retrupd	0		ce								ceScore
		retrupd	0		a								dx[35..27]
		retrupd	0		b								dy[35..27]
		retrupd	0		p								xy[71..54]
		ImeIMPort.end
	iccl_ip_AXI;top;featdet	xy2
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		reset								reset
		retrupd	0		mclk								mclk
		retrupd	0		ce								ceScore
		retrupd	0		a								dx[26..18]
		retrupd	0		b								dy[26..18]
		retrupd	0		p								xy[53..36]
		ImeIMPort.end
	iccl_ip_AXI;top;featdet	xy3
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		reset								reset
		retrupd	0		mclk								mclk
		retrupd	0		ce								ceScore
		retrupd	0		a								dx[17..9]
		retrupd	0		b								dy[17..9]
		retrupd	0		p								xy[35..18]
		ImeIMPort.end
	iccl_ip_AXI;top;featdet	xy4
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		reset								reset
		retrupd	0		mclk								mclk
		retrupd	0		ce								ceScore
		retrupd	0		a								dx[8..0]
		retrupd	0		b								dy[8..0]
		retrupd	0		p								xy[17..0]
		ImeIMPort.end
	iccl_ip_AXI;top;featdet	colsumXYA1
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		reset								reset
		retrupd	0		mclk								mclk
		retrupd	0		ce								ceScore
		retrupd	0		a								xy[89..72]
		retrupd	0		b								xy[71..54]
		retrupd	0		s								colsumXYA1
		ImeIMPort.end
	iccl_ip_AXI;top;featdet	colsumXYA2
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		reset								reset
		retrupd	0		mclk								mclk
		retrupd	0		ce								ceScore
		retrupd	0		a								xy[53..36]
		retrupd	0		b								xy[35..18]
		retrupd	0		s								colsumXYA2
		ImeIMPort.end
	iccl_ip_AXI;top;featdet	colsumXYB
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		reset								reset
		retrupd	0		mclk								mclk
		retrupd	0		ce								ceScore
		retrupd	0		a								colsumXYA1
		retrupd	0		b								colsumXYA2
		retrupd	0		s								colsumXYB
		ImeIMPort.end
	iccl_ip_AXI;top;featdet	colsumXYC
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		reset								reset
		retrupd	0		mclk								mclk
		retrupd	0		ce								ceScore
		retrupd	0		a								colsumXYB
		retrupd	0		b								xy4p2
		retrupd	0		s								colsumXYC
		ImeIMPort.end
	iccl_ip_AXI;top;featdet	sumXYA
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		reset								reset
		retrupd	0		mclk								mclk
		retrupd	0		ce								ceScore
		retrupd	0		a								colsumXY[104..84]
		retrupd	0		b								colsumXY[83..63]
		retrupd	0		s								sumXYA
		ImeIMPort.end
	iccl_ip_AXI;top;featdet	sumXYB
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		reset								reset
		retrupd	0		mclk								mclk
		retrupd	0		ce								ceScore
		retrupd	0		a								colsumXY[62..42]
		retrupd	0		b								colsumXY[41..21]
		retrupd	0		s								sumXYB
		ImeIMPort.end
	iccl_ip_AXI;top;featdet	sumXYC
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		reset								reset
		retrupd	0		mclk								mclk
		retrupd	0		ce								ceScore
		retrupd	0		a								sumXYA
		retrupd	0		b								sumXYB
		retrupd	0		s								sumXYC
		ImeIMPort.end
	iccl_ip_AXI;top;featdet	sumXY
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		reset								reset
		retrupd	0		mclk								mclk
		retrupd	0		ce								ceScore
		retrupd	0		a								sumXYC
		retrupd	0		b								colsumXY4p2
		retrupd	0		s								sumXY
		ImeIMPort.end
	iccl_ip_AXI;top;featdet	sumIII
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		reset								reset
		retrupd	0		mclk								mclk
		retrupd	0		ce								ceScore
		retrupd	0		a								sumX
		retrupd	0		b								sumY
		retrupd	0		s								sumIII
		ImeIMPort.end
	iccl_ip_AXI;top;featdet	termIII
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		reset								reset
		retrupd	0		mclk								mclk
		retrupd	0		ce								ceScore
		retrupd	0		a								sumIII
		retrupd	0		b								sumIII
		retrupd	0		p								termIII
		ImeIMPort.end
	iccl_ip_AXI;top;featdet	termII
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		reset								reset
		retrupd	0		mclk								mclk
		retrupd	0		ce								ceScore
		retrupd	0		a								sumXY
		retrupd	0		b								sumXY
		retrupd	0		p								termII
		ImeIMPort.end
	iccl_ip_AXI;top;featdet	termI
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		reset								reset
		retrupd	0		mclk								mclk
		retrupd	0		ce								ceScore
		retrupd	0		a								sumX
		retrupd	0		b								sumY
		retrupd	0		p								termI
		ImeIMPort.end
	iccl_ip_AXI;top;featdet	diffI_II
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		reset								reset
		retrupd	0		mclk								mclk
		retrupd	0		ce								ceScore
		retrupd	0		a								termI
		retrupd	0		b								termII
		retrupd	0		d								diffI_II
		ImeIMPort.end
	iccl_ip_AXI;top;featdet	r
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		reset								reset
		retrupd	0		mclk								mclk
		retrupd	0		ce								ceScore
		retrupd	0		a								diffI_IIp1
		retrupd	0		b								termIIIk
		retrupd	0		d								r
		ImeIMPort.end
	iccl_ip_AXI;top;featdet	flgbuf
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		CLK								mclk
		retrupd	0		A_BLK_EN								enFlgbuf
		retrupd	0		A_WEN								weFlgbuf
		retrupd	0		A_ADDR								aFlgbuf_vec
		retrupd	0		A_DOUT								drdFlgbuf
		retrupd	0		A_DIN								dwrFlgbuf
		retrupd	0		B_BLK_EN								enFlgbufB
		retrupd	0		B_ADDR								aFlgbufB_vec
		retrupd	0		B_DOUT							dFlgbufToHostif
		ImeIMPort.end
	iccl_ip_AXI;top;featdet	imdabbuf
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		CLK								mclk
		retrupd	0		A_BLK_EN								enImdabbuf
		retrupd	0		A_WEN								weImdabbuf
		retrupd	0		A_ADDR								aImdabbuf_vec
		retrupd	0		A_DOUT								drdImdabbuf
		retrupd	0		A_DIN								dwrImdabbuf
		ImeIMPort.end
	iccl_ip_AXI;top;featdet	imdcdbuf
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		CLK								mclk
		retrupd	0		A_BLK_EN								enImdcdbuf
		retrupd	0		A_WEN								weImdcdbuf
		retrupd	0		A_ADDR								aImdcdbuf_vec
		retrupd	0		A_DOUT								drdImdcdbuf
		retrupd	0		A_DIN								dwrImdcdbuf
		ImeIMPort.end
	iccl_ip_AXI;top;featdet	imdefbuf
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		CLK								mclk
		retrupd	0		A_BLK_EN								enImdefbuf
		retrupd	0		A_WEN								weImdefbuf
		retrupd	0		A_ADDR								aImdefbuf_vec
		retrupd	0		A_DOUT								drdImdefbuf
		retrupd	0		A_DIN								dwrImdefbuf
		ImeIMPort.end
	iccl_ip_AXI;top	laser
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		ins	0	reset	reset	in	sl	1					reset
		ins	0	clk	mclk	in	sl	1					mclk
		ImeIMPort.end
		ImeICSignal2.iref
		1
		ImeICSignal2.end
		ImeIMSignal2.srefIxVBasetype	irefRefWdbeCSignal	srefMgeIxVTbl	srefMgeUref	sref	Const	srefWdbeKHdltype	Width	Minmax	Comb	Onval	Offval	Defon	srefDrvRefWdbeMPort	Comment
		oprt	0	prc	op	ackInvSet	false	sl	1					false	ackInvSet
		oth	0	prc	op	spilen	false	slvdn	17				0	false
		oth	0	prc	op	spisend	false	slvdn	8				0	false
		hshk	1	prc	op	reqSpi	false	sl	1				0	false
		hshk	1	mdl	spi	dneSpi	false	sl	1				0	false
		strb	0	mdl	spi	strbSpisend	false	sl	1				0	false
		ImeIMSignal2.end
		ImeIMProcess.sref	clkSrefWdbeMSignal	asrSrefWdbeMSignal	Falling	Syncrst	Extip	Comment
		op	mclk	reset	false	state(init)	false	main operation
			ImeIAVKeylistKey.sref	Title	Comment
			txbuf_t	array(0 to sizeTxbuf-1) of std_logic_vector(7 downto 0)
			ImeIAVKeylistKey.end
			ImeICVariable2.iref
			1
			2
			ImeICVariable2.end
			ImeIMVariable2.irefRefWdbeCVariable	sref	Const	Falling	srefWdbeKHdltype	Width	Minmax	Onval	Offval	Defon	Comment
			1	sizeTxbuf	true	false	nat				2	false
			1	txbuf	false	false	txbuf_t				(x"00",x"00")	false
			0	bytecnt	false	false	nat		0..sizeTxbuf		0	false
			2	imax	true	false	nat				fMclk*8/1000	false	8us
			2	i	false	false	nat		0..imax		0	false
			0	rNotL	false	false	_bool				false	false
			ImeIMVariable2.end
			ImeIMFsm.
			
				ImeICFsmstate.iref
				1
				2
				ImeICFsmstate.end
				ImeIMFsmstate.irefRefWdbeCFsmstate	sref	Extip	Comment
				0	init	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					prepC
					ImeIAMFsmstateStep.end
				1	prepA	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					wait	dneSpi	done
					prepB	!strbSpisend
					ImeIAMFsmstateStep.end
				1	prepB	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					prepC		prepB
					ImeIAMFsmstateStep.end
				1	prepC	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					prepD		prepC
					ImeIAMFsmstateStep.end
				1	prepD	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					prepA	strbSpisend
					ImeIAMFsmstateStep.end
				0	wait	true
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					idle	i=imax	done
					ImeIAMFsmstateStep.end
				0	idle	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					setC	reqInvSet	prepL
					ImeIAMFsmstateStep.end
				2	setA	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					setC	dneSpi	spioff	not rNotL	prepR
					inv	dneSpi	spioff	else
					setB	!strbSpisend
					ImeIAMFsmstateStep.end
				2	setB	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					setC		setB
					ImeIAMFsmstateStep.end
				2	setC	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					setD		setC
					ImeIAMFsmstateStep.end
				2	setD	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					setA	strbSpisend
					ImeIAMFsmstateStep.end
				0	inv	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					idle	!reqInvSet
					ImeIAMFsmstateStep.end
				ImeIMFsmstate.end
			ImeIMFsm.end
		ImeIMProcess.end
	iccl_ip_AXI;top;laser	spi
		ImeIMGeneric.srefIxWdbeVIop	irefRefWdbeCGeneric	sref	srefWdbeKHdltype	Width	Minmax	Defval	srcSrefWdbeMGeneric	Comment
		retrupd	0	fMclk					fMclk
		ImeIMGeneric.end
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		reset								reset
		retrupd	0		mclk								mclk
		retrupd	0		req								reqSpi
		retrupd	0		dne								dneSpi
		retrupd	0		len								spilen
		retrupd	0		send								spisend
		retrupd	0		strbSend								strbSpisend
		retrupd	0		nss						cs
		retrupd	0		sclk						sclk
		retrupd	0		mosi						mosi
		retrupd	0		miso					0
		ImeIMPort.end
	iccl_ip_AXI;top	pwmonif
		ImeIMGeneric.srefIxWdbeVIop	irefRefWdbeCGeneric	sref	srefWdbeKHdltype	Width	Minmax	Defval	srcSrefWdbeMGeneric	Comment
		retrupd	0	fMclk					fMclk
		retrupd	0	fSclk				9600
		retrupd	0	toRx				100
		ImeIMGeneric.end
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		reset								reset
		retrupd	0		mclk								mclk
		retrupd	0		tkclk								tkclk
		retrupd	0		rxd						pmnd_rxd
		retrupd	0		txd						pmnd_txd
		ImeIMPort.end
	iccl_ip_AXI;top	state
		ImeICPort.iref
		1
		ImeICPort.end
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		ins	0	reset	reset	in	sl	1					reset
		ins	0	clk	tkclk	in	sl	1					tkclk
		ins	1	rtetop	commok	in	sl	1					commok
		ins	1	rtetop	camrng	in	sl	1					camrng
		ins	0	rtetop	rgb	out	slvdn	24					rgb4
		ImeIMPort.end
		ImeIMProcess.sref	clkSrefWdbeMSignal	asrSrefWdbeMSignal	Falling	Syncrst	Extip	Comment
		led	tkclk	reset	false		false	LED control
			ImeIMFsm.
			
				ImeIMFsmstate.irefRefWdbeCFsmstate	sref	Extip	Comment
				0	on	true
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					off	i=1000	prepOff
					ImeIAMFsmstateStep.end
				0	off	true
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					on	i=4000	prepOn
					ImeIAMFsmstateStep.end
				ImeIMFsmstate.end
			ImeIMFsm.end
		ImeIMProcess.end
	iccl_ip_AXI;top	step
		ImeIMGeneric.srefIxWdbeVIop	irefRefWdbeCGeneric	sref	srefWdbeKHdltype	Width	Minmax	Defval	srcSrefWdbeMGeneric	Comment
		ins	0	fMclk	nat		1..1000000	50000	fMclk	in kHz
		ImeIMGeneric.end
		ImeICPort.iref
		1
		ImeICPort.end
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		ins	0	reset	reset	in	sl	1					reset
		ins	0	clk	mclk	in	sl	1					mclk
		ins	0	clk	tkclk	in	sl	1					tkclk
		ins	1	rtepin	nslp	out	sl	1			nslp
		ins	1	rtepin	m0	inout	sl	1			m0
		ins	1	rtepin	dir	out	sl	1			dir
		ins	1	rtepin	step0	out	sl	1			step0
		ins	1	rtepin	nflt	in	sl	1			nflt
		ImeIMPort.end
		ImeICSignal2.iref
		1
		2
		3
		ImeICSignal2.end
		ImeIMSignal2.srefIxVBasetype	irefRefWdbeCSignal	srefMgeIxVTbl	srefMgeUref	sref	Const	srefWdbeKHdltype	Width	Minmax	Comb	Onval	Offval	Defon	srefDrvRefWdbeMPort	Comment
		oprt	1	prc	op	angle	false	nat		0..4095			0	false	getInfoAngle
		oth	1	prc	op	angle_vec	false	slvdn	16					false
		oprt	0	prc	op	ackInvMoveto	false	sl	1				0	false	ackInvMoveto
		oprt	0	prc	op	ackInvSet	false	sl	1				0	false	ackInvSet
		oprt	0	prc	op	ackInvZero	false	sl	1				0	false	ackInvZero
		oth	2	prc	op	rng	false	sl	1				0	false
		oprt	2	prc	op	nslp	false	sl	1		!rng	1	0	false	nslp
		oprt	0	prc	op	ccwNotCw	false	sl	1				0	false	dir
		oprt	0	prc	op	step0	false	sl	1				0	false	step0
		oth	3	prc	op	m0_sig	false	sl	1				0	false
		oth	3	prc	op	m0z	false	sl	1				0	false
		ImeIMSignal2.end
		ImeIMProcess.sref	clkSrefWdbeMSignal	asrSrefWdbeMSignal	Falling	Syncrst	Extip	Comment
		op	mclk	reset	false	state(init) or (state(!inv) and (reqInvMoveto or reqInvSet or reqInvZero))	false	main operation
			ImeICVariable2.iref
			1
			2
			ImeICVariable2.end
			ImeIMVariable2.irefRefWdbeCVariable	sref	Const	Falling	srefWdbeKHdltype	Width	Minmax	Onval	Offval	Defon	Comment
			1	target	true	false	nat		0..1000		0	false
			1	dAngle	false	false	int		-999..1000		0	false
			0	Tstep	false	false	nat		0..255		0	false
			2	targetNotSteady	true	false	_bool				false	false
			2	atTarget	false	false	_bool				false	false
			ImeIMVariable2.end
			ImeIMFsm.
			
				ImeICFsmstate.iref
				1
				ImeICFsmstate.end
				ImeIMFsmstate.irefRefWdbeCFsmstate	sref	Extip	Comment
				0	init	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					inv	reqInvMoveto	moveto
					inv	reqInvSet	set
					inv	reqInvZero	zero
					ready	else
					ImeIAMFsmstateStep.end
				0	ready	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					runB	Tstep/=0		not targetNotSteady and rng	steady
					runB	Tstep/=0		targetNotSteady and not atTarget	target
					ready	Tstep/=0		else	hold
					ImeIAMFsmstateStep.end
				1	runA	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					runB	tkclk	runA
					ImeIAMFsmstateStep.end
				1	runB	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					ready	!tkclk	runB	targetNotSteady and target=angle	done
					runA	!tkclk	runB	else
					ImeIAMFsmstateStep.end
				0	inv	false
					ImeIAMFsmstateStep.srefFnxRefWdbeMFsmstate	Cond1	Ip1	Cond2	Ip2	Cond3	Ip3	Cond4	Ip4
					init	(!reqInvMoveto and ackInvMoveto_sig) or (!reqInvSet and ackInvSet_sig) or (!reqInvZero and ackInvZero_sig)
					ImeIAMFsmstateStep.end
				ImeIMFsmstate.end
			ImeIMFsm.end
		ImeIMProcess.end
	iccl_ip_AXI;top;step	iobufM0
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		PAD							m0
		retrupd	0		D								m0_sig
		retrupd	0		E								m0z
		ImeIMPort.end
	iccl_ip_AXI;top	tkclksrc
		ImeIMGeneric.srefIxWdbeVIop	irefRefWdbeCGeneric	sref	srefWdbeKHdltype	Width	Minmax	Defval	srcSrefWdbeMGeneric	Comment
		retrupd	0	fMclk					fMclk
		ImeIMGeneric.end
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		retrupd	0		reset								reset
		retrupd	0		mclk								mclk
		retrupd	0		tkclk								tkclk
		ImeIMPort.end
	ImeIMModule.end
mcep
	ImeIMBank.srefIxWdbeVIop	sref	srefKVoltstd
	retrupd	bank4a	_3v3
		ImeIMPin.srefIxWdbeVIop	irefRefWdbeCPin	sref	Location
		retrupd	0	d2	AH19	IOB4A55	missing: RGB LED's, debug buttons
		retrupd	0	d3	AF13	IOB4A19
		retrupd	0	d4	AG19	IOB4A54
		retrupd	0	d5	AG13	IOB4A18
		retrupd	0	d6	AH22	IOB4A51
		retrupd	0	d7	AF23	IOB4A14
		retrupd	0	d8	AH23	IOB4A50
		retrupd	0	d9	AG23	IOB4A15
		retrupd	0	xclk	AH24	IOB4A49
		retrupd	0	pclk	AF21	IOB4A12
		retrupd	0	href	AG24	IOB4A48
		retrupd	0	vsync	AF22	IOB4A13
		retrupd	0	rst	AD19	IOB4A8
		retrupd	0	pwdn	AE19	IOB4A9
		retrupd	0	sioc	AH27	IOB4A43
		retrupd	0	siod	AG25	IOB4A7
		retrupd	0	cs0	AG28	IOB4A42
		retrupd	0	nslp	AF25	IOB4A6
		retrupd	0	cs1	AF28	IOB4A41
		retrupd	0	m0	AD20	IOB4A5
		retrupd	0	sclk	AF27	IOB4A40
		retrupd	0	dir	AE20	IOB4A4
		retrupd	0	mosi	AH9	IOB4A33
		retrupd	0	step0	U13	IOB4A3
		ImeIMPin.end
	ImeIMBank.end
mpbb
	ImeIMBank.srefIxWdbeVIop	sref	srefKVoltstd
	retrupd	bank43	_3v3
		ImeICPin.iref
		1
		2
		ImeICPin.end
		ImeIMPin.srefIxWdbeVIop	irefRefWdbeCPin	sref	Location	carrier board		connector
		retrupd	1	cs	AE12	IO3[0]	IO3_D0_P	A85		IO3 <-> J5 (arty) <-> PMOD1 (cleb)
		retrupd	1	sclk	AF11	IO3[1]	IO3_D4_P	A73
		retrupd	1	mosi	AF12	IO3[2]	IO3_D1_N	A87
		retrupd	0	nslp	AG11	IO3[3]	IO3_D5_N	A75
		retrupd	0	nflt	AH12	IO3[4]	IO3_D2_P	A67
		retrupd	0	m0	AB10	IO3[5]	IO3_D6_P	A79
		retrupd	0	dir	AH11	IO3[6]	IO3_D3_N	A69
		retrupd	0	step0	AB9	IO3[7]	IO3_D7_N	A81
		retrupd	2	dbg0	W10	IO4[1]	IO4_D4_P	A70	scl	IO4 <-> J4 (arty) <-> PMOD0 (cleb)
		retrupd	2	dbg1	Y10	IO4[3]	IO4_D5_N	A72	sda
		retrupd	2	dbg2	Y9	IO4[4]	IO4_D2_P	A64	csi_clk_lp
		retrupd	2	dbg3	AC12	IO4[5]	IO4_D6_P	A76	csi_d0_lp
		retrupd	2	dbg4	AA8	IO4[6]	IO4_D3_N	A66
		retrupd	2	dbg5	AD12	IO4[7]	IO4_D7_N	A78
		ImeIMPin.end
	retrupd	bank65	_1v2
		ImeICPin.iref
		1
		2
		3
		4
		5
		6
		ImeICPin.end
		ImeIMPin.srefIxWdbeVIop	irefRefWdbeCPin	sref	Location	carrier board		connector
		retrupd	1	csia_clk_p	L7	FMC_LA01_CC_P		B130	L13
		retrupd	1	csia_clk_n	L6	FMC_LA01_CC_N		B132
		retrupd	2	csia_d0_p	K8	FMC_LA06_P		B136	L22
		retrupd	2	csia_d0_n	K7	FMC_LA06_N		B138
		retrupd	3	csia_d1_p	H9	FMC_LA07_P		B124	L24
		retrupd	3	csia_d1_n	H8	FMC_LA07_N		B126
		retrupd	4	csia_d2_p	J7	FMC_LA08_P		B120	L21
		retrupd	4	csia_d2_n	H7	FMC_LA08_N		B122
		retrupd	5	csia_d3_p	J6	FMC_LA09_P		B114	L20
		retrupd	5	csia_d3_n	H6	FMC_LA09_N		B116
		retrupd	6	led[0]	K9	FMC_LA05_P		B142	L23	level-shifted
		retrupd	6	led[1]	J9	FMC_LA05_N		B144		level-shifted
		retrupd	6	led[2]	M8	FMC_LA04_P		B148	L18	level-shifted
		retrupd	6	led[3]	L8	FMC_LA04_N		B150		level-shifted
		retrupd	6	led[4]	N7	FMC_LA03_P		B160	L15	level-shifted
		retrupd	6	led[5]	N6	FMC_LA03_N		B162		level-shifted
		retrupd	6	led[6]	N9	FMC_LA02_P		B164	L17	level-shifted
		retrupd	6	led[7]	N8	FMC_LA02_N		B166		level-shifted
		ImeIMPin.end
	retrupd	bank66	_1v2
		ImeICPin.iref
		1
		2
		3
		4
		5
		6
		7
		8
		9
		10
		11
		12
		ImeICPin.end
		ImeIMPin.srefIxWdbeVIop	irefRefWdbeCPin	sref	Location	carrier board		connector
		retrupd	1	csib_clk_p	D7	FMC_LA18_CC_P		B123	L13
		retrupd	1	csib_clk_n	D6	FMC_LA18_CC_N		B125
		retrupd	2	csib_d0_p	C8	FMC_LA24_P		B129	L22
		retrupd	2	csib_d0_n	B8	FMC_LA24_N		B131
		retrupd	3	csib_d1_p	A9	FMC_LA25_P		B117	L23
		retrupd	3	csib_d1_n	A8	FMC_LA25_N		B119
		retrupd	4	csib_d2_p	A7	FMC_LA26_P		B111	L21
		retrupd	4	csib_d2_n	A6	FMC_LA26_N		B113
		retrupd	5	csib_d3_p	C6	FMC_LA27_P		B107	L20
		retrupd	5	csib_d3_n	B6	FMC_LA27_N		B109
		retrupd	6	scla	C1	FMC_LA33_P		B75	L7	level-shifted
		retrupd	6	sdaa	B1	FMC_LA33_N		B77		level-shifted
		retrupd	7	triga	G5	FMC_LA32_P		B81	L6	level-shifted
		retrupd	7	flsha	F5	FMC_LA32_N		B83		level-shifted
		retrupd	8	sclb	A2	FMC_LA31_P		B87	L8	level-shifted
		retrupd	8	sdab	A1	FMC_LA31_N		B89		level-shifted
		retrupd	9	trigb	B3	FMC_LA30_P		B91	L9	level-shifted
		retrupd	9	flshb	A3	FMC_LA30_N		B93		level-shifted
		retrupd	10	btn0	B4	FMC_LA29_P		B97	L10
		retrupd	10	btn1	A4	FMC_LA29_N		B99
		retrupd	10	btn2	B5	FMC_LA28_P		B101	L19
		retrupd	10	btn3	A5	FMC_LA28_N		B103
		retrupd	11	led4_b	C9	FMC_LA23_P		B133	L24	level-shifted
		retrupd	11	led4_g	B9	FMC_LA23_N		B135		level-shifted
		retrupd	11	led4_r	E9	FMC_LA22_P		B139	L18	level-shifted
		retrupd	12	led5_b	D9	FMC_LA22_N		B141		level-shifted
		retrupd	12	led5_g	F8	FMC_LA21_P		B145	L17	level-shifted
		retrupd	12	led5_r	E8	FMC_LA21_N		B147		level-shifted
		ImeIMPin.end
	ImeIMBank.end
ubdk
	ImeIMBank.srefIxWdbeVIop	sref	srefKVoltstd
	retrupd	p0	void
		ImeIMPin.srefIxWdbeVIop	irefRefWdbeCPin	sref	Location
		retr	0	p0.0
			ImeIJMPinSref.srefX1RefWdbeMPeripheral	sref
				nslp
			ImeIJMPinSref.end
		retr	0	p0.1
			ImeIJMPinSref.srefX1RefWdbeMPeripheral	sref
				dispcs
			ImeIJMPinSref.end
		retr	0	p0.6
			ImeIJMPinSref.srefX1RefWdbeMPeripheral	sref
			spi0	sclk
			ImeIJMPinSref.end
		retr	0	p0.7
			ImeIJMPinSref.srefX1RefWdbeMPeripheral	sref
				m0
			ImeIJMPinSref.end
		ImeIMPin.end
	retrupd	p1	void
		ImeIMPin.srefIxWdbeVIop	irefRefWdbeCPin	sref	Location
		retr	0	p1.0
			ImeIJMPinSref.srefX1RefWdbeMPeripheral	sref
			spi0	mosi
			ImeIJMPinSref.end
		retr	0	p1.1
			ImeIJMPinSref.srefX1RefWdbeMPeripheral	sref
			pca0	step0
			ImeIJMPinSref.end
		retr	0	p1.4
			ImeIJMPinSref.srefX1RefWdbeMPeripheral	sref
				ledr
			ImeIJMPinSref.end
		retr	0	p1.5
			ImeIJMPinSref.srefX1RefWdbeMPeripheral	sref
				ledg
			ImeIJMPinSref.end
		retr	0	p1.6
			ImeIJMPinSref.srefX1RefWdbeMPeripheral	sref
				ledb
			ImeIJMPinSref.end
		retr	0	p1.7
			ImeIJMPinSref.srefX1RefWdbeMPeripheral	sref
				dir
			ImeIJMPinSref.end
		ImeIMPin.end
	retrupd	p2	void
		ImeIMPin.srefIxWdbeVIop	irefRefWdbeCPin	sref	Location
		retr	0	p2.1
			ImeIJMPinSref.srefX1RefWdbeMPeripheral	sref
				cs
			ImeIJMPinSref.end
		retr	0	p2.2
			ImeIJMPinSref.srefX1RefWdbeMPeripheral	sref
				nflt
			ImeIJMPinSref.end
		retr	0	p2.3
			ImeIJMPinSref.srefX1RefWdbeMPeripheral	sref
				dispen
			ImeIJMPinSref.end
		ImeIMPin.end
	ImeIMBank.end
	ImeIMInterrupt1.sref	Comment
	TIMER0_IRQn
	ImeIMInterrupt1.end
	ImeICSignal1.iref
	1
	2
	ImeICSignal1.end
	ImeIMSignal1.srefIxVBasetype	irefRefWdbeCSignal	srefMgeUref	sref	Comment
	hshk	1	disp	reqDispToMutexLock
	hshk	1	mutex	ackDispToMutexLock
	hshk	2	laser	reqLaserToMutexLock
	hshk	2	mutex	ackLaserToMutexLock
	ImeIMSignal1.end
	ImeIMModule.hsrefSupRefWdbeMModule	sref
		chrono
		ImeIMSensitivity1.srefSrcIxVTbl	srefSrcUref
		int	TIMER0_IRQn
		ImeIMSensitivity1.end
		disp
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		ins	0	rtepin	dispen	out	sl	1			dispen
		ins	0	rtepin	dispcs	out	sl	1			dispcs
		ImeIMPort.end
		laser
		ImeICPort.iref
		1
		ImeICPort.end
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		ins	1	rtepin	cs0	out	sl	1			cs0
		ins	1	rtepin	cs1	out	sl	1			cs1
		ImeIMPort.end
		ImeIMProcess.sref	clkSrefWdbeMSignal	asrSrefWdbeMSignal	Falling	Syncrst	Extip	Comment
		op			false		false	main operation
			ImeIMFsm.
			
				ImeICFsmstate.iref
				1
				ImeICFsmstate.end
				ImeIMFsmstate.irefRefWdbeCFsmstate	sref	Extip	Comment
				1	prepA	false
				1	prepB	false
				1	prepC	false
				0	init	false
				0	idle	false
				0	setLeft	false
				0	setRight	false
				0	inv	false
				ImeIMFsmstate.end
			ImeIMFsm.end
		ImeIMProcess.end
		mutex
		ImeIMProcess.sref	clkSrefWdbeMSignal	asrSrefWdbeMSignal	Falling	Syncrst	Extip	Comment
		op			false		false	main operation
			ImeIMFsm.
			
				ImeIMFsmstate.irefRefWdbeCFsmstate	sref	Extip	Comment
				0	idle	false
				0	locked	false
				ImeIMFsmstate.end
			ImeIMFsm.end
		ImeIMProcess.end
		state
		ImeICPort.iref
		1
		ImeICPort.end
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		ins	1	rtepin	ledr	out	sl	1			ledr
		ins	1	rtepin	ledg	out	sl	1			ledg
		ins	1	rtepin	ledb	out	sl	1			ledb
		ImeIMPort.end
		step
		ImeICPort.iref
		1
		ImeICPort.end
		ImeIMPort.srefIxWdbeVIop	irefRefWdbeCPort	srefMdlIxVCat	sref	srefIxVDir	srefWdbeKHdltype	Width	Minmax	Defval	cpiSrefWdbeMPin	cprSrefWdbeMPort	csiSrefWdbeMSignal	Comment
		ins	1	rtepin	nslp	out	sl	1			nslp
		ins	1	rtepin	m0	out	sl	1			m0
		ins	1	rtepin	dir	out	sl	1			dir
		ins	1	rtepin	step0	out	sl	1			step0
		ImeIMPort.end
	ImeIMModule.end
ImeIMUnit.end
